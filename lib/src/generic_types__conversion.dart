import 'package:here_sdk/src/sdk/core/geo_coordinates.dart';
import 'dart:ffi';
import 'package:here_sdk/src/_library_context.dart' as __lib;
import 'package:here_sdk/src/builtin_types__conversion.dart';
import 'package:here_sdk/src/sdk/core/localized_text.dart';
import 'package:intl/locale.dart';
import 'package:here_sdk/src/sdk/mapview/map_marker.dart';
import 'package:here_sdk/src/sdk/mapview/map_polygon.dart';
import 'package:here_sdk/src/sdk/mapview/map_polyline.dart';
import 'package:here_sdk/src/sdk/core/country_code.dart';
import 'package:here_sdk/src/sdk/core/geo_box.dart';
import 'package:here_sdk/src/sdk/core/geo_polygon.dart';
import 'package:here_sdk/src/sdk/routing/attribution.dart';
import 'package:here_sdk/src/sdk/routing/charging_connector_type.dart';
import 'package:here_sdk/src/sdk/routing/fare.dart';
import 'package:here_sdk/src/sdk/routing/hazardous_good.dart';
import 'package:here_sdk/src/sdk/routing/isoline.dart';
import 'package:here_sdk/src/sdk/routing/maneuver.dart';
import 'package:here_sdk/src/sdk/routing/notice.dart';
import 'package:here_sdk/src/sdk/routing/post_action.dart';
import 'package:here_sdk/src/sdk/routing/pre_action.dart';
import 'package:here_sdk/src/sdk/routing/road_features.dart';
import 'package:here_sdk/src/sdk/routing/route.dart';
import 'package:here_sdk/src/sdk/routing/section.dart';
import 'package:here_sdk/src/sdk/routing/section_notice.dart';
import 'package:here_sdk/src/sdk/routing/span.dart';
import 'package:here_sdk/src/sdk/routing/traffic_speed.dart';
import 'package:here_sdk/src/sdk/routing/transit_incident.dart';
import 'package:here_sdk/src/sdk/routing/transit_mode.dart';
import 'package:here_sdk/src/sdk/routing/transit_stop.dart';
import 'package:here_sdk/src/sdk/routing/waypoint.dart';
import 'package:here_sdk/src/sdk/routing/zone_category.dart';
import 'package:here_sdk/src/sdk/search/contact.dart';
import 'package:here_sdk/src/sdk/search/email_address.dart';
import 'package:here_sdk/src/sdk/search/ev_charging_point.dart';
import 'package:here_sdk/src/sdk/search/ev_connector.dart';
import 'package:here_sdk/src/sdk/search/ev_connector_experimental.dart';
import 'package:here_sdk/src/sdk/search/highlight_type.dart';
import 'package:here_sdk/src/sdk/search/index_range.dart';
import 'package:here_sdk/src/sdk/search/landline_phone.dart';
import 'package:here_sdk/src/sdk/search/mobile_phone.dart';
import 'package:here_sdk/src/sdk/search/opening_hours.dart';
import 'package:here_sdk/src/sdk/search/place.dart';
import 'package:here_sdk/src/sdk/search/place_category.dart';
import 'package:here_sdk/src/sdk/search/schedule_details.dart';
import 'package:here_sdk/src/sdk/search/suggestion.dart';
import 'package:here_sdk/src/sdk/search/supplier_reference.dart';
import 'package:here_sdk/src/sdk/search/web_editorial.dart';
import 'package:here_sdk/src/sdk/search/web_image.dart';
import 'package:here_sdk/src/sdk/search/web_rating.dart';
import 'package:here_sdk/src/sdk/search/website_address.dart';
// Copyright (c) 2018-2021 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//







final _coreTypesListofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_core_types_ListOf_sdk_core_GeoCoordinates_create_handle'));
final _coreTypesListofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_core_types_ListOf_sdk_core_GeoCoordinates_release_handle'));
final _coreTypesListofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_core_types_ListOf_sdk_core_GeoCoordinates_insert'));
final _coreTypesListofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_core_types_ListOf_sdk_core_GeoCoordinates_iterator'));
final _coreTypesListofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_core_types_ListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _coreTypesListofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_core_types_ListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _coreTypesListofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_core_types_ListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _coreTypesListofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_core_types_ListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> coreTypesListofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _coreTypesListofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _coreTypesListofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> coreTypesListofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _coreTypesListofSdkCoreGeocoordinatesIterator(handle);
  while (_coreTypesListofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _coreTypesListofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _coreTypesListofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _coreTypesListofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void coreTypesListofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _coreTypesListofSdkCoreGeocoordinatesReleaseHandle(handle);

final _coreTypesListofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_core_types_ListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _coreTypesListofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_core_types_ListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _coreTypesListofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_core_types_ListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> coreTypesListofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates> value) {
  if (value.isEmpty) return Pointer<Void>.fromAddress(0);
  final _handle = coreTypesListofSdkCoreGeocoordinatesToFfi(value);
  final result = _coreTypesListofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  coreTypesListofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates> coreTypesListofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _coreTypesListofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = coreTypesListofSdkCoreGeocoordinatesFromFfi(_handle);
  coreTypesListofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void coreTypesListofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _coreTypesListofSdkCoreGeocoordinatesReleaseHandleNullable(handle);


// Copyright (c) 2018-2021 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//










final _heresdkCoreBindingsListofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_core_bindings_ListOf_Locale_create_handle'));
final _heresdkCoreBindingsListofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindings_ListOf_Locale_release_handle'));
final _heresdkCoreBindingsListofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_core_bindings_ListOf_Locale_insert'));
final _heresdkCoreBindingsListofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindings_ListOf_Locale_iterator'));
final _heresdkCoreBindingsListofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindings_ListOf_Locale_iterator_release_handle'));
final _heresdkCoreBindingsListofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_core_bindings_ListOf_Locale_iterator_is_valid'));
final _heresdkCoreBindingsListofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindings_ListOf_Locale_iterator_increment'));
final _heresdkCoreBindingsListofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindings_ListOf_Locale_iterator_get'));

Pointer<Void> heresdkCoreBindingsListofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkCoreBindingsListofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkCoreBindingsListofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkCoreBindingsListofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkCoreBindingsListofLocaleIterator(handle);
  while (_heresdkCoreBindingsListofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkCoreBindingsListofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkCoreBindingsListofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkCoreBindingsListofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkCoreBindingsListofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkCoreBindingsListofLocaleReleaseHandle(handle);

final _heresdkCoreBindingsListofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindings_ListOf_Locale_create_handle_nullable'));
final _heresdkCoreBindingsListofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindings_ListOf_Locale_release_handle_nullable'));
final _heresdkCoreBindingsListofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindings_ListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkCoreBindingsListofLocaleToFfiNullable(List<Locale> value) {
  if (value.isEmpty) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkCoreBindingsListofLocaleToFfi(value);
  final result = _heresdkCoreBindingsListofLocaleCreateHandleNullable(_handle);
  heresdkCoreBindingsListofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale> heresdkCoreBindingsListofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkCoreBindingsListofLocaleGetValueNullable(handle);
  final result = heresdkCoreBindingsListofLocaleFromFfi(_handle);
  heresdkCoreBindingsListofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkCoreBindingsListofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkCoreBindingsListofLocaleReleaseHandleNullable(handle);

final _heresdkCoreBindingsListofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_core_bindings_ListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkCoreBindingsListofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindings_ListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkCoreBindingsListofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_core_bindings_ListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkCoreBindingsListofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindings_ListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkCoreBindingsListofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindings_ListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkCoreBindingsListofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_core_bindings_ListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkCoreBindingsListofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindings_ListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkCoreBindingsListofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindings_ListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkCoreBindingsListofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkCoreBindingsListofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkCoreBindingsListofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkCoreBindingsListofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkCoreBindingsListofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkCoreBindingsListofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkCoreBindingsListofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkCoreBindingsListofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkCoreBindingsListofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkCoreBindingsListofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkCoreBindingsListofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkCoreBindingsListofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindings_ListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkCoreBindingsListofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindings_ListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkCoreBindingsListofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindings_ListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkCoreBindingsListofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates> value) {
  if (value.isEmpty) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkCoreBindingsListofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkCoreBindingsListofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkCoreBindingsListofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates> heresdkCoreBindingsListofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkCoreBindingsListofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkCoreBindingsListofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkCoreBindingsListofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkCoreBindingsListofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkCoreBindingsListofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkCoreBindingsListofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_core_bindings_ListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkCoreBindingsListofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindings_ListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkCoreBindingsListofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_core_bindings_ListOf_sdk_core_LocalizedText_insert'));
final _heresdkCoreBindingsListofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindings_ListOf_sdk_core_LocalizedText_iterator'));
final _heresdkCoreBindingsListofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindings_ListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkCoreBindingsListofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_core_bindings_ListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkCoreBindingsListofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindings_ListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkCoreBindingsListofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_core_bindings_ListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkCoreBindingsListofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkCoreBindingsListofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkCoreBindingsListofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkCoreBindingsListofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkCoreBindingsListofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkCoreBindingsListofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkCoreBindingsListofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkCoreBindingsListofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkCoreBindingsListofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkCoreBindingsListofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkCoreBindingsListofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkCoreBindingsListofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindings_ListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkCoreBindingsListofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindings_ListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkCoreBindingsListofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_core_bindings_ListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkCoreBindingsListofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText> value) {
  if (value.isEmpty) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkCoreBindingsListofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkCoreBindingsListofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkCoreBindingsListofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText> heresdkCoreBindingsListofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkCoreBindingsListofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkCoreBindingsListofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkCoreBindingsListofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkCoreBindingsListofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkCoreBindingsListofSdkCoreLocalizedtextReleaseHandleNullable(handle);


// Copyright (c) 2018-2021 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//










final _heresdkGesturesBindingsListofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_gestures_bindings_ListOf_Locale_create_handle'));
final _heresdkGesturesBindingsListofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindings_ListOf_Locale_release_handle'));
final _heresdkGesturesBindingsListofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindings_ListOf_Locale_insert'));
final _heresdkGesturesBindingsListofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindings_ListOf_Locale_iterator'));
final _heresdkGesturesBindingsListofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindings_ListOf_Locale_iterator_release_handle'));
final _heresdkGesturesBindingsListofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_gestures_bindings_ListOf_Locale_iterator_is_valid'));
final _heresdkGesturesBindingsListofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindings_ListOf_Locale_iterator_increment'));
final _heresdkGesturesBindingsListofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindings_ListOf_Locale_iterator_get'));

Pointer<Void> heresdkGesturesBindingsListofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkGesturesBindingsListofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkGesturesBindingsListofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkGesturesBindingsListofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkGesturesBindingsListofLocaleIterator(handle);
  while (_heresdkGesturesBindingsListofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkGesturesBindingsListofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkGesturesBindingsListofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkGesturesBindingsListofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkGesturesBindingsListofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkGesturesBindingsListofLocaleReleaseHandle(handle);

final _heresdkGesturesBindingsListofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindings_ListOf_Locale_create_handle_nullable'));
final _heresdkGesturesBindingsListofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindings_ListOf_Locale_release_handle_nullable'));
final _heresdkGesturesBindingsListofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindings_ListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkGesturesBindingsListofLocaleToFfiNullable(List<Locale> value) {
  if (value.isEmpty) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkGesturesBindingsListofLocaleToFfi(value);
  final result = _heresdkGesturesBindingsListofLocaleCreateHandleNullable(_handle);
  heresdkGesturesBindingsListofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale> heresdkGesturesBindingsListofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkGesturesBindingsListofLocaleGetValueNullable(handle);
  final result = heresdkGesturesBindingsListofLocaleFromFfi(_handle);
  heresdkGesturesBindingsListofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkGesturesBindingsListofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkGesturesBindingsListofLocaleReleaseHandleNullable(handle);

final _heresdkGesturesBindingsListofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_gestures_bindings_ListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkGesturesBindingsListofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindings_ListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkGesturesBindingsListofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindings_ListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkGesturesBindingsListofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindings_ListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkGesturesBindingsListofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindings_ListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkGesturesBindingsListofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_gestures_bindings_ListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkGesturesBindingsListofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindings_ListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkGesturesBindingsListofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindings_ListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkGesturesBindingsListofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkGesturesBindingsListofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkGesturesBindingsListofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkGesturesBindingsListofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkGesturesBindingsListofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkGesturesBindingsListofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkGesturesBindingsListofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkGesturesBindingsListofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkGesturesBindingsListofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkGesturesBindingsListofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkGesturesBindingsListofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkGesturesBindingsListofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindings_ListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkGesturesBindingsListofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindings_ListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkGesturesBindingsListofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindings_ListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkGesturesBindingsListofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates> value) {
  if (value.isEmpty) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkGesturesBindingsListofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkGesturesBindingsListofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkGesturesBindingsListofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates> heresdkGesturesBindingsListofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkGesturesBindingsListofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkGesturesBindingsListofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkGesturesBindingsListofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkGesturesBindingsListofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkGesturesBindingsListofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkGesturesBindingsListofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_gestures_bindings_ListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkGesturesBindingsListofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindings_ListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkGesturesBindingsListofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindings_ListOf_sdk_core_LocalizedText_insert'));
final _heresdkGesturesBindingsListofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindings_ListOf_sdk_core_LocalizedText_iterator'));
final _heresdkGesturesBindingsListofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindings_ListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkGesturesBindingsListofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_gestures_bindings_ListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkGesturesBindingsListofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindings_ListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkGesturesBindingsListofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_gestures_bindings_ListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkGesturesBindingsListofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkGesturesBindingsListofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkGesturesBindingsListofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkGesturesBindingsListofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkGesturesBindingsListofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkGesturesBindingsListofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkGesturesBindingsListofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkGesturesBindingsListofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkGesturesBindingsListofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkGesturesBindingsListofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkGesturesBindingsListofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkGesturesBindingsListofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindings_ListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkGesturesBindingsListofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindings_ListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkGesturesBindingsListofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_gestures_bindings_ListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkGesturesBindingsListofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText> value) {
  if (value.isEmpty) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkGesturesBindingsListofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkGesturesBindingsListofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkGesturesBindingsListofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText> heresdkGesturesBindingsListofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkGesturesBindingsListofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkGesturesBindingsListofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkGesturesBindingsListofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkGesturesBindingsListofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkGesturesBindingsListofSdkCoreLocalizedtextReleaseHandleNullable(handle);


// Copyright (c) 2018-2021 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//










final _heresdkMapviewCommonBindingsListofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindings_ListOf_Locale_create_handle'));
final _heresdkMapviewCommonBindingsListofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindings_ListOf_Locale_release_handle'));
final _heresdkMapviewCommonBindingsListofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindings_ListOf_Locale_insert'));
final _heresdkMapviewCommonBindingsListofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindings_ListOf_Locale_iterator'));
final _heresdkMapviewCommonBindingsListofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindings_ListOf_Locale_iterator_release_handle'));
final _heresdkMapviewCommonBindingsListofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindings_ListOf_Locale_iterator_is_valid'));
final _heresdkMapviewCommonBindingsListofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindings_ListOf_Locale_iterator_increment'));
final _heresdkMapviewCommonBindingsListofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindings_ListOf_Locale_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingsListofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkMapviewCommonBindingsListofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkMapviewCommonBindingsListofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkMapviewCommonBindingsListofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingsListofLocaleIterator(handle);
  while (_heresdkMapviewCommonBindingsListofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingsListofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingsListofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingsListofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingsListofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingsListofLocaleReleaseHandle(handle);

final _heresdkMapviewCommonBindingsListofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindings_ListOf_Locale_create_handle_nullable'));
final _heresdkMapviewCommonBindingsListofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindings_ListOf_Locale_release_handle_nullable'));
final _heresdkMapviewCommonBindingsListofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindings_ListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingsListofLocaleToFfiNullable(List<Locale> value) {
  if (value.isEmpty) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingsListofLocaleToFfi(value);
  final result = _heresdkMapviewCommonBindingsListofLocaleCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingsListofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale> heresdkMapviewCommonBindingsListofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkMapviewCommonBindingsListofLocaleGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingsListofLocaleFromFfi(_handle);
  heresdkMapviewCommonBindingsListofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingsListofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingsListofLocaleReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingsListofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindings_ListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkMapviewCommonBindingsListofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindings_ListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkMapviewCommonBindingsListofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindings_ListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkMapviewCommonBindingsListofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindings_ListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkMapviewCommonBindingsListofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindings_ListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkMapviewCommonBindingsListofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindings_ListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkMapviewCommonBindingsListofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindings_ListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkMapviewCommonBindingsListofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindings_ListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingsListofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkMapviewCommonBindingsListofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkMapviewCommonBindingsListofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkMapviewCommonBindingsListofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingsListofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkMapviewCommonBindingsListofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingsListofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingsListofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingsListofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingsListofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingsListofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkMapviewCommonBindingsListofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindings_ListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkMapviewCommonBindingsListofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindings_ListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkMapviewCommonBindingsListofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindings_ListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingsListofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates> value) {
  if (value.isEmpty) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingsListofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkMapviewCommonBindingsListofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingsListofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates> heresdkMapviewCommonBindingsListofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkMapviewCommonBindingsListofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingsListofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkMapviewCommonBindingsListofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingsListofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingsListofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkMapviewCommonBindingsListofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_common_bindings_ListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkMapviewCommonBindingsListofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindings_ListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkMapviewCommonBindingsListofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindings_ListOf_sdk_core_LocalizedText_insert'));
final _heresdkMapviewCommonBindingsListofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindings_ListOf_sdk_core_LocalizedText_iterator'));
final _heresdkMapviewCommonBindingsListofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindings_ListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkMapviewCommonBindingsListofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindings_ListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkMapviewCommonBindingsListofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindings_ListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkMapviewCommonBindingsListofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_common_bindings_ListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkMapviewCommonBindingsListofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkMapviewCommonBindingsListofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkMapviewCommonBindingsListofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkMapviewCommonBindingsListofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewCommonBindingsListofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkMapviewCommonBindingsListofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewCommonBindingsListofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewCommonBindingsListofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewCommonBindingsListofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewCommonBindingsListofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewCommonBindingsListofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkMapviewCommonBindingsListofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindings_ListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkMapviewCommonBindingsListofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindings_ListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkMapviewCommonBindingsListofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_common_bindings_ListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkMapviewCommonBindingsListofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText> value) {
  if (value.isEmpty) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewCommonBindingsListofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkMapviewCommonBindingsListofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkMapviewCommonBindingsListofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText> heresdkMapviewCommonBindingsListofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkMapviewCommonBindingsListofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkMapviewCommonBindingsListofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkMapviewCommonBindingsListofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewCommonBindingsListofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewCommonBindingsListofSdkCoreLocalizedtextReleaseHandleNullable(handle);


// Copyright (c) 2018-2021 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//













final _heresdkMapviewHarpBindingsListofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindings_ListOf_Locale_create_handle'));
final _heresdkMapviewHarpBindingsListofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindings_ListOf_Locale_release_handle'));
final _heresdkMapviewHarpBindingsListofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindings_ListOf_Locale_insert'));
final _heresdkMapviewHarpBindingsListofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindings_ListOf_Locale_iterator'));
final _heresdkMapviewHarpBindingsListofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindings_ListOf_Locale_iterator_release_handle'));
final _heresdkMapviewHarpBindingsListofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindings_ListOf_Locale_iterator_is_valid'));
final _heresdkMapviewHarpBindingsListofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindings_ListOf_Locale_iterator_increment'));
final _heresdkMapviewHarpBindingsListofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindings_ListOf_Locale_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingsListofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkMapviewHarpBindingsListofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkMapviewHarpBindingsListofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkMapviewHarpBindingsListofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingsListofLocaleIterator(handle);
  while (_heresdkMapviewHarpBindingsListofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingsListofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingsListofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingsListofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingsListofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingsListofLocaleReleaseHandle(handle);

final _heresdkMapviewHarpBindingsListofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindings_ListOf_Locale_create_handle_nullable'));
final _heresdkMapviewHarpBindingsListofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindings_ListOf_Locale_release_handle_nullable'));
final _heresdkMapviewHarpBindingsListofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindings_ListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingsListofLocaleToFfiNullable(List<Locale> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingsListofLocaleToFfi(value);
  final result = _heresdkMapviewHarpBindingsListofLocaleCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingsListofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale> heresdkMapviewHarpBindingsListofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkMapviewHarpBindingsListofLocaleGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingsListofLocaleFromFfi(_handle);
  heresdkMapviewHarpBindingsListofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingsListofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingsListofLocaleReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingsListofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkMapviewHarpBindingsListofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkMapviewHarpBindingsListofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkMapviewHarpBindingsListofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkMapviewHarpBindingsListofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkMapviewHarpBindingsListofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkMapviewHarpBindingsListofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkMapviewHarpBindingsListofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingsListofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkMapviewHarpBindingsListofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkMapviewHarpBindingsListofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkMapviewHarpBindingsListofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingsListofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkMapviewHarpBindingsListofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingsListofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingsListofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingsListofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingsListofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingsListofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkMapviewHarpBindingsListofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkMapviewHarpBindingsListofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkMapviewHarpBindingsListofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingsListofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingsListofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkMapviewHarpBindingsListofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingsListofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates> heresdkMapviewHarpBindingsListofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkMapviewHarpBindingsListofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingsListofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkMapviewHarpBindingsListofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingsListofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingsListofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingsListofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkMapviewHarpBindingsListofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkMapviewHarpBindingsListofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_core_LocalizedText_insert'));
final _heresdkMapviewHarpBindingsListofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_core_LocalizedText_iterator'));
final _heresdkMapviewHarpBindingsListofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkMapviewHarpBindingsListofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkMapviewHarpBindingsListofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkMapviewHarpBindingsListofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingsListofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkMapviewHarpBindingsListofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkMapviewHarpBindingsListofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkMapviewHarpBindingsListofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingsListofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkMapviewHarpBindingsListofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingsListofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingsListofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingsListofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingsListofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingsListofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkMapviewHarpBindingsListofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkMapviewHarpBindingsListofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkMapviewHarpBindingsListofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingsListofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingsListofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkMapviewHarpBindingsListofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingsListofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText> heresdkMapviewHarpBindingsListofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkMapviewHarpBindingsListofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingsListofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkMapviewHarpBindingsListofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingsListofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingsListofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingsListofSdkMapviewMapmarkerCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_mapview_MapMarker_create_handle'));
final _heresdkMapviewHarpBindingsListofSdkMapviewMapmarkerReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_mapview_MapMarker_release_handle'));
final _heresdkMapviewHarpBindingsListofSdkMapviewMapmarkerInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_mapview_MapMarker_insert'));
final _heresdkMapviewHarpBindingsListofSdkMapviewMapmarkerIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_mapview_MapMarker_iterator'));
final _heresdkMapviewHarpBindingsListofSdkMapviewMapmarkerIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_mapview_MapMarker_iterator_release_handle'));
final _heresdkMapviewHarpBindingsListofSdkMapviewMapmarkerIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_mapview_MapMarker_iterator_is_valid'));
final _heresdkMapviewHarpBindingsListofSdkMapviewMapmarkerIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_mapview_MapMarker_iterator_increment'));
final _heresdkMapviewHarpBindingsListofSdkMapviewMapmarkerIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_mapview_MapMarker_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingsListofSdkMapviewMapmarkerToFfi(List<MapMarker> value) {
  final _result = _heresdkMapviewHarpBindingsListofSdkMapviewMapmarkerCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMapmarkerToFfi(element);
    _heresdkMapviewHarpBindingsListofSdkMapviewMapmarkerInsert(_result, _elementHandle);
    sdkMapviewMapmarkerReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapMarker> heresdkMapviewHarpBindingsListofSdkMapviewMapmarkerFromFfi(Pointer<Void> handle) {
  final result = List<MapMarker>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingsListofSdkMapviewMapmarkerIterator(handle);
  while (_heresdkMapviewHarpBindingsListofSdkMapviewMapmarkerIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingsListofSdkMapviewMapmarkerIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMapmarkerFromFfi(_elementHandle));
    } finally {
      sdkMapviewMapmarkerReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingsListofSdkMapviewMapmarkerIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingsListofSdkMapviewMapmarkerIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingsListofSdkMapviewMapmarkerReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingsListofSdkMapviewMapmarkerReleaseHandle(handle);

final _heresdkMapviewHarpBindingsListofSdkMapviewMapmarkerCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_mapview_MapMarker_create_handle_nullable'));
final _heresdkMapviewHarpBindingsListofSdkMapviewMapmarkerReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_mapview_MapMarker_release_handle_nullable'));
final _heresdkMapviewHarpBindingsListofSdkMapviewMapmarkerGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_mapview_MapMarker_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingsListofSdkMapviewMapmarkerToFfiNullable(List<MapMarker> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingsListofSdkMapviewMapmarkerToFfi(value);
  final result = _heresdkMapviewHarpBindingsListofSdkMapviewMapmarkerCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingsListofSdkMapviewMapmarkerReleaseFfiHandle(_handle);
  return result;
}

List<MapMarker> heresdkMapviewHarpBindingsListofSdkMapviewMapmarkerFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkMapviewHarpBindingsListofSdkMapviewMapmarkerGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingsListofSdkMapviewMapmarkerFromFfi(_handle);
  heresdkMapviewHarpBindingsListofSdkMapviewMapmarkerReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingsListofSdkMapviewMapmarkerReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingsListofSdkMapviewMapmarkerReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingsListofSdkMapviewMappolygonCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_mapview_MapPolygon_create_handle'));
final _heresdkMapviewHarpBindingsListofSdkMapviewMappolygonReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_mapview_MapPolygon_release_handle'));
final _heresdkMapviewHarpBindingsListofSdkMapviewMappolygonInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_mapview_MapPolygon_insert'));
final _heresdkMapviewHarpBindingsListofSdkMapviewMappolygonIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_mapview_MapPolygon_iterator'));
final _heresdkMapviewHarpBindingsListofSdkMapviewMappolygonIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_mapview_MapPolygon_iterator_release_handle'));
final _heresdkMapviewHarpBindingsListofSdkMapviewMappolygonIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_mapview_MapPolygon_iterator_is_valid'));
final _heresdkMapviewHarpBindingsListofSdkMapviewMappolygonIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_mapview_MapPolygon_iterator_increment'));
final _heresdkMapviewHarpBindingsListofSdkMapviewMappolygonIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_mapview_MapPolygon_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingsListofSdkMapviewMappolygonToFfi(List<MapPolygon> value) {
  final _result = _heresdkMapviewHarpBindingsListofSdkMapviewMappolygonCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMappolygonToFfi(element);
    _heresdkMapviewHarpBindingsListofSdkMapviewMappolygonInsert(_result, _elementHandle);
    sdkMapviewMappolygonReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapPolygon> heresdkMapviewHarpBindingsListofSdkMapviewMappolygonFromFfi(Pointer<Void> handle) {
  final result = List<MapPolygon>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingsListofSdkMapviewMappolygonIterator(handle);
  while (_heresdkMapviewHarpBindingsListofSdkMapviewMappolygonIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingsListofSdkMapviewMappolygonIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMappolygonFromFfi(_elementHandle));
    } finally {
      sdkMapviewMappolygonReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingsListofSdkMapviewMappolygonIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingsListofSdkMapviewMappolygonIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingsListofSdkMapviewMappolygonReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingsListofSdkMapviewMappolygonReleaseHandle(handle);

final _heresdkMapviewHarpBindingsListofSdkMapviewMappolygonCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_mapview_MapPolygon_create_handle_nullable'));
final _heresdkMapviewHarpBindingsListofSdkMapviewMappolygonReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_mapview_MapPolygon_release_handle_nullable'));
final _heresdkMapviewHarpBindingsListofSdkMapviewMappolygonGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_mapview_MapPolygon_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingsListofSdkMapviewMappolygonToFfiNullable(List<MapPolygon> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingsListofSdkMapviewMappolygonToFfi(value);
  final result = _heresdkMapviewHarpBindingsListofSdkMapviewMappolygonCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingsListofSdkMapviewMappolygonReleaseFfiHandle(_handle);
  return result;
}

List<MapPolygon> heresdkMapviewHarpBindingsListofSdkMapviewMappolygonFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkMapviewHarpBindingsListofSdkMapviewMappolygonGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingsListofSdkMapviewMappolygonFromFfi(_handle);
  heresdkMapviewHarpBindingsListofSdkMapviewMappolygonReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingsListofSdkMapviewMappolygonReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingsListofSdkMapviewMappolygonReleaseHandleNullable(handle);

final _heresdkMapviewHarpBindingsListofSdkMapviewMappolylineCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_mapview_MapPolyline_create_handle'));
final _heresdkMapviewHarpBindingsListofSdkMapviewMappolylineReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_mapview_MapPolyline_release_handle'));
final _heresdkMapviewHarpBindingsListofSdkMapviewMappolylineInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_mapview_MapPolyline_insert'));
final _heresdkMapviewHarpBindingsListofSdkMapviewMappolylineIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_mapview_MapPolyline_iterator'));
final _heresdkMapviewHarpBindingsListofSdkMapviewMappolylineIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_mapview_MapPolyline_iterator_release_handle'));
final _heresdkMapviewHarpBindingsListofSdkMapviewMappolylineIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_mapview_MapPolyline_iterator_is_valid'));
final _heresdkMapviewHarpBindingsListofSdkMapviewMappolylineIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_mapview_MapPolyline_iterator_increment'));
final _heresdkMapviewHarpBindingsListofSdkMapviewMappolylineIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_mapview_MapPolyline_iterator_get'));

Pointer<Void> heresdkMapviewHarpBindingsListofSdkMapviewMappolylineToFfi(List<MapPolyline> value) {
  final _result = _heresdkMapviewHarpBindingsListofSdkMapviewMappolylineCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkMapviewMappolylineToFfi(element);
    _heresdkMapviewHarpBindingsListofSdkMapviewMappolylineInsert(_result, _elementHandle);
    sdkMapviewMappolylineReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MapPolyline> heresdkMapviewHarpBindingsListofSdkMapviewMappolylineFromFfi(Pointer<Void> handle) {
  final result = List<MapPolyline>.empty(growable: true);
  final _iteratorHandle = _heresdkMapviewHarpBindingsListofSdkMapviewMappolylineIterator(handle);
  while (_heresdkMapviewHarpBindingsListofSdkMapviewMappolylineIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkMapviewHarpBindingsListofSdkMapviewMappolylineIteratorGet(_iteratorHandle);
    try {
      result.add(sdkMapviewMappolylineFromFfi(_elementHandle));
    } finally {
      sdkMapviewMappolylineReleaseFfiHandle(_elementHandle);
    }
    _heresdkMapviewHarpBindingsListofSdkMapviewMappolylineIteratorIncrement(_iteratorHandle);
  }
  _heresdkMapviewHarpBindingsListofSdkMapviewMappolylineIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkMapviewHarpBindingsListofSdkMapviewMappolylineReleaseFfiHandle(Pointer<Void> handle) => _heresdkMapviewHarpBindingsListofSdkMapviewMappolylineReleaseHandle(handle);

final _heresdkMapviewHarpBindingsListofSdkMapviewMappolylineCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_mapview_MapPolyline_create_handle_nullable'));
final _heresdkMapviewHarpBindingsListofSdkMapviewMappolylineReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_mapview_MapPolyline_release_handle_nullable'));
final _heresdkMapviewHarpBindingsListofSdkMapviewMappolylineGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_mapview_harp_bindings_ListOf_sdk_mapview_MapPolyline_get_value_nullable'));

Pointer<Void> heresdkMapviewHarpBindingsListofSdkMapviewMappolylineToFfiNullable(List<MapPolyline> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkMapviewHarpBindingsListofSdkMapviewMappolylineToFfi(value);
  final result = _heresdkMapviewHarpBindingsListofSdkMapviewMappolylineCreateHandleNullable(_handle);
  heresdkMapviewHarpBindingsListofSdkMapviewMappolylineReleaseFfiHandle(_handle);
  return result;
}

List<MapPolyline> heresdkMapviewHarpBindingsListofSdkMapviewMappolylineFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkMapviewHarpBindingsListofSdkMapviewMappolylineGetValueNullable(handle);
  final result = heresdkMapviewHarpBindingsListofSdkMapviewMappolylineFromFfi(_handle);
  heresdkMapviewHarpBindingsListofSdkMapviewMappolylineReleaseFfiHandle(_handle);
  return result;
}

void heresdkMapviewHarpBindingsListofSdkMapviewMappolylineReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkMapviewHarpBindingsListofSdkMapviewMappolylineReleaseHandleNullable(handle);


// Copyright (c) 2018-2021 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//

































final _heresdkRoutingBindingsListofIntCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindings_ListOf_Int_create_handle'));
final _heresdkRoutingBindingsListofIntReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_Int_release_handle'));
final _heresdkRoutingBindingsListofIntInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_bindings_ListOf_Int_insert'));
final _heresdkRoutingBindingsListofIntIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_Int_iterator'));
final _heresdkRoutingBindingsListofIntIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_Int_iterator_release_handle'));
final _heresdkRoutingBindingsListofIntIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_Int_iterator_is_valid'));
final _heresdkRoutingBindingsListofIntIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_Int_iterator_increment'));
final _heresdkRoutingBindingsListofIntIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_Int_iterator_get'));

Pointer<Void> heresdkRoutingBindingsListofIntToFfi(List<int> value) {
  final _result = _heresdkRoutingBindingsListofIntCreateHandle();
  for (final element in value) {
    final _elementHandle = (element);
    _heresdkRoutingBindingsListofIntInsert(_result, _elementHandle);
    
  }
  return _result;
}

List<int> heresdkRoutingBindingsListofIntFromFfi(Pointer<Void> handle) {
  final result = List<int>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingsListofIntIterator(handle);
  while (_heresdkRoutingBindingsListofIntIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingsListofIntIteratorGet(_iteratorHandle);
    try {
      result.add((_elementHandle));
    } finally {
      
    }
    _heresdkRoutingBindingsListofIntIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingsListofIntIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingsListofIntReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingsListofIntReleaseHandle(handle);

final _heresdkRoutingBindingsListofIntCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_Int_create_handle_nullable'));
final _heresdkRoutingBindingsListofIntReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_Int_release_handle_nullable'));
final _heresdkRoutingBindingsListofIntGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_Int_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingsListofIntToFfiNullable(List<int> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingsListofIntToFfi(value);
  final result = _heresdkRoutingBindingsListofIntCreateHandleNullable(_handle);
  heresdkRoutingBindingsListofIntReleaseFfiHandle(_handle);
  return result;
}

List<int> heresdkRoutingBindingsListofIntFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingBindingsListofIntGetValueNullable(handle);
  final result = heresdkRoutingBindingsListofIntFromFfi(_handle);
  heresdkRoutingBindingsListofIntReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingsListofIntReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingsListofIntReleaseHandleNullable(handle);

final _heresdkRoutingBindingsListofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindings_ListOf_Locale_create_handle'));
final _heresdkRoutingBindingsListofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_Locale_release_handle'));
final _heresdkRoutingBindingsListofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_Locale_insert'));
final _heresdkRoutingBindingsListofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_Locale_iterator'));
final _heresdkRoutingBindingsListofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_Locale_iterator_release_handle'));
final _heresdkRoutingBindingsListofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_Locale_iterator_is_valid'));
final _heresdkRoutingBindingsListofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_Locale_iterator_increment'));
final _heresdkRoutingBindingsListofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_Locale_iterator_get'));

Pointer<Void> heresdkRoutingBindingsListofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkRoutingBindingsListofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkRoutingBindingsListofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkRoutingBindingsListofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingsListofLocaleIterator(handle);
  while (_heresdkRoutingBindingsListofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingsListofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingsListofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingsListofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingsListofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingsListofLocaleReleaseHandle(handle);

final _heresdkRoutingBindingsListofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_Locale_create_handle_nullable'));
final _heresdkRoutingBindingsListofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_Locale_release_handle_nullable'));
final _heresdkRoutingBindingsListofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingsListofLocaleToFfiNullable(List<Locale> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingsListofLocaleToFfi(value);
  final result = _heresdkRoutingBindingsListofLocaleCreateHandleNullable(_handle);
  heresdkRoutingBindingsListofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale> heresdkRoutingBindingsListofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingBindingsListofLocaleGetValueNullable(handle);
  final result = heresdkRoutingBindingsListofLocaleFromFfi(_handle);
  heresdkRoutingBindingsListofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingsListofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingsListofLocaleReleaseHandleNullable(handle);

final _heresdkRoutingBindingsListofSdkCoreCountrycodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_CountryCode_create_handle'));
final _heresdkRoutingBindingsListofSdkCoreCountrycodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_CountryCode_release_handle'));
final _heresdkRoutingBindingsListofSdkCoreCountrycodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_CountryCode_insert'));
final _heresdkRoutingBindingsListofSdkCoreCountrycodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_CountryCode_iterator'));
final _heresdkRoutingBindingsListofSdkCoreCountrycodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_CountryCode_iterator_release_handle'));
final _heresdkRoutingBindingsListofSdkCoreCountrycodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_CountryCode_iterator_is_valid'));
final _heresdkRoutingBindingsListofSdkCoreCountrycodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_CountryCode_iterator_increment'));
final _heresdkRoutingBindingsListofSdkCoreCountrycodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_CountryCode_iterator_get'));

Pointer<Void> heresdkRoutingBindingsListofSdkCoreCountrycodeToFfi(List<CountryCode> value) {
  final _result = _heresdkRoutingBindingsListofSdkCoreCountrycodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreCountrycodeToFfi(element);
    _heresdkRoutingBindingsListofSdkCoreCountrycodeInsert(_result, _elementHandle);
    sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<CountryCode> heresdkRoutingBindingsListofSdkCoreCountrycodeFromFfi(Pointer<Void> handle) {
  final result = List<CountryCode>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingsListofSdkCoreCountrycodeIterator(handle);
  while (_heresdkRoutingBindingsListofSdkCoreCountrycodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingsListofSdkCoreCountrycodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreCountrycodeFromFfi(_elementHandle));
    } finally {
      sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingsListofSdkCoreCountrycodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingsListofSdkCoreCountrycodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingsListofSdkCoreCountrycodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingsListofSdkCoreCountrycodeReleaseHandle(handle);

final _heresdkRoutingBindingsListofSdkCoreCountrycodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_CountryCode_create_handle_nullable'));
final _heresdkRoutingBindingsListofSdkCoreCountrycodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_CountryCode_release_handle_nullable'));
final _heresdkRoutingBindingsListofSdkCoreCountrycodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_CountryCode_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingsListofSdkCoreCountrycodeToFfiNullable(List<CountryCode> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingsListofSdkCoreCountrycodeToFfi(value);
  final result = _heresdkRoutingBindingsListofSdkCoreCountrycodeCreateHandleNullable(_handle);
  heresdkRoutingBindingsListofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

List<CountryCode> heresdkRoutingBindingsListofSdkCoreCountrycodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingBindingsListofSdkCoreCountrycodeGetValueNullable(handle);
  final result = heresdkRoutingBindingsListofSdkCoreCountrycodeFromFfi(_handle);
  heresdkRoutingBindingsListofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingsListofSdkCoreCountrycodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingsListofSdkCoreCountrycodeReleaseHandleNullable(handle);

final _heresdkRoutingBindingsListofSdkCoreGeoboxCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_GeoBox_create_handle'));
final _heresdkRoutingBindingsListofSdkCoreGeoboxReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_GeoBox_release_handle'));
final _heresdkRoutingBindingsListofSdkCoreGeoboxInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_GeoBox_insert'));
final _heresdkRoutingBindingsListofSdkCoreGeoboxIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_GeoBox_iterator'));
final _heresdkRoutingBindingsListofSdkCoreGeoboxIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_GeoBox_iterator_release_handle'));
final _heresdkRoutingBindingsListofSdkCoreGeoboxIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_GeoBox_iterator_is_valid'));
final _heresdkRoutingBindingsListofSdkCoreGeoboxIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_GeoBox_iterator_increment'));
final _heresdkRoutingBindingsListofSdkCoreGeoboxIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_GeoBox_iterator_get'));

Pointer<Void> heresdkRoutingBindingsListofSdkCoreGeoboxToFfi(List<GeoBox> value) {
  final _result = _heresdkRoutingBindingsListofSdkCoreGeoboxCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeoboxToFfi(element);
    _heresdkRoutingBindingsListofSdkCoreGeoboxInsert(_result, _elementHandle);
    sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoBox> heresdkRoutingBindingsListofSdkCoreGeoboxFromFfi(Pointer<Void> handle) {
  final result = List<GeoBox>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingsListofSdkCoreGeoboxIterator(handle);
  while (_heresdkRoutingBindingsListofSdkCoreGeoboxIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingsListofSdkCoreGeoboxIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeoboxFromFfi(_elementHandle));
    } finally {
      sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingsListofSdkCoreGeoboxIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingsListofSdkCoreGeoboxIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingsListofSdkCoreGeoboxReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingsListofSdkCoreGeoboxReleaseHandle(handle);

final _heresdkRoutingBindingsListofSdkCoreGeoboxCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_GeoBox_create_handle_nullable'));
final _heresdkRoutingBindingsListofSdkCoreGeoboxReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_GeoBox_release_handle_nullable'));
final _heresdkRoutingBindingsListofSdkCoreGeoboxGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_GeoBox_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingsListofSdkCoreGeoboxToFfiNullable(List<GeoBox> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingsListofSdkCoreGeoboxToFfi(value);
  final result = _heresdkRoutingBindingsListofSdkCoreGeoboxCreateHandleNullable(_handle);
  heresdkRoutingBindingsListofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

List<GeoBox> heresdkRoutingBindingsListofSdkCoreGeoboxFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingBindingsListofSdkCoreGeoboxGetValueNullable(handle);
  final result = heresdkRoutingBindingsListofSdkCoreGeoboxFromFfi(_handle);
  heresdkRoutingBindingsListofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingsListofSdkCoreGeoboxReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingsListofSdkCoreGeoboxReleaseHandleNullable(handle);

final _heresdkRoutingBindingsListofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkRoutingBindingsListofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkRoutingBindingsListofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkRoutingBindingsListofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkRoutingBindingsListofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkRoutingBindingsListofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkRoutingBindingsListofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkRoutingBindingsListofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkRoutingBindingsListofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkRoutingBindingsListofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkRoutingBindingsListofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkRoutingBindingsListofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingsListofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkRoutingBindingsListofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingsListofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingsListofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingsListofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingsListofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingsListofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkRoutingBindingsListofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkRoutingBindingsListofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkRoutingBindingsListofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingsListofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingsListofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkRoutingBindingsListofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkRoutingBindingsListofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates> heresdkRoutingBindingsListofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingBindingsListofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkRoutingBindingsListofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkRoutingBindingsListofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingsListofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingsListofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkRoutingBindingsListofSdkCoreGeopolygonCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_GeoPolygon_create_handle'));
final _heresdkRoutingBindingsListofSdkCoreGeopolygonReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_GeoPolygon_release_handle'));
final _heresdkRoutingBindingsListofSdkCoreGeopolygonInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_GeoPolygon_insert'));
final _heresdkRoutingBindingsListofSdkCoreGeopolygonIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_GeoPolygon_iterator'));
final _heresdkRoutingBindingsListofSdkCoreGeopolygonIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_GeoPolygon_iterator_release_handle'));
final _heresdkRoutingBindingsListofSdkCoreGeopolygonIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_GeoPolygon_iterator_is_valid'));
final _heresdkRoutingBindingsListofSdkCoreGeopolygonIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_GeoPolygon_iterator_increment'));
final _heresdkRoutingBindingsListofSdkCoreGeopolygonIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_GeoPolygon_iterator_get'));

Pointer<Void> heresdkRoutingBindingsListofSdkCoreGeopolygonToFfi(List<GeoPolygon> value) {
  final _result = _heresdkRoutingBindingsListofSdkCoreGeopolygonCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeopolygonToFfi(element);
    _heresdkRoutingBindingsListofSdkCoreGeopolygonInsert(_result, _elementHandle);
    sdkCoreGeopolygonReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoPolygon> heresdkRoutingBindingsListofSdkCoreGeopolygonFromFfi(Pointer<Void> handle) {
  final result = List<GeoPolygon>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingsListofSdkCoreGeopolygonIterator(handle);
  while (_heresdkRoutingBindingsListofSdkCoreGeopolygonIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingsListofSdkCoreGeopolygonIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeopolygonFromFfi(_elementHandle));
    } finally {
      sdkCoreGeopolygonReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingsListofSdkCoreGeopolygonIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingsListofSdkCoreGeopolygonIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingsListofSdkCoreGeopolygonReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingsListofSdkCoreGeopolygonReleaseHandle(handle);

final _heresdkRoutingBindingsListofSdkCoreGeopolygonCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_GeoPolygon_create_handle_nullable'));
final _heresdkRoutingBindingsListofSdkCoreGeopolygonReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_GeoPolygon_release_handle_nullable'));
final _heresdkRoutingBindingsListofSdkCoreGeopolygonGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_GeoPolygon_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingsListofSdkCoreGeopolygonToFfiNullable(List<GeoPolygon> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingsListofSdkCoreGeopolygonToFfi(value);
  final result = _heresdkRoutingBindingsListofSdkCoreGeopolygonCreateHandleNullable(_handle);
  heresdkRoutingBindingsListofSdkCoreGeopolygonReleaseFfiHandle(_handle);
  return result;
}

List<GeoPolygon> heresdkRoutingBindingsListofSdkCoreGeopolygonFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingBindingsListofSdkCoreGeopolygonGetValueNullable(handle);
  final result = heresdkRoutingBindingsListofSdkCoreGeopolygonFromFfi(_handle);
  heresdkRoutingBindingsListofSdkCoreGeopolygonReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingsListofSdkCoreGeopolygonReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingsListofSdkCoreGeopolygonReleaseHandleNullable(handle);

final _heresdkRoutingBindingsListofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkRoutingBindingsListofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkRoutingBindingsListofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_LocalizedText_insert'));
final _heresdkRoutingBindingsListofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_LocalizedText_iterator'));
final _heresdkRoutingBindingsListofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkRoutingBindingsListofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkRoutingBindingsListofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkRoutingBindingsListofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkRoutingBindingsListofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkRoutingBindingsListofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkRoutingBindingsListofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkRoutingBindingsListofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingsListofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkRoutingBindingsListofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingsListofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingsListofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingsListofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingsListofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingsListofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkRoutingBindingsListofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkRoutingBindingsListofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkRoutingBindingsListofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingsListofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingsListofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkRoutingBindingsListofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkRoutingBindingsListofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText> heresdkRoutingBindingsListofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingBindingsListofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkRoutingBindingsListofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkRoutingBindingsListofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingsListofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingsListofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkRoutingBindingsListofSdkRoutingAttributionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Attribution_create_handle'));
final _heresdkRoutingBindingsListofSdkRoutingAttributionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Attribution_release_handle'));
final _heresdkRoutingBindingsListofSdkRoutingAttributionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Attribution_insert'));
final _heresdkRoutingBindingsListofSdkRoutingAttributionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Attribution_iterator'));
final _heresdkRoutingBindingsListofSdkRoutingAttributionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Attribution_iterator_release_handle'));
final _heresdkRoutingBindingsListofSdkRoutingAttributionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Attribution_iterator_is_valid'));
final _heresdkRoutingBindingsListofSdkRoutingAttributionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Attribution_iterator_increment'));
final _heresdkRoutingBindingsListofSdkRoutingAttributionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Attribution_iterator_get'));

Pointer<Void> heresdkRoutingBindingsListofSdkRoutingAttributionToFfi(List<Attribution> value) {
  final _result = _heresdkRoutingBindingsListofSdkRoutingAttributionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingAttributionToFfi(element);
    _heresdkRoutingBindingsListofSdkRoutingAttributionInsert(_result, _elementHandle);
    sdkRoutingAttributionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Attribution> heresdkRoutingBindingsListofSdkRoutingAttributionFromFfi(Pointer<Void> handle) {
  final result = List<Attribution>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingsListofSdkRoutingAttributionIterator(handle);
  while (_heresdkRoutingBindingsListofSdkRoutingAttributionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingsListofSdkRoutingAttributionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingAttributionFromFfi(_elementHandle));
    } finally {
      sdkRoutingAttributionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingsListofSdkRoutingAttributionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingsListofSdkRoutingAttributionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingsListofSdkRoutingAttributionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingsListofSdkRoutingAttributionReleaseHandle(handle);

final _heresdkRoutingBindingsListofSdkRoutingAttributionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Attribution_create_handle_nullable'));
final _heresdkRoutingBindingsListofSdkRoutingAttributionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Attribution_release_handle_nullable'));
final _heresdkRoutingBindingsListofSdkRoutingAttributionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Attribution_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingsListofSdkRoutingAttributionToFfiNullable(List<Attribution> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingsListofSdkRoutingAttributionToFfi(value);
  final result = _heresdkRoutingBindingsListofSdkRoutingAttributionCreateHandleNullable(_handle);
  heresdkRoutingBindingsListofSdkRoutingAttributionReleaseFfiHandle(_handle);
  return result;
}

List<Attribution> heresdkRoutingBindingsListofSdkRoutingAttributionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingBindingsListofSdkRoutingAttributionGetValueNullable(handle);
  final result = heresdkRoutingBindingsListofSdkRoutingAttributionFromFfi(_handle);
  heresdkRoutingBindingsListofSdkRoutingAttributionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingsListofSdkRoutingAttributionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingsListofSdkRoutingAttributionReleaseHandleNullable(handle);

final _heresdkRoutingBindingsListofSdkRoutingChargingconnectortypeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_ChargingConnectorType_create_handle'));
final _heresdkRoutingBindingsListofSdkRoutingChargingconnectortypeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_ChargingConnectorType_release_handle'));
final _heresdkRoutingBindingsListofSdkRoutingChargingconnectortypeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_ChargingConnectorType_insert'));
final _heresdkRoutingBindingsListofSdkRoutingChargingconnectortypeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_ChargingConnectorType_iterator'));
final _heresdkRoutingBindingsListofSdkRoutingChargingconnectortypeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_ChargingConnectorType_iterator_release_handle'));
final _heresdkRoutingBindingsListofSdkRoutingChargingconnectortypeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_ChargingConnectorType_iterator_is_valid'));
final _heresdkRoutingBindingsListofSdkRoutingChargingconnectortypeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_ChargingConnectorType_iterator_increment'));
final _heresdkRoutingBindingsListofSdkRoutingChargingconnectortypeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_ChargingConnectorType_iterator_get'));

Pointer<Void> heresdkRoutingBindingsListofSdkRoutingChargingconnectortypeToFfi(List<ChargingConnectorType> value) {
  final _result = _heresdkRoutingBindingsListofSdkRoutingChargingconnectortypeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingChargingconnectortypeToFfi(element);
    _heresdkRoutingBindingsListofSdkRoutingChargingconnectortypeInsert(_result, _elementHandle);
    sdkRoutingChargingconnectortypeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ChargingConnectorType> heresdkRoutingBindingsListofSdkRoutingChargingconnectortypeFromFfi(Pointer<Void> handle) {
  final result = List<ChargingConnectorType>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingsListofSdkRoutingChargingconnectortypeIterator(handle);
  while (_heresdkRoutingBindingsListofSdkRoutingChargingconnectortypeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingsListofSdkRoutingChargingconnectortypeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingChargingconnectortypeFromFfi(_elementHandle));
    } finally {
      sdkRoutingChargingconnectortypeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingsListofSdkRoutingChargingconnectortypeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingsListofSdkRoutingChargingconnectortypeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingsListofSdkRoutingChargingconnectortypeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingsListofSdkRoutingChargingconnectortypeReleaseHandle(handle);

final _heresdkRoutingBindingsListofSdkRoutingChargingconnectortypeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_ChargingConnectorType_create_handle_nullable'));
final _heresdkRoutingBindingsListofSdkRoutingChargingconnectortypeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_ChargingConnectorType_release_handle_nullable'));
final _heresdkRoutingBindingsListofSdkRoutingChargingconnectortypeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_ChargingConnectorType_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingsListofSdkRoutingChargingconnectortypeToFfiNullable(List<ChargingConnectorType> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingsListofSdkRoutingChargingconnectortypeToFfi(value);
  final result = _heresdkRoutingBindingsListofSdkRoutingChargingconnectortypeCreateHandleNullable(_handle);
  heresdkRoutingBindingsListofSdkRoutingChargingconnectortypeReleaseFfiHandle(_handle);
  return result;
}

List<ChargingConnectorType> heresdkRoutingBindingsListofSdkRoutingChargingconnectortypeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingBindingsListofSdkRoutingChargingconnectortypeGetValueNullable(handle);
  final result = heresdkRoutingBindingsListofSdkRoutingChargingconnectortypeFromFfi(_handle);
  heresdkRoutingBindingsListofSdkRoutingChargingconnectortypeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingsListofSdkRoutingChargingconnectortypeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingsListofSdkRoutingChargingconnectortypeReleaseHandleNullable(handle);

final _heresdkRoutingBindingsListofSdkRoutingFareCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Fare_create_handle'));
final _heresdkRoutingBindingsListofSdkRoutingFareReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Fare_release_handle'));
final _heresdkRoutingBindingsListofSdkRoutingFareInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Fare_insert'));
final _heresdkRoutingBindingsListofSdkRoutingFareIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Fare_iterator'));
final _heresdkRoutingBindingsListofSdkRoutingFareIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Fare_iterator_release_handle'));
final _heresdkRoutingBindingsListofSdkRoutingFareIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Fare_iterator_is_valid'));
final _heresdkRoutingBindingsListofSdkRoutingFareIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Fare_iterator_increment'));
final _heresdkRoutingBindingsListofSdkRoutingFareIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Fare_iterator_get'));

Pointer<Void> heresdkRoutingBindingsListofSdkRoutingFareToFfi(List<Fare> value) {
  final _result = _heresdkRoutingBindingsListofSdkRoutingFareCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingFareToFfi(element);
    _heresdkRoutingBindingsListofSdkRoutingFareInsert(_result, _elementHandle);
    sdkRoutingFareReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Fare> heresdkRoutingBindingsListofSdkRoutingFareFromFfi(Pointer<Void> handle) {
  final result = List<Fare>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingsListofSdkRoutingFareIterator(handle);
  while (_heresdkRoutingBindingsListofSdkRoutingFareIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingsListofSdkRoutingFareIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingFareFromFfi(_elementHandle));
    } finally {
      sdkRoutingFareReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingsListofSdkRoutingFareIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingsListofSdkRoutingFareIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingsListofSdkRoutingFareReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingsListofSdkRoutingFareReleaseHandle(handle);

final _heresdkRoutingBindingsListofSdkRoutingFareCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Fare_create_handle_nullable'));
final _heresdkRoutingBindingsListofSdkRoutingFareReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Fare_release_handle_nullable'));
final _heresdkRoutingBindingsListofSdkRoutingFareGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Fare_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingsListofSdkRoutingFareToFfiNullable(List<Fare> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingsListofSdkRoutingFareToFfi(value);
  final result = _heresdkRoutingBindingsListofSdkRoutingFareCreateHandleNullable(_handle);
  heresdkRoutingBindingsListofSdkRoutingFareReleaseFfiHandle(_handle);
  return result;
}

List<Fare> heresdkRoutingBindingsListofSdkRoutingFareFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingBindingsListofSdkRoutingFareGetValueNullable(handle);
  final result = heresdkRoutingBindingsListofSdkRoutingFareFromFfi(_handle);
  heresdkRoutingBindingsListofSdkRoutingFareReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingsListofSdkRoutingFareReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingsListofSdkRoutingFareReleaseHandleNullable(handle);

final _heresdkRoutingBindingsListofSdkRoutingHazardousgoodCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_HazardousGood_create_handle'));
final _heresdkRoutingBindingsListofSdkRoutingHazardousgoodReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_HazardousGood_release_handle'));
final _heresdkRoutingBindingsListofSdkRoutingHazardousgoodInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_HazardousGood_insert'));
final _heresdkRoutingBindingsListofSdkRoutingHazardousgoodIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_HazardousGood_iterator'));
final _heresdkRoutingBindingsListofSdkRoutingHazardousgoodIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_HazardousGood_iterator_release_handle'));
final _heresdkRoutingBindingsListofSdkRoutingHazardousgoodIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_HazardousGood_iterator_is_valid'));
final _heresdkRoutingBindingsListofSdkRoutingHazardousgoodIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_HazardousGood_iterator_increment'));
final _heresdkRoutingBindingsListofSdkRoutingHazardousgoodIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_HazardousGood_iterator_get'));

Pointer<Void> heresdkRoutingBindingsListofSdkRoutingHazardousgoodToFfi(List<HazardousGood> value) {
  final _result = _heresdkRoutingBindingsListofSdkRoutingHazardousgoodCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingHazardousgoodToFfi(element);
    _heresdkRoutingBindingsListofSdkRoutingHazardousgoodInsert(_result, _elementHandle);
    sdkRoutingHazardousgoodReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<HazardousGood> heresdkRoutingBindingsListofSdkRoutingHazardousgoodFromFfi(Pointer<Void> handle) {
  final result = List<HazardousGood>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingsListofSdkRoutingHazardousgoodIterator(handle);
  while (_heresdkRoutingBindingsListofSdkRoutingHazardousgoodIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingsListofSdkRoutingHazardousgoodIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingHazardousgoodFromFfi(_elementHandle));
    } finally {
      sdkRoutingHazardousgoodReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingsListofSdkRoutingHazardousgoodIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingsListofSdkRoutingHazardousgoodIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingsListofSdkRoutingHazardousgoodReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingsListofSdkRoutingHazardousgoodReleaseHandle(handle);

final _heresdkRoutingBindingsListofSdkRoutingHazardousgoodCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_HazardousGood_create_handle_nullable'));
final _heresdkRoutingBindingsListofSdkRoutingHazardousgoodReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_HazardousGood_release_handle_nullable'));
final _heresdkRoutingBindingsListofSdkRoutingHazardousgoodGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_HazardousGood_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingsListofSdkRoutingHazardousgoodToFfiNullable(List<HazardousGood> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingsListofSdkRoutingHazardousgoodToFfi(value);
  final result = _heresdkRoutingBindingsListofSdkRoutingHazardousgoodCreateHandleNullable(_handle);
  heresdkRoutingBindingsListofSdkRoutingHazardousgoodReleaseFfiHandle(_handle);
  return result;
}

List<HazardousGood> heresdkRoutingBindingsListofSdkRoutingHazardousgoodFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingBindingsListofSdkRoutingHazardousgoodGetValueNullable(handle);
  final result = heresdkRoutingBindingsListofSdkRoutingHazardousgoodFromFfi(_handle);
  heresdkRoutingBindingsListofSdkRoutingHazardousgoodReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingsListofSdkRoutingHazardousgoodReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingsListofSdkRoutingHazardousgoodReleaseHandleNullable(handle);

final _heresdkRoutingBindingsListofSdkRoutingIsolineCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Isoline_create_handle'));
final _heresdkRoutingBindingsListofSdkRoutingIsolineReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Isoline_release_handle'));
final _heresdkRoutingBindingsListofSdkRoutingIsolineInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Isoline_insert'));
final _heresdkRoutingBindingsListofSdkRoutingIsolineIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Isoline_iterator'));
final _heresdkRoutingBindingsListofSdkRoutingIsolineIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Isoline_iterator_release_handle'));
final _heresdkRoutingBindingsListofSdkRoutingIsolineIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Isoline_iterator_is_valid'));
final _heresdkRoutingBindingsListofSdkRoutingIsolineIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Isoline_iterator_increment'));
final _heresdkRoutingBindingsListofSdkRoutingIsolineIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Isoline_iterator_get'));

Pointer<Void> heresdkRoutingBindingsListofSdkRoutingIsolineToFfi(List<Isoline> value) {
  final _result = _heresdkRoutingBindingsListofSdkRoutingIsolineCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingIsolineToFfi(element);
    _heresdkRoutingBindingsListofSdkRoutingIsolineInsert(_result, _elementHandle);
    sdkRoutingIsolineReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Isoline> heresdkRoutingBindingsListofSdkRoutingIsolineFromFfi(Pointer<Void> handle) {
  final result = List<Isoline>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingsListofSdkRoutingIsolineIterator(handle);
  while (_heresdkRoutingBindingsListofSdkRoutingIsolineIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingsListofSdkRoutingIsolineIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingIsolineFromFfi(_elementHandle));
    } finally {
      sdkRoutingIsolineReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingsListofSdkRoutingIsolineIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingsListofSdkRoutingIsolineIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingsListofSdkRoutingIsolineReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingsListofSdkRoutingIsolineReleaseHandle(handle);

final _heresdkRoutingBindingsListofSdkRoutingIsolineCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Isoline_create_handle_nullable'));
final _heresdkRoutingBindingsListofSdkRoutingIsolineReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Isoline_release_handle_nullable'));
final _heresdkRoutingBindingsListofSdkRoutingIsolineGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Isoline_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingsListofSdkRoutingIsolineToFfiNullable(List<Isoline> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingsListofSdkRoutingIsolineToFfi(value);
  final result = _heresdkRoutingBindingsListofSdkRoutingIsolineCreateHandleNullable(_handle);
  heresdkRoutingBindingsListofSdkRoutingIsolineReleaseFfiHandle(_handle);
  return result;
}

List<Isoline> heresdkRoutingBindingsListofSdkRoutingIsolineFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingBindingsListofSdkRoutingIsolineGetValueNullable(handle);
  final result = heresdkRoutingBindingsListofSdkRoutingIsolineFromFfi(_handle);
  heresdkRoutingBindingsListofSdkRoutingIsolineReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingsListofSdkRoutingIsolineReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingsListofSdkRoutingIsolineReleaseHandleNullable(handle);

final _heresdkRoutingBindingsListofSdkRoutingManeuverCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Maneuver_create_handle'));
final _heresdkRoutingBindingsListofSdkRoutingManeuverReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Maneuver_release_handle'));
final _heresdkRoutingBindingsListofSdkRoutingManeuverInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Maneuver_insert'));
final _heresdkRoutingBindingsListofSdkRoutingManeuverIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Maneuver_iterator'));
final _heresdkRoutingBindingsListofSdkRoutingManeuverIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Maneuver_iterator_release_handle'));
final _heresdkRoutingBindingsListofSdkRoutingManeuverIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Maneuver_iterator_is_valid'));
final _heresdkRoutingBindingsListofSdkRoutingManeuverIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Maneuver_iterator_increment'));
final _heresdkRoutingBindingsListofSdkRoutingManeuverIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Maneuver_iterator_get'));

Pointer<Void> heresdkRoutingBindingsListofSdkRoutingManeuverToFfi(List<Maneuver> value) {
  final _result = _heresdkRoutingBindingsListofSdkRoutingManeuverCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingManeuverToFfi(element);
    _heresdkRoutingBindingsListofSdkRoutingManeuverInsert(_result, _elementHandle);
    sdkRoutingManeuverReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Maneuver> heresdkRoutingBindingsListofSdkRoutingManeuverFromFfi(Pointer<Void> handle) {
  final result = List<Maneuver>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingsListofSdkRoutingManeuverIterator(handle);
  while (_heresdkRoutingBindingsListofSdkRoutingManeuverIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingsListofSdkRoutingManeuverIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingManeuverFromFfi(_elementHandle));
    } finally {
      sdkRoutingManeuverReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingsListofSdkRoutingManeuverIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingsListofSdkRoutingManeuverIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingsListofSdkRoutingManeuverReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingsListofSdkRoutingManeuverReleaseHandle(handle);

final _heresdkRoutingBindingsListofSdkRoutingManeuverCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Maneuver_create_handle_nullable'));
final _heresdkRoutingBindingsListofSdkRoutingManeuverReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Maneuver_release_handle_nullable'));
final _heresdkRoutingBindingsListofSdkRoutingManeuverGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Maneuver_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingsListofSdkRoutingManeuverToFfiNullable(List<Maneuver> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingsListofSdkRoutingManeuverToFfi(value);
  final result = _heresdkRoutingBindingsListofSdkRoutingManeuverCreateHandleNullable(_handle);
  heresdkRoutingBindingsListofSdkRoutingManeuverReleaseFfiHandle(_handle);
  return result;
}

List<Maneuver> heresdkRoutingBindingsListofSdkRoutingManeuverFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingBindingsListofSdkRoutingManeuverGetValueNullable(handle);
  final result = heresdkRoutingBindingsListofSdkRoutingManeuverFromFfi(_handle);
  heresdkRoutingBindingsListofSdkRoutingManeuverReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingsListofSdkRoutingManeuverReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingsListofSdkRoutingManeuverReleaseHandleNullable(handle);

final _heresdkRoutingBindingsListofSdkRoutingNoticeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Notice_create_handle'));
final _heresdkRoutingBindingsListofSdkRoutingNoticeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Notice_release_handle'));
final _heresdkRoutingBindingsListofSdkRoutingNoticeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Notice_insert'));
final _heresdkRoutingBindingsListofSdkRoutingNoticeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Notice_iterator'));
final _heresdkRoutingBindingsListofSdkRoutingNoticeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Notice_iterator_release_handle'));
final _heresdkRoutingBindingsListofSdkRoutingNoticeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Notice_iterator_is_valid'));
final _heresdkRoutingBindingsListofSdkRoutingNoticeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Notice_iterator_increment'));
final _heresdkRoutingBindingsListofSdkRoutingNoticeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Notice_iterator_get'));

Pointer<Void> heresdkRoutingBindingsListofSdkRoutingNoticeToFfi(List<Notice> value) {
  final _result = _heresdkRoutingBindingsListofSdkRoutingNoticeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingNoticeToFfi(element);
    _heresdkRoutingBindingsListofSdkRoutingNoticeInsert(_result, _elementHandle);
    sdkRoutingNoticeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Notice> heresdkRoutingBindingsListofSdkRoutingNoticeFromFfi(Pointer<Void> handle) {
  final result = List<Notice>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingsListofSdkRoutingNoticeIterator(handle);
  while (_heresdkRoutingBindingsListofSdkRoutingNoticeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingsListofSdkRoutingNoticeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingNoticeFromFfi(_elementHandle));
    } finally {
      sdkRoutingNoticeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingsListofSdkRoutingNoticeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingsListofSdkRoutingNoticeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingsListofSdkRoutingNoticeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingsListofSdkRoutingNoticeReleaseHandle(handle);

final _heresdkRoutingBindingsListofSdkRoutingNoticeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Notice_create_handle_nullable'));
final _heresdkRoutingBindingsListofSdkRoutingNoticeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Notice_release_handle_nullable'));
final _heresdkRoutingBindingsListofSdkRoutingNoticeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Notice_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingsListofSdkRoutingNoticeToFfiNullable(List<Notice> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingsListofSdkRoutingNoticeToFfi(value);
  final result = _heresdkRoutingBindingsListofSdkRoutingNoticeCreateHandleNullable(_handle);
  heresdkRoutingBindingsListofSdkRoutingNoticeReleaseFfiHandle(_handle);
  return result;
}

List<Notice> heresdkRoutingBindingsListofSdkRoutingNoticeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingBindingsListofSdkRoutingNoticeGetValueNullable(handle);
  final result = heresdkRoutingBindingsListofSdkRoutingNoticeFromFfi(_handle);
  heresdkRoutingBindingsListofSdkRoutingNoticeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingsListofSdkRoutingNoticeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingsListofSdkRoutingNoticeReleaseHandleNullable(handle);

final _heresdkRoutingBindingsListofSdkRoutingPostactionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_PostAction_create_handle'));
final _heresdkRoutingBindingsListofSdkRoutingPostactionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_PostAction_release_handle'));
final _heresdkRoutingBindingsListofSdkRoutingPostactionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_PostAction_insert'));
final _heresdkRoutingBindingsListofSdkRoutingPostactionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_PostAction_iterator'));
final _heresdkRoutingBindingsListofSdkRoutingPostactionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_PostAction_iterator_release_handle'));
final _heresdkRoutingBindingsListofSdkRoutingPostactionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_PostAction_iterator_is_valid'));
final _heresdkRoutingBindingsListofSdkRoutingPostactionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_PostAction_iterator_increment'));
final _heresdkRoutingBindingsListofSdkRoutingPostactionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_PostAction_iterator_get'));

Pointer<Void> heresdkRoutingBindingsListofSdkRoutingPostactionToFfi(List<PostAction> value) {
  final _result = _heresdkRoutingBindingsListofSdkRoutingPostactionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPostactionToFfi(element);
    _heresdkRoutingBindingsListofSdkRoutingPostactionInsert(_result, _elementHandle);
    sdkRoutingPostactionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PostAction> heresdkRoutingBindingsListofSdkRoutingPostactionFromFfi(Pointer<Void> handle) {
  final result = List<PostAction>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingsListofSdkRoutingPostactionIterator(handle);
  while (_heresdkRoutingBindingsListofSdkRoutingPostactionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingsListofSdkRoutingPostactionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPostactionFromFfi(_elementHandle));
    } finally {
      sdkRoutingPostactionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingsListofSdkRoutingPostactionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingsListofSdkRoutingPostactionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingsListofSdkRoutingPostactionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingsListofSdkRoutingPostactionReleaseHandle(handle);

final _heresdkRoutingBindingsListofSdkRoutingPostactionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_PostAction_create_handle_nullable'));
final _heresdkRoutingBindingsListofSdkRoutingPostactionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_PostAction_release_handle_nullable'));
final _heresdkRoutingBindingsListofSdkRoutingPostactionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_PostAction_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingsListofSdkRoutingPostactionToFfiNullable(List<PostAction> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingsListofSdkRoutingPostactionToFfi(value);
  final result = _heresdkRoutingBindingsListofSdkRoutingPostactionCreateHandleNullable(_handle);
  heresdkRoutingBindingsListofSdkRoutingPostactionReleaseFfiHandle(_handle);
  return result;
}

List<PostAction> heresdkRoutingBindingsListofSdkRoutingPostactionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingBindingsListofSdkRoutingPostactionGetValueNullable(handle);
  final result = heresdkRoutingBindingsListofSdkRoutingPostactionFromFfi(_handle);
  heresdkRoutingBindingsListofSdkRoutingPostactionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingsListofSdkRoutingPostactionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingsListofSdkRoutingPostactionReleaseHandleNullable(handle);

final _heresdkRoutingBindingsListofSdkRoutingPreactionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_PreAction_create_handle'));
final _heresdkRoutingBindingsListofSdkRoutingPreactionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_PreAction_release_handle'));
final _heresdkRoutingBindingsListofSdkRoutingPreactionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_PreAction_insert'));
final _heresdkRoutingBindingsListofSdkRoutingPreactionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_PreAction_iterator'));
final _heresdkRoutingBindingsListofSdkRoutingPreactionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_PreAction_iterator_release_handle'));
final _heresdkRoutingBindingsListofSdkRoutingPreactionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_PreAction_iterator_is_valid'));
final _heresdkRoutingBindingsListofSdkRoutingPreactionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_PreAction_iterator_increment'));
final _heresdkRoutingBindingsListofSdkRoutingPreactionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_PreAction_iterator_get'));

Pointer<Void> heresdkRoutingBindingsListofSdkRoutingPreactionToFfi(List<PreAction> value) {
  final _result = _heresdkRoutingBindingsListofSdkRoutingPreactionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPreactionToFfi(element);
    _heresdkRoutingBindingsListofSdkRoutingPreactionInsert(_result, _elementHandle);
    sdkRoutingPreactionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PreAction> heresdkRoutingBindingsListofSdkRoutingPreactionFromFfi(Pointer<Void> handle) {
  final result = List<PreAction>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingsListofSdkRoutingPreactionIterator(handle);
  while (_heresdkRoutingBindingsListofSdkRoutingPreactionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingsListofSdkRoutingPreactionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPreactionFromFfi(_elementHandle));
    } finally {
      sdkRoutingPreactionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingsListofSdkRoutingPreactionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingsListofSdkRoutingPreactionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingsListofSdkRoutingPreactionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingsListofSdkRoutingPreactionReleaseHandle(handle);

final _heresdkRoutingBindingsListofSdkRoutingPreactionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_PreAction_create_handle_nullable'));
final _heresdkRoutingBindingsListofSdkRoutingPreactionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_PreAction_release_handle_nullable'));
final _heresdkRoutingBindingsListofSdkRoutingPreactionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_PreAction_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingsListofSdkRoutingPreactionToFfiNullable(List<PreAction> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingsListofSdkRoutingPreactionToFfi(value);
  final result = _heresdkRoutingBindingsListofSdkRoutingPreactionCreateHandleNullable(_handle);
  heresdkRoutingBindingsListofSdkRoutingPreactionReleaseFfiHandle(_handle);
  return result;
}

List<PreAction> heresdkRoutingBindingsListofSdkRoutingPreactionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingBindingsListofSdkRoutingPreactionGetValueNullable(handle);
  final result = heresdkRoutingBindingsListofSdkRoutingPreactionFromFfi(_handle);
  heresdkRoutingBindingsListofSdkRoutingPreactionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingsListofSdkRoutingPreactionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingsListofSdkRoutingPreactionReleaseHandleNullable(handle);

final _heresdkRoutingBindingsListofSdkRoutingRoadfeaturesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_RoadFeatures_create_handle'));
final _heresdkRoutingBindingsListofSdkRoutingRoadfeaturesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_RoadFeatures_release_handle'));
final _heresdkRoutingBindingsListofSdkRoutingRoadfeaturesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_RoadFeatures_insert'));
final _heresdkRoutingBindingsListofSdkRoutingRoadfeaturesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_RoadFeatures_iterator'));
final _heresdkRoutingBindingsListofSdkRoutingRoadfeaturesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_RoadFeatures_iterator_release_handle'));
final _heresdkRoutingBindingsListofSdkRoutingRoadfeaturesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_RoadFeatures_iterator_is_valid'));
final _heresdkRoutingBindingsListofSdkRoutingRoadfeaturesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_RoadFeatures_iterator_increment'));
final _heresdkRoutingBindingsListofSdkRoutingRoadfeaturesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_RoadFeatures_iterator_get'));

Pointer<Void> heresdkRoutingBindingsListofSdkRoutingRoadfeaturesToFfi(List<RoadFeatures> value) {
  final _result = _heresdkRoutingBindingsListofSdkRoutingRoadfeaturesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRoadfeaturesToFfi(element);
    _heresdkRoutingBindingsListofSdkRoutingRoadfeaturesInsert(_result, _elementHandle);
    sdkRoutingRoadfeaturesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<RoadFeatures> heresdkRoutingBindingsListofSdkRoutingRoadfeaturesFromFfi(Pointer<Void> handle) {
  final result = List<RoadFeatures>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingsListofSdkRoutingRoadfeaturesIterator(handle);
  while (_heresdkRoutingBindingsListofSdkRoutingRoadfeaturesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingsListofSdkRoutingRoadfeaturesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRoadfeaturesFromFfi(_elementHandle));
    } finally {
      sdkRoutingRoadfeaturesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingsListofSdkRoutingRoadfeaturesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingsListofSdkRoutingRoadfeaturesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingsListofSdkRoutingRoadfeaturesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingsListofSdkRoutingRoadfeaturesReleaseHandle(handle);

final _heresdkRoutingBindingsListofSdkRoutingRoadfeaturesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_RoadFeatures_create_handle_nullable'));
final _heresdkRoutingBindingsListofSdkRoutingRoadfeaturesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_RoadFeatures_release_handle_nullable'));
final _heresdkRoutingBindingsListofSdkRoutingRoadfeaturesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_RoadFeatures_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingsListofSdkRoutingRoadfeaturesToFfiNullable(List<RoadFeatures> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingsListofSdkRoutingRoadfeaturesToFfi(value);
  final result = _heresdkRoutingBindingsListofSdkRoutingRoadfeaturesCreateHandleNullable(_handle);
  heresdkRoutingBindingsListofSdkRoutingRoadfeaturesReleaseFfiHandle(_handle);
  return result;
}

List<RoadFeatures> heresdkRoutingBindingsListofSdkRoutingRoadfeaturesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingBindingsListofSdkRoutingRoadfeaturesGetValueNullable(handle);
  final result = heresdkRoutingBindingsListofSdkRoutingRoadfeaturesFromFfi(_handle);
  heresdkRoutingBindingsListofSdkRoutingRoadfeaturesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingsListofSdkRoutingRoadfeaturesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingsListofSdkRoutingRoadfeaturesReleaseHandleNullable(handle);

final _heresdkRoutingBindingsListofSdkRoutingRouteCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Route_create_handle'));
final _heresdkRoutingBindingsListofSdkRoutingRouteReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Route_release_handle'));
final _heresdkRoutingBindingsListofSdkRoutingRouteInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Route_insert'));
final _heresdkRoutingBindingsListofSdkRoutingRouteIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Route_iterator'));
final _heresdkRoutingBindingsListofSdkRoutingRouteIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Route_iterator_release_handle'));
final _heresdkRoutingBindingsListofSdkRoutingRouteIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Route_iterator_is_valid'));
final _heresdkRoutingBindingsListofSdkRoutingRouteIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Route_iterator_increment'));
final _heresdkRoutingBindingsListofSdkRoutingRouteIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Route_iterator_get'));

Pointer<Void> heresdkRoutingBindingsListofSdkRoutingRouteToFfi(List<Route> value) {
  final _result = _heresdkRoutingBindingsListofSdkRoutingRouteCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRouteToFfi(element);
    _heresdkRoutingBindingsListofSdkRoutingRouteInsert(_result, _elementHandle);
    sdkRoutingRouteReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Route> heresdkRoutingBindingsListofSdkRoutingRouteFromFfi(Pointer<Void> handle) {
  final result = List<Route>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingsListofSdkRoutingRouteIterator(handle);
  while (_heresdkRoutingBindingsListofSdkRoutingRouteIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingsListofSdkRoutingRouteIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRouteFromFfi(_elementHandle));
    } finally {
      sdkRoutingRouteReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingsListofSdkRoutingRouteIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingsListofSdkRoutingRouteIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingsListofSdkRoutingRouteReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingsListofSdkRoutingRouteReleaseHandle(handle);

final _heresdkRoutingBindingsListofSdkRoutingRouteCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Route_create_handle_nullable'));
final _heresdkRoutingBindingsListofSdkRoutingRouteReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Route_release_handle_nullable'));
final _heresdkRoutingBindingsListofSdkRoutingRouteGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Route_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingsListofSdkRoutingRouteToFfiNullable(List<Route> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingsListofSdkRoutingRouteToFfi(value);
  final result = _heresdkRoutingBindingsListofSdkRoutingRouteCreateHandleNullable(_handle);
  heresdkRoutingBindingsListofSdkRoutingRouteReleaseFfiHandle(_handle);
  return result;
}

List<Route> heresdkRoutingBindingsListofSdkRoutingRouteFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingBindingsListofSdkRoutingRouteGetValueNullable(handle);
  final result = heresdkRoutingBindingsListofSdkRoutingRouteFromFfi(_handle);
  heresdkRoutingBindingsListofSdkRoutingRouteReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingsListofSdkRoutingRouteReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingsListofSdkRoutingRouteReleaseHandleNullable(handle);

final _heresdkRoutingBindingsListofSdkRoutingSectionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Section_create_handle'));
final _heresdkRoutingBindingsListofSdkRoutingSectionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Section_release_handle'));
final _heresdkRoutingBindingsListofSdkRoutingSectionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Section_insert'));
final _heresdkRoutingBindingsListofSdkRoutingSectionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Section_iterator'));
final _heresdkRoutingBindingsListofSdkRoutingSectionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Section_iterator_release_handle'));
final _heresdkRoutingBindingsListofSdkRoutingSectionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Section_iterator_is_valid'));
final _heresdkRoutingBindingsListofSdkRoutingSectionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Section_iterator_increment'));
final _heresdkRoutingBindingsListofSdkRoutingSectionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Section_iterator_get'));

Pointer<Void> heresdkRoutingBindingsListofSdkRoutingSectionToFfi(List<Section> value) {
  final _result = _heresdkRoutingBindingsListofSdkRoutingSectionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSectionToFfi(element);
    _heresdkRoutingBindingsListofSdkRoutingSectionInsert(_result, _elementHandle);
    sdkRoutingSectionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Section> heresdkRoutingBindingsListofSdkRoutingSectionFromFfi(Pointer<Void> handle) {
  final result = List<Section>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingsListofSdkRoutingSectionIterator(handle);
  while (_heresdkRoutingBindingsListofSdkRoutingSectionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingsListofSdkRoutingSectionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSectionFromFfi(_elementHandle));
    } finally {
      sdkRoutingSectionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingsListofSdkRoutingSectionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingsListofSdkRoutingSectionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingsListofSdkRoutingSectionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingsListofSdkRoutingSectionReleaseHandle(handle);

final _heresdkRoutingBindingsListofSdkRoutingSectionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Section_create_handle_nullable'));
final _heresdkRoutingBindingsListofSdkRoutingSectionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Section_release_handle_nullable'));
final _heresdkRoutingBindingsListofSdkRoutingSectionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Section_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingsListofSdkRoutingSectionToFfiNullable(List<Section> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingsListofSdkRoutingSectionToFfi(value);
  final result = _heresdkRoutingBindingsListofSdkRoutingSectionCreateHandleNullable(_handle);
  heresdkRoutingBindingsListofSdkRoutingSectionReleaseFfiHandle(_handle);
  return result;
}

List<Section> heresdkRoutingBindingsListofSdkRoutingSectionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingBindingsListofSdkRoutingSectionGetValueNullable(handle);
  final result = heresdkRoutingBindingsListofSdkRoutingSectionFromFfi(_handle);
  heresdkRoutingBindingsListofSdkRoutingSectionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingsListofSdkRoutingSectionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingsListofSdkRoutingSectionReleaseHandleNullable(handle);

final _heresdkRoutingBindingsListofSdkRoutingSectionnoticeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_SectionNotice_create_handle'));
final _heresdkRoutingBindingsListofSdkRoutingSectionnoticeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_SectionNotice_release_handle'));
final _heresdkRoutingBindingsListofSdkRoutingSectionnoticeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_SectionNotice_insert'));
final _heresdkRoutingBindingsListofSdkRoutingSectionnoticeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_SectionNotice_iterator'));
final _heresdkRoutingBindingsListofSdkRoutingSectionnoticeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_SectionNotice_iterator_release_handle'));
final _heresdkRoutingBindingsListofSdkRoutingSectionnoticeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_SectionNotice_iterator_is_valid'));
final _heresdkRoutingBindingsListofSdkRoutingSectionnoticeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_SectionNotice_iterator_increment'));
final _heresdkRoutingBindingsListofSdkRoutingSectionnoticeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_SectionNotice_iterator_get'));

Pointer<Void> heresdkRoutingBindingsListofSdkRoutingSectionnoticeToFfi(List<SectionNotice> value) {
  final _result = _heresdkRoutingBindingsListofSdkRoutingSectionnoticeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSectionnoticeToFfi(element);
    _heresdkRoutingBindingsListofSdkRoutingSectionnoticeInsert(_result, _elementHandle);
    sdkRoutingSectionnoticeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SectionNotice> heresdkRoutingBindingsListofSdkRoutingSectionnoticeFromFfi(Pointer<Void> handle) {
  final result = List<SectionNotice>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingsListofSdkRoutingSectionnoticeIterator(handle);
  while (_heresdkRoutingBindingsListofSdkRoutingSectionnoticeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingsListofSdkRoutingSectionnoticeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSectionnoticeFromFfi(_elementHandle));
    } finally {
      sdkRoutingSectionnoticeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingsListofSdkRoutingSectionnoticeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingsListofSdkRoutingSectionnoticeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingsListofSdkRoutingSectionnoticeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingsListofSdkRoutingSectionnoticeReleaseHandle(handle);

final _heresdkRoutingBindingsListofSdkRoutingSectionnoticeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_SectionNotice_create_handle_nullable'));
final _heresdkRoutingBindingsListofSdkRoutingSectionnoticeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_SectionNotice_release_handle_nullable'));
final _heresdkRoutingBindingsListofSdkRoutingSectionnoticeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_SectionNotice_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingsListofSdkRoutingSectionnoticeToFfiNullable(List<SectionNotice> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingsListofSdkRoutingSectionnoticeToFfi(value);
  final result = _heresdkRoutingBindingsListofSdkRoutingSectionnoticeCreateHandleNullable(_handle);
  heresdkRoutingBindingsListofSdkRoutingSectionnoticeReleaseFfiHandle(_handle);
  return result;
}

List<SectionNotice> heresdkRoutingBindingsListofSdkRoutingSectionnoticeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingBindingsListofSdkRoutingSectionnoticeGetValueNullable(handle);
  final result = heresdkRoutingBindingsListofSdkRoutingSectionnoticeFromFfi(_handle);
  heresdkRoutingBindingsListofSdkRoutingSectionnoticeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingsListofSdkRoutingSectionnoticeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingsListofSdkRoutingSectionnoticeReleaseHandleNullable(handle);

final _heresdkRoutingBindingsListofSdkRoutingSpanCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Span_create_handle'));
final _heresdkRoutingBindingsListofSdkRoutingSpanReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Span_release_handle'));
final _heresdkRoutingBindingsListofSdkRoutingSpanInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Span_insert'));
final _heresdkRoutingBindingsListofSdkRoutingSpanIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Span_iterator'));
final _heresdkRoutingBindingsListofSdkRoutingSpanIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Span_iterator_release_handle'));
final _heresdkRoutingBindingsListofSdkRoutingSpanIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Span_iterator_is_valid'));
final _heresdkRoutingBindingsListofSdkRoutingSpanIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Span_iterator_increment'));
final _heresdkRoutingBindingsListofSdkRoutingSpanIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Span_iterator_get'));

Pointer<Void> heresdkRoutingBindingsListofSdkRoutingSpanToFfi(List<Span> value) {
  final _result = _heresdkRoutingBindingsListofSdkRoutingSpanCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSpanToFfi(element);
    _heresdkRoutingBindingsListofSdkRoutingSpanInsert(_result, _elementHandle);
    sdkRoutingSpanReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Span> heresdkRoutingBindingsListofSdkRoutingSpanFromFfi(Pointer<Void> handle) {
  final result = List<Span>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingsListofSdkRoutingSpanIterator(handle);
  while (_heresdkRoutingBindingsListofSdkRoutingSpanIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingsListofSdkRoutingSpanIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSpanFromFfi(_elementHandle));
    } finally {
      sdkRoutingSpanReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingsListofSdkRoutingSpanIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingsListofSdkRoutingSpanIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingsListofSdkRoutingSpanReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingsListofSdkRoutingSpanReleaseHandle(handle);

final _heresdkRoutingBindingsListofSdkRoutingSpanCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Span_create_handle_nullable'));
final _heresdkRoutingBindingsListofSdkRoutingSpanReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Span_release_handle_nullable'));
final _heresdkRoutingBindingsListofSdkRoutingSpanGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Span_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingsListofSdkRoutingSpanToFfiNullable(List<Span> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingsListofSdkRoutingSpanToFfi(value);
  final result = _heresdkRoutingBindingsListofSdkRoutingSpanCreateHandleNullable(_handle);
  heresdkRoutingBindingsListofSdkRoutingSpanReleaseFfiHandle(_handle);
  return result;
}

List<Span> heresdkRoutingBindingsListofSdkRoutingSpanFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingBindingsListofSdkRoutingSpanGetValueNullable(handle);
  final result = heresdkRoutingBindingsListofSdkRoutingSpanFromFfi(_handle);
  heresdkRoutingBindingsListofSdkRoutingSpanReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingsListofSdkRoutingSpanReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingsListofSdkRoutingSpanReleaseHandleNullable(handle);

final _heresdkRoutingBindingsListofSdkRoutingTrafficspeedCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_TrafficSpeed_create_handle'));
final _heresdkRoutingBindingsListofSdkRoutingTrafficspeedReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_TrafficSpeed_release_handle'));
final _heresdkRoutingBindingsListofSdkRoutingTrafficspeedInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_TrafficSpeed_insert'));
final _heresdkRoutingBindingsListofSdkRoutingTrafficspeedIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_TrafficSpeed_iterator'));
final _heresdkRoutingBindingsListofSdkRoutingTrafficspeedIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_TrafficSpeed_iterator_release_handle'));
final _heresdkRoutingBindingsListofSdkRoutingTrafficspeedIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_TrafficSpeed_iterator_is_valid'));
final _heresdkRoutingBindingsListofSdkRoutingTrafficspeedIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_TrafficSpeed_iterator_increment'));
final _heresdkRoutingBindingsListofSdkRoutingTrafficspeedIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_TrafficSpeed_iterator_get'));

Pointer<Void> heresdkRoutingBindingsListofSdkRoutingTrafficspeedToFfi(List<TrafficSpeed> value) {
  final _result = _heresdkRoutingBindingsListofSdkRoutingTrafficspeedCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTrafficspeedToFfi(element);
    _heresdkRoutingBindingsListofSdkRoutingTrafficspeedInsert(_result, _elementHandle);
    sdkRoutingTrafficspeedReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TrafficSpeed> heresdkRoutingBindingsListofSdkRoutingTrafficspeedFromFfi(Pointer<Void> handle) {
  final result = List<TrafficSpeed>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingsListofSdkRoutingTrafficspeedIterator(handle);
  while (_heresdkRoutingBindingsListofSdkRoutingTrafficspeedIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingsListofSdkRoutingTrafficspeedIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTrafficspeedFromFfi(_elementHandle));
    } finally {
      sdkRoutingTrafficspeedReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingsListofSdkRoutingTrafficspeedIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingsListofSdkRoutingTrafficspeedIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingsListofSdkRoutingTrafficspeedReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingsListofSdkRoutingTrafficspeedReleaseHandle(handle);

final _heresdkRoutingBindingsListofSdkRoutingTrafficspeedCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_TrafficSpeed_create_handle_nullable'));
final _heresdkRoutingBindingsListofSdkRoutingTrafficspeedReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_TrafficSpeed_release_handle_nullable'));
final _heresdkRoutingBindingsListofSdkRoutingTrafficspeedGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_TrafficSpeed_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingsListofSdkRoutingTrafficspeedToFfiNullable(List<TrafficSpeed> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingsListofSdkRoutingTrafficspeedToFfi(value);
  final result = _heresdkRoutingBindingsListofSdkRoutingTrafficspeedCreateHandleNullable(_handle);
  heresdkRoutingBindingsListofSdkRoutingTrafficspeedReleaseFfiHandle(_handle);
  return result;
}

List<TrafficSpeed> heresdkRoutingBindingsListofSdkRoutingTrafficspeedFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingBindingsListofSdkRoutingTrafficspeedGetValueNullable(handle);
  final result = heresdkRoutingBindingsListofSdkRoutingTrafficspeedFromFfi(_handle);
  heresdkRoutingBindingsListofSdkRoutingTrafficspeedReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingsListofSdkRoutingTrafficspeedReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingsListofSdkRoutingTrafficspeedReleaseHandleNullable(handle);

final _heresdkRoutingBindingsListofSdkRoutingTransitincidentCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_TransitIncident_create_handle'));
final _heresdkRoutingBindingsListofSdkRoutingTransitincidentReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_TransitIncident_release_handle'));
final _heresdkRoutingBindingsListofSdkRoutingTransitincidentInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_TransitIncident_insert'));
final _heresdkRoutingBindingsListofSdkRoutingTransitincidentIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_TransitIncident_iterator'));
final _heresdkRoutingBindingsListofSdkRoutingTransitincidentIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_TransitIncident_iterator_release_handle'));
final _heresdkRoutingBindingsListofSdkRoutingTransitincidentIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_TransitIncident_iterator_is_valid'));
final _heresdkRoutingBindingsListofSdkRoutingTransitincidentIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_TransitIncident_iterator_increment'));
final _heresdkRoutingBindingsListofSdkRoutingTransitincidentIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_TransitIncident_iterator_get'));

Pointer<Void> heresdkRoutingBindingsListofSdkRoutingTransitincidentToFfi(List<TransitIncident> value) {
  final _result = _heresdkRoutingBindingsListofSdkRoutingTransitincidentCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitincidentToFfi(element);
    _heresdkRoutingBindingsListofSdkRoutingTransitincidentInsert(_result, _elementHandle);
    sdkRoutingTransitincidentReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitIncident> heresdkRoutingBindingsListofSdkRoutingTransitincidentFromFfi(Pointer<Void> handle) {
  final result = List<TransitIncident>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingsListofSdkRoutingTransitincidentIterator(handle);
  while (_heresdkRoutingBindingsListofSdkRoutingTransitincidentIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingsListofSdkRoutingTransitincidentIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitincidentFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitincidentReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingsListofSdkRoutingTransitincidentIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingsListofSdkRoutingTransitincidentIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingsListofSdkRoutingTransitincidentReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingsListofSdkRoutingTransitincidentReleaseHandle(handle);

final _heresdkRoutingBindingsListofSdkRoutingTransitincidentCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_TransitIncident_create_handle_nullable'));
final _heresdkRoutingBindingsListofSdkRoutingTransitincidentReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_TransitIncident_release_handle_nullable'));
final _heresdkRoutingBindingsListofSdkRoutingTransitincidentGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_TransitIncident_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingsListofSdkRoutingTransitincidentToFfiNullable(List<TransitIncident> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingsListofSdkRoutingTransitincidentToFfi(value);
  final result = _heresdkRoutingBindingsListofSdkRoutingTransitincidentCreateHandleNullable(_handle);
  heresdkRoutingBindingsListofSdkRoutingTransitincidentReleaseFfiHandle(_handle);
  return result;
}

List<TransitIncident> heresdkRoutingBindingsListofSdkRoutingTransitincidentFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingBindingsListofSdkRoutingTransitincidentGetValueNullable(handle);
  final result = heresdkRoutingBindingsListofSdkRoutingTransitincidentFromFfi(_handle);
  heresdkRoutingBindingsListofSdkRoutingTransitincidentReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingsListofSdkRoutingTransitincidentReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingsListofSdkRoutingTransitincidentReleaseHandleNullable(handle);

final _heresdkRoutingBindingsListofSdkRoutingTransitmodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_TransitMode_create_handle'));
final _heresdkRoutingBindingsListofSdkRoutingTransitmodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_TransitMode_release_handle'));
final _heresdkRoutingBindingsListofSdkRoutingTransitmodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_TransitMode_insert'));
final _heresdkRoutingBindingsListofSdkRoutingTransitmodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_TransitMode_iterator'));
final _heresdkRoutingBindingsListofSdkRoutingTransitmodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_TransitMode_iterator_release_handle'));
final _heresdkRoutingBindingsListofSdkRoutingTransitmodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_TransitMode_iterator_is_valid'));
final _heresdkRoutingBindingsListofSdkRoutingTransitmodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_TransitMode_iterator_increment'));
final _heresdkRoutingBindingsListofSdkRoutingTransitmodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_TransitMode_iterator_get'));

Pointer<Void> heresdkRoutingBindingsListofSdkRoutingTransitmodeToFfi(List<TransitMode> value) {
  final _result = _heresdkRoutingBindingsListofSdkRoutingTransitmodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitmodeToFfi(element);
    _heresdkRoutingBindingsListofSdkRoutingTransitmodeInsert(_result, _elementHandle);
    sdkRoutingTransitmodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitMode> heresdkRoutingBindingsListofSdkRoutingTransitmodeFromFfi(Pointer<Void> handle) {
  final result = List<TransitMode>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingsListofSdkRoutingTransitmodeIterator(handle);
  while (_heresdkRoutingBindingsListofSdkRoutingTransitmodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingsListofSdkRoutingTransitmodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitmodeFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitmodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingsListofSdkRoutingTransitmodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingsListofSdkRoutingTransitmodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingsListofSdkRoutingTransitmodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingsListofSdkRoutingTransitmodeReleaseHandle(handle);

final _heresdkRoutingBindingsListofSdkRoutingTransitmodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_TransitMode_create_handle_nullable'));
final _heresdkRoutingBindingsListofSdkRoutingTransitmodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_TransitMode_release_handle_nullable'));
final _heresdkRoutingBindingsListofSdkRoutingTransitmodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_TransitMode_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingsListofSdkRoutingTransitmodeToFfiNullable(List<TransitMode> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingsListofSdkRoutingTransitmodeToFfi(value);
  final result = _heresdkRoutingBindingsListofSdkRoutingTransitmodeCreateHandleNullable(_handle);
  heresdkRoutingBindingsListofSdkRoutingTransitmodeReleaseFfiHandle(_handle);
  return result;
}

List<TransitMode> heresdkRoutingBindingsListofSdkRoutingTransitmodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingBindingsListofSdkRoutingTransitmodeGetValueNullable(handle);
  final result = heresdkRoutingBindingsListofSdkRoutingTransitmodeFromFfi(_handle);
  heresdkRoutingBindingsListofSdkRoutingTransitmodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingsListofSdkRoutingTransitmodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingsListofSdkRoutingTransitmodeReleaseHandleNullable(handle);

final _heresdkRoutingBindingsListofSdkRoutingTransitstopCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_TransitStop_create_handle'));
final _heresdkRoutingBindingsListofSdkRoutingTransitstopReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_TransitStop_release_handle'));
final _heresdkRoutingBindingsListofSdkRoutingTransitstopInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_TransitStop_insert'));
final _heresdkRoutingBindingsListofSdkRoutingTransitstopIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_TransitStop_iterator'));
final _heresdkRoutingBindingsListofSdkRoutingTransitstopIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_TransitStop_iterator_release_handle'));
final _heresdkRoutingBindingsListofSdkRoutingTransitstopIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_TransitStop_iterator_is_valid'));
final _heresdkRoutingBindingsListofSdkRoutingTransitstopIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_TransitStop_iterator_increment'));
final _heresdkRoutingBindingsListofSdkRoutingTransitstopIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_TransitStop_iterator_get'));

Pointer<Void> heresdkRoutingBindingsListofSdkRoutingTransitstopToFfi(List<TransitStop> value) {
  final _result = _heresdkRoutingBindingsListofSdkRoutingTransitstopCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitstopToFfi(element);
    _heresdkRoutingBindingsListofSdkRoutingTransitstopInsert(_result, _elementHandle);
    sdkRoutingTransitstopReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitStop> heresdkRoutingBindingsListofSdkRoutingTransitstopFromFfi(Pointer<Void> handle) {
  final result = List<TransitStop>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingsListofSdkRoutingTransitstopIterator(handle);
  while (_heresdkRoutingBindingsListofSdkRoutingTransitstopIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingsListofSdkRoutingTransitstopIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitstopFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitstopReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingsListofSdkRoutingTransitstopIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingsListofSdkRoutingTransitstopIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingsListofSdkRoutingTransitstopReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingsListofSdkRoutingTransitstopReleaseHandle(handle);

final _heresdkRoutingBindingsListofSdkRoutingTransitstopCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_TransitStop_create_handle_nullable'));
final _heresdkRoutingBindingsListofSdkRoutingTransitstopReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_TransitStop_release_handle_nullable'));
final _heresdkRoutingBindingsListofSdkRoutingTransitstopGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_TransitStop_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingsListofSdkRoutingTransitstopToFfiNullable(List<TransitStop> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingsListofSdkRoutingTransitstopToFfi(value);
  final result = _heresdkRoutingBindingsListofSdkRoutingTransitstopCreateHandleNullable(_handle);
  heresdkRoutingBindingsListofSdkRoutingTransitstopReleaseFfiHandle(_handle);
  return result;
}

List<TransitStop> heresdkRoutingBindingsListofSdkRoutingTransitstopFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingBindingsListofSdkRoutingTransitstopGetValueNullable(handle);
  final result = heresdkRoutingBindingsListofSdkRoutingTransitstopFromFfi(_handle);
  heresdkRoutingBindingsListofSdkRoutingTransitstopReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingsListofSdkRoutingTransitstopReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingsListofSdkRoutingTransitstopReleaseHandleNullable(handle);

final _heresdkRoutingBindingsListofSdkRoutingWaypointCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Waypoint_create_handle'));
final _heresdkRoutingBindingsListofSdkRoutingWaypointReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Waypoint_release_handle'));
final _heresdkRoutingBindingsListofSdkRoutingWaypointInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Waypoint_insert'));
final _heresdkRoutingBindingsListofSdkRoutingWaypointIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Waypoint_iterator'));
final _heresdkRoutingBindingsListofSdkRoutingWaypointIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Waypoint_iterator_release_handle'));
final _heresdkRoutingBindingsListofSdkRoutingWaypointIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Waypoint_iterator_is_valid'));
final _heresdkRoutingBindingsListofSdkRoutingWaypointIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Waypoint_iterator_increment'));
final _heresdkRoutingBindingsListofSdkRoutingWaypointIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Waypoint_iterator_get'));

Pointer<Void> heresdkRoutingBindingsListofSdkRoutingWaypointToFfi(List<Waypoint> value) {
  final _result = _heresdkRoutingBindingsListofSdkRoutingWaypointCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingWaypointToFfi(element);
    _heresdkRoutingBindingsListofSdkRoutingWaypointInsert(_result, _elementHandle);
    sdkRoutingWaypointReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Waypoint> heresdkRoutingBindingsListofSdkRoutingWaypointFromFfi(Pointer<Void> handle) {
  final result = List<Waypoint>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingsListofSdkRoutingWaypointIterator(handle);
  while (_heresdkRoutingBindingsListofSdkRoutingWaypointIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingsListofSdkRoutingWaypointIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingWaypointFromFfi(_elementHandle));
    } finally {
      sdkRoutingWaypointReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingsListofSdkRoutingWaypointIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingsListofSdkRoutingWaypointIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingsListofSdkRoutingWaypointReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingsListofSdkRoutingWaypointReleaseHandle(handle);

final _heresdkRoutingBindingsListofSdkRoutingWaypointCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Waypoint_create_handle_nullable'));
final _heresdkRoutingBindingsListofSdkRoutingWaypointReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Waypoint_release_handle_nullable'));
final _heresdkRoutingBindingsListofSdkRoutingWaypointGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_Waypoint_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingsListofSdkRoutingWaypointToFfiNullable(List<Waypoint> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingsListofSdkRoutingWaypointToFfi(value);
  final result = _heresdkRoutingBindingsListofSdkRoutingWaypointCreateHandleNullable(_handle);
  heresdkRoutingBindingsListofSdkRoutingWaypointReleaseFfiHandle(_handle);
  return result;
}

List<Waypoint> heresdkRoutingBindingsListofSdkRoutingWaypointFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingBindingsListofSdkRoutingWaypointGetValueNullable(handle);
  final result = heresdkRoutingBindingsListofSdkRoutingWaypointFromFfi(_handle);
  heresdkRoutingBindingsListofSdkRoutingWaypointReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingsListofSdkRoutingWaypointReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingsListofSdkRoutingWaypointReleaseHandleNullable(handle);

final _heresdkRoutingBindingsListofSdkRoutingZonecategoryCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_ZoneCategory_create_handle'));
final _heresdkRoutingBindingsListofSdkRoutingZonecategoryReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_ZoneCategory_release_handle'));
final _heresdkRoutingBindingsListofSdkRoutingZonecategoryInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_ZoneCategory_insert'));
final _heresdkRoutingBindingsListofSdkRoutingZonecategoryIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_ZoneCategory_iterator'));
final _heresdkRoutingBindingsListofSdkRoutingZonecategoryIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_ZoneCategory_iterator_release_handle'));
final _heresdkRoutingBindingsListofSdkRoutingZonecategoryIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_ZoneCategory_iterator_is_valid'));
final _heresdkRoutingBindingsListofSdkRoutingZonecategoryIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_ZoneCategory_iterator_increment'));
final _heresdkRoutingBindingsListofSdkRoutingZonecategoryIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_ZoneCategory_iterator_get'));

Pointer<Void> heresdkRoutingBindingsListofSdkRoutingZonecategoryToFfi(List<ZoneCategory> value) {
  final _result = _heresdkRoutingBindingsListofSdkRoutingZonecategoryCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingZonecategoryToFfi(element);
    _heresdkRoutingBindingsListofSdkRoutingZonecategoryInsert(_result, _elementHandle);
    sdkRoutingZonecategoryReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ZoneCategory> heresdkRoutingBindingsListofSdkRoutingZonecategoryFromFfi(Pointer<Void> handle) {
  final result = List<ZoneCategory>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingBindingsListofSdkRoutingZonecategoryIterator(handle);
  while (_heresdkRoutingBindingsListofSdkRoutingZonecategoryIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingBindingsListofSdkRoutingZonecategoryIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingZonecategoryFromFfi(_elementHandle));
    } finally {
      sdkRoutingZonecategoryReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingBindingsListofSdkRoutingZonecategoryIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingsListofSdkRoutingZonecategoryIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingsListofSdkRoutingZonecategoryReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingsListofSdkRoutingZonecategoryReleaseHandle(handle);

final _heresdkRoutingBindingsListofSdkRoutingZonecategoryCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_ZoneCategory_create_handle_nullable'));
final _heresdkRoutingBindingsListofSdkRoutingZonecategoryReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_ZoneCategory_release_handle_nullable'));
final _heresdkRoutingBindingsListofSdkRoutingZonecategoryGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_ListOf_sdk_routing_ZoneCategory_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingsListofSdkRoutingZonecategoryToFfiNullable(List<ZoneCategory> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingsListofSdkRoutingZonecategoryToFfi(value);
  final result = _heresdkRoutingBindingsListofSdkRoutingZonecategoryCreateHandleNullable(_handle);
  heresdkRoutingBindingsListofSdkRoutingZonecategoryReleaseFfiHandle(_handle);
  return result;
}

List<ZoneCategory> heresdkRoutingBindingsListofSdkRoutingZonecategoryFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingBindingsListofSdkRoutingZonecategoryGetValueNullable(handle);
  final result = heresdkRoutingBindingsListofSdkRoutingZonecategoryFromFfi(_handle);
  heresdkRoutingBindingsListofSdkRoutingZonecategoryReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingsListofSdkRoutingZonecategoryReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingsListofSdkRoutingZonecategoryReleaseHandleNullable(handle);

final _heresdkRoutingBindingsMapofDoubleToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindings_MapOf_Double_to_Double_create_handle'));
final _heresdkRoutingBindingsMapofDoubleToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_MapOf_Double_to_Double_release_handle'));
final _heresdkRoutingBindingsMapofDoubleToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Double, Double),
    void Function(Pointer<Void>, double, double)
  >('here_sdk_heresdk_routing_bindings_MapOf_Double_to_Double_put'));
final _heresdkRoutingBindingsMapofDoubleToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_MapOf_Double_to_Double_iterator'));
final _heresdkRoutingBindingsMapofDoubleToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_MapOf_Double_to_Double_iterator_release_handle'));
final _heresdkRoutingBindingsMapofDoubleToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_MapOf_Double_to_Double_iterator_is_valid'));
final _heresdkRoutingBindingsMapofDoubleToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_MapOf_Double_to_Double_iterator_increment'));
final _heresdkRoutingBindingsMapofDoubleToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_MapOf_Double_to_Double_iterator_get_key'));
final _heresdkRoutingBindingsMapofDoubleToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_MapOf_Double_to_Double_iterator_get_value'));

Pointer<Void> heresdkRoutingBindingsMapofDoubleToDoubleToFfi(Map<double, double> value) {
  final _result = _heresdkRoutingBindingsMapofDoubleToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _heresdkRoutingBindingsMapofDoubleToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<double, double> heresdkRoutingBindingsMapofDoubleToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<double, double>();
  final _iteratorHandle = _heresdkRoutingBindingsMapofDoubleToDoubleIterator(handle);
  while (_heresdkRoutingBindingsMapofDoubleToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkRoutingBindingsMapofDoubleToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkRoutingBindingsMapofDoubleToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _heresdkRoutingBindingsMapofDoubleToDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingsMapofDoubleToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingsMapofDoubleToDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingsMapofDoubleToDoubleReleaseHandle(handle);

final _heresdkRoutingBindingsMapofDoubleToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_MapOf_Double_to_Double_create_handle_nullable'));
final _heresdkRoutingBindingsMapofDoubleToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_MapOf_Double_to_Double_release_handle_nullable'));
final _heresdkRoutingBindingsMapofDoubleToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_MapOf_Double_to_Double_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingsMapofDoubleToDoubleToFfiNullable(Map<double, double> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingsMapofDoubleToDoubleToFfi(value);
  final result = _heresdkRoutingBindingsMapofDoubleToDoubleCreateHandleNullable(_handle);
  heresdkRoutingBindingsMapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<double, double> heresdkRoutingBindingsMapofDoubleToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return {};
  final _handle = _heresdkRoutingBindingsMapofDoubleToDoubleGetValueNullable(handle);
  final result = heresdkRoutingBindingsMapofDoubleToDoubleFromFfi(_handle);
  heresdkRoutingBindingsMapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingsMapofDoubleToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingsMapofDoubleToDoubleReleaseHandleNullable(handle);

final _heresdkRoutingBindingsMapofIntToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_bindings_MapOf_Int_to_Double_create_handle'));
final _heresdkRoutingBindingsMapofIntToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_MapOf_Int_to_Double_release_handle'));
final _heresdkRoutingBindingsMapofIntToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32, Double),
    void Function(Pointer<Void>, int, double)
  >('here_sdk_heresdk_routing_bindings_MapOf_Int_to_Double_put'));
final _heresdkRoutingBindingsMapofIntToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_MapOf_Int_to_Double_iterator'));
final _heresdkRoutingBindingsMapofIntToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_MapOf_Int_to_Double_iterator_release_handle'));
final _heresdkRoutingBindingsMapofIntToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_MapOf_Int_to_Double_iterator_is_valid'));
final _heresdkRoutingBindingsMapofIntToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_MapOf_Int_to_Double_iterator_increment'));
final _heresdkRoutingBindingsMapofIntToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_MapOf_Int_to_Double_iterator_get_key'));
final _heresdkRoutingBindingsMapofIntToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_bindings_MapOf_Int_to_Double_iterator_get_value'));

Pointer<Void> heresdkRoutingBindingsMapofIntToDoubleToFfi(Map<int, double> value) {
  final _result = _heresdkRoutingBindingsMapofIntToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _heresdkRoutingBindingsMapofIntToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<int, double> heresdkRoutingBindingsMapofIntToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<int, double>();
  final _iteratorHandle = _heresdkRoutingBindingsMapofIntToDoubleIterator(handle);
  while (_heresdkRoutingBindingsMapofIntToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkRoutingBindingsMapofIntToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkRoutingBindingsMapofIntToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _heresdkRoutingBindingsMapofIntToDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingBindingsMapofIntToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingBindingsMapofIntToDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingBindingsMapofIntToDoubleReleaseHandle(handle);

final _heresdkRoutingBindingsMapofIntToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_MapOf_Int_to_Double_create_handle_nullable'));
final _heresdkRoutingBindingsMapofIntToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_MapOf_Int_to_Double_release_handle_nullable'));
final _heresdkRoutingBindingsMapofIntToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_bindings_MapOf_Int_to_Double_get_value_nullable'));

Pointer<Void> heresdkRoutingBindingsMapofIntToDoubleToFfiNullable(Map<int, double> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingBindingsMapofIntToDoubleToFfi(value);
  final result = _heresdkRoutingBindingsMapofIntToDoubleCreateHandleNullable(_handle);
  heresdkRoutingBindingsMapofIntToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<int, double> heresdkRoutingBindingsMapofIntToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return {};
  final _handle = _heresdkRoutingBindingsMapofIntToDoubleGetValueNullable(handle);
  final result = heresdkRoutingBindingsMapofIntToDoubleFromFfi(_handle);
  heresdkRoutingBindingsMapofIntToDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingBindingsMapofIntToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingBindingsMapofIntToDoubleReleaseHandleNullable(handle);


// Copyright (c) 2018-2021 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//































final _heresdkRoutingCommonBindingsListofIntCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindings_ListOf_Int_create_handle'));
final _heresdkRoutingCommonBindingsListofIntReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_Int_release_handle'));
final _heresdkRoutingCommonBindingsListofIntInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_Int_insert'));
final _heresdkRoutingCommonBindingsListofIntIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_Int_iterator'));
final _heresdkRoutingCommonBindingsListofIntIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_Int_iterator_release_handle'));
final _heresdkRoutingCommonBindingsListofIntIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_Int_iterator_is_valid'));
final _heresdkRoutingCommonBindingsListofIntIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_Int_iterator_increment'));
final _heresdkRoutingCommonBindingsListofIntIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_Int_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingsListofIntToFfi(List<int> value) {
  final _result = _heresdkRoutingCommonBindingsListofIntCreateHandle();
  for (final element in value) {
    final _elementHandle = (element);
    _heresdkRoutingCommonBindingsListofIntInsert(_result, _elementHandle);
    
  }
  return _result;
}

List<int> heresdkRoutingCommonBindingsListofIntFromFfi(Pointer<Void> handle) {
  final result = List<int>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingsListofIntIterator(handle);
  while (_heresdkRoutingCommonBindingsListofIntIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingsListofIntIteratorGet(_iteratorHandle);
    try {
      result.add((_elementHandle));
    } finally {
      
    }
    _heresdkRoutingCommonBindingsListofIntIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingsListofIntIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingsListofIntReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingsListofIntReleaseHandle(handle);

final _heresdkRoutingCommonBindingsListofIntCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_Int_create_handle_nullable'));
final _heresdkRoutingCommonBindingsListofIntReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_Int_release_handle_nullable'));
final _heresdkRoutingCommonBindingsListofIntGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_Int_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingsListofIntToFfiNullable(List<int> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingsListofIntToFfi(value);
  final result = _heresdkRoutingCommonBindingsListofIntCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingsListofIntReleaseFfiHandle(_handle);
  return result;
}

List<int> heresdkRoutingCommonBindingsListofIntFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingCommonBindingsListofIntGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingsListofIntFromFfi(_handle);
  heresdkRoutingCommonBindingsListofIntReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingsListofIntReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingsListofIntReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingsListofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindings_ListOf_Locale_create_handle'));
final _heresdkRoutingCommonBindingsListofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_Locale_release_handle'));
final _heresdkRoutingCommonBindingsListofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_Locale_insert'));
final _heresdkRoutingCommonBindingsListofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_Locale_iterator'));
final _heresdkRoutingCommonBindingsListofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_Locale_iterator_release_handle'));
final _heresdkRoutingCommonBindingsListofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_Locale_iterator_is_valid'));
final _heresdkRoutingCommonBindingsListofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_Locale_iterator_increment'));
final _heresdkRoutingCommonBindingsListofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_Locale_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingsListofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkRoutingCommonBindingsListofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkRoutingCommonBindingsListofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkRoutingCommonBindingsListofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingsListofLocaleIterator(handle);
  while (_heresdkRoutingCommonBindingsListofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingsListofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingsListofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingsListofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingsListofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingsListofLocaleReleaseHandle(handle);

final _heresdkRoutingCommonBindingsListofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_Locale_create_handle_nullable'));
final _heresdkRoutingCommonBindingsListofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_Locale_release_handle_nullable'));
final _heresdkRoutingCommonBindingsListofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingsListofLocaleToFfiNullable(List<Locale> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingsListofLocaleToFfi(value);
  final result = _heresdkRoutingCommonBindingsListofLocaleCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingsListofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale> heresdkRoutingCommonBindingsListofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingCommonBindingsListofLocaleGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingsListofLocaleFromFfi(_handle);
  heresdkRoutingCommonBindingsListofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingsListofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingsListofLocaleReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingsListofSdkCoreCountrycodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_core_CountryCode_create_handle'));
final _heresdkRoutingCommonBindingsListofSdkCoreCountrycodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_core_CountryCode_release_handle'));
final _heresdkRoutingCommonBindingsListofSdkCoreCountrycodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_core_CountryCode_insert'));
final _heresdkRoutingCommonBindingsListofSdkCoreCountrycodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_core_CountryCode_iterator'));
final _heresdkRoutingCommonBindingsListofSdkCoreCountrycodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_core_CountryCode_iterator_release_handle'));
final _heresdkRoutingCommonBindingsListofSdkCoreCountrycodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_core_CountryCode_iterator_is_valid'));
final _heresdkRoutingCommonBindingsListofSdkCoreCountrycodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_core_CountryCode_iterator_increment'));
final _heresdkRoutingCommonBindingsListofSdkCoreCountrycodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_core_CountryCode_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingsListofSdkCoreCountrycodeToFfi(List<CountryCode> value) {
  final _result = _heresdkRoutingCommonBindingsListofSdkCoreCountrycodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreCountrycodeToFfi(element);
    _heresdkRoutingCommonBindingsListofSdkCoreCountrycodeInsert(_result, _elementHandle);
    sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<CountryCode> heresdkRoutingCommonBindingsListofSdkCoreCountrycodeFromFfi(Pointer<Void> handle) {
  final result = List<CountryCode>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingsListofSdkCoreCountrycodeIterator(handle);
  while (_heresdkRoutingCommonBindingsListofSdkCoreCountrycodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingsListofSdkCoreCountrycodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreCountrycodeFromFfi(_elementHandle));
    } finally {
      sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingsListofSdkCoreCountrycodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingsListofSdkCoreCountrycodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingsListofSdkCoreCountrycodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingsListofSdkCoreCountrycodeReleaseHandle(handle);

final _heresdkRoutingCommonBindingsListofSdkCoreCountrycodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_core_CountryCode_create_handle_nullable'));
final _heresdkRoutingCommonBindingsListofSdkCoreCountrycodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_core_CountryCode_release_handle_nullable'));
final _heresdkRoutingCommonBindingsListofSdkCoreCountrycodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_core_CountryCode_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingsListofSdkCoreCountrycodeToFfiNullable(List<CountryCode> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingsListofSdkCoreCountrycodeToFfi(value);
  final result = _heresdkRoutingCommonBindingsListofSdkCoreCountrycodeCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingsListofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

List<CountryCode> heresdkRoutingCommonBindingsListofSdkCoreCountrycodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingCommonBindingsListofSdkCoreCountrycodeGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingsListofSdkCoreCountrycodeFromFfi(_handle);
  heresdkRoutingCommonBindingsListofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingsListofSdkCoreCountrycodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingsListofSdkCoreCountrycodeReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingsListofSdkCoreGeoboxCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_core_GeoBox_create_handle'));
final _heresdkRoutingCommonBindingsListofSdkCoreGeoboxReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_core_GeoBox_release_handle'));
final _heresdkRoutingCommonBindingsListofSdkCoreGeoboxInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_core_GeoBox_insert'));
final _heresdkRoutingCommonBindingsListofSdkCoreGeoboxIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_core_GeoBox_iterator'));
final _heresdkRoutingCommonBindingsListofSdkCoreGeoboxIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_core_GeoBox_iterator_release_handle'));
final _heresdkRoutingCommonBindingsListofSdkCoreGeoboxIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_core_GeoBox_iterator_is_valid'));
final _heresdkRoutingCommonBindingsListofSdkCoreGeoboxIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_core_GeoBox_iterator_increment'));
final _heresdkRoutingCommonBindingsListofSdkCoreGeoboxIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_core_GeoBox_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingsListofSdkCoreGeoboxToFfi(List<GeoBox> value) {
  final _result = _heresdkRoutingCommonBindingsListofSdkCoreGeoboxCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeoboxToFfi(element);
    _heresdkRoutingCommonBindingsListofSdkCoreGeoboxInsert(_result, _elementHandle);
    sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoBox> heresdkRoutingCommonBindingsListofSdkCoreGeoboxFromFfi(Pointer<Void> handle) {
  final result = List<GeoBox>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingsListofSdkCoreGeoboxIterator(handle);
  while (_heresdkRoutingCommonBindingsListofSdkCoreGeoboxIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingsListofSdkCoreGeoboxIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeoboxFromFfi(_elementHandle));
    } finally {
      sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingsListofSdkCoreGeoboxIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingsListofSdkCoreGeoboxIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingsListofSdkCoreGeoboxReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingsListofSdkCoreGeoboxReleaseHandle(handle);

final _heresdkRoutingCommonBindingsListofSdkCoreGeoboxCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_core_GeoBox_create_handle_nullable'));
final _heresdkRoutingCommonBindingsListofSdkCoreGeoboxReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_core_GeoBox_release_handle_nullable'));
final _heresdkRoutingCommonBindingsListofSdkCoreGeoboxGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_core_GeoBox_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingsListofSdkCoreGeoboxToFfiNullable(List<GeoBox> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingsListofSdkCoreGeoboxToFfi(value);
  final result = _heresdkRoutingCommonBindingsListofSdkCoreGeoboxCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingsListofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

List<GeoBox> heresdkRoutingCommonBindingsListofSdkCoreGeoboxFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingCommonBindingsListofSdkCoreGeoboxGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingsListofSdkCoreGeoboxFromFfi(_handle);
  heresdkRoutingCommonBindingsListofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingsListofSdkCoreGeoboxReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingsListofSdkCoreGeoboxReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingsListofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkRoutingCommonBindingsListofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkRoutingCommonBindingsListofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkRoutingCommonBindingsListofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkRoutingCommonBindingsListofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkRoutingCommonBindingsListofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkRoutingCommonBindingsListofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkRoutingCommonBindingsListofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingsListofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkRoutingCommonBindingsListofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkRoutingCommonBindingsListofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkRoutingCommonBindingsListofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingsListofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkRoutingCommonBindingsListofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingsListofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingsListofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingsListofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingsListofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingsListofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkRoutingCommonBindingsListofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkRoutingCommonBindingsListofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkRoutingCommonBindingsListofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingsListofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingsListofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkRoutingCommonBindingsListofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingsListofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates> heresdkRoutingCommonBindingsListofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingCommonBindingsListofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingsListofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkRoutingCommonBindingsListofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingsListofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingsListofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingsListofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkRoutingCommonBindingsListofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkRoutingCommonBindingsListofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_core_LocalizedText_insert'));
final _heresdkRoutingCommonBindingsListofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_core_LocalizedText_iterator'));
final _heresdkRoutingCommonBindingsListofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkRoutingCommonBindingsListofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkRoutingCommonBindingsListofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkRoutingCommonBindingsListofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingsListofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkRoutingCommonBindingsListofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkRoutingCommonBindingsListofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkRoutingCommonBindingsListofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingsListofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkRoutingCommonBindingsListofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingsListofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingsListofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingsListofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingsListofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingsListofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkRoutingCommonBindingsListofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkRoutingCommonBindingsListofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkRoutingCommonBindingsListofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingsListofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingsListofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkRoutingCommonBindingsListofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingsListofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText> heresdkRoutingCommonBindingsListofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingCommonBindingsListofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingsListofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkRoutingCommonBindingsListofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingsListofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingsListofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingsListofSdkRoutingAttributionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Attribution_create_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingAttributionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Attribution_release_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingAttributionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Attribution_insert'));
final _heresdkRoutingCommonBindingsListofSdkRoutingAttributionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Attribution_iterator'));
final _heresdkRoutingCommonBindingsListofSdkRoutingAttributionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Attribution_iterator_release_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingAttributionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Attribution_iterator_is_valid'));
final _heresdkRoutingCommonBindingsListofSdkRoutingAttributionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Attribution_iterator_increment'));
final _heresdkRoutingCommonBindingsListofSdkRoutingAttributionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Attribution_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingsListofSdkRoutingAttributionToFfi(List<Attribution> value) {
  final _result = _heresdkRoutingCommonBindingsListofSdkRoutingAttributionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingAttributionToFfi(element);
    _heresdkRoutingCommonBindingsListofSdkRoutingAttributionInsert(_result, _elementHandle);
    sdkRoutingAttributionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Attribution> heresdkRoutingCommonBindingsListofSdkRoutingAttributionFromFfi(Pointer<Void> handle) {
  final result = List<Attribution>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingsListofSdkRoutingAttributionIterator(handle);
  while (_heresdkRoutingCommonBindingsListofSdkRoutingAttributionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingsListofSdkRoutingAttributionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingAttributionFromFfi(_elementHandle));
    } finally {
      sdkRoutingAttributionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingsListofSdkRoutingAttributionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingsListofSdkRoutingAttributionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingsListofSdkRoutingAttributionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingsListofSdkRoutingAttributionReleaseHandle(handle);

final _heresdkRoutingCommonBindingsListofSdkRoutingAttributionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Attribution_create_handle_nullable'));
final _heresdkRoutingCommonBindingsListofSdkRoutingAttributionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Attribution_release_handle_nullable'));
final _heresdkRoutingCommonBindingsListofSdkRoutingAttributionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Attribution_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingsListofSdkRoutingAttributionToFfiNullable(List<Attribution> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingsListofSdkRoutingAttributionToFfi(value);
  final result = _heresdkRoutingCommonBindingsListofSdkRoutingAttributionCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingsListofSdkRoutingAttributionReleaseFfiHandle(_handle);
  return result;
}

List<Attribution> heresdkRoutingCommonBindingsListofSdkRoutingAttributionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingCommonBindingsListofSdkRoutingAttributionGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingsListofSdkRoutingAttributionFromFfi(_handle);
  heresdkRoutingCommonBindingsListofSdkRoutingAttributionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingsListofSdkRoutingAttributionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingsListofSdkRoutingAttributionReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingsListofSdkRoutingChargingconnectortypeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_ChargingConnectorType_create_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingChargingconnectortypeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_ChargingConnectorType_release_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingChargingconnectortypeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_ChargingConnectorType_insert'));
final _heresdkRoutingCommonBindingsListofSdkRoutingChargingconnectortypeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_ChargingConnectorType_iterator'));
final _heresdkRoutingCommonBindingsListofSdkRoutingChargingconnectortypeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_ChargingConnectorType_iterator_release_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingChargingconnectortypeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_ChargingConnectorType_iterator_is_valid'));
final _heresdkRoutingCommonBindingsListofSdkRoutingChargingconnectortypeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_ChargingConnectorType_iterator_increment'));
final _heresdkRoutingCommonBindingsListofSdkRoutingChargingconnectortypeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_ChargingConnectorType_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingsListofSdkRoutingChargingconnectortypeToFfi(List<ChargingConnectorType> value) {
  final _result = _heresdkRoutingCommonBindingsListofSdkRoutingChargingconnectortypeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingChargingconnectortypeToFfi(element);
    _heresdkRoutingCommonBindingsListofSdkRoutingChargingconnectortypeInsert(_result, _elementHandle);
    sdkRoutingChargingconnectortypeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ChargingConnectorType> heresdkRoutingCommonBindingsListofSdkRoutingChargingconnectortypeFromFfi(Pointer<Void> handle) {
  final result = List<ChargingConnectorType>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingsListofSdkRoutingChargingconnectortypeIterator(handle);
  while (_heresdkRoutingCommonBindingsListofSdkRoutingChargingconnectortypeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingsListofSdkRoutingChargingconnectortypeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingChargingconnectortypeFromFfi(_elementHandle));
    } finally {
      sdkRoutingChargingconnectortypeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingsListofSdkRoutingChargingconnectortypeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingsListofSdkRoutingChargingconnectortypeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingsListofSdkRoutingChargingconnectortypeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingsListofSdkRoutingChargingconnectortypeReleaseHandle(handle);

final _heresdkRoutingCommonBindingsListofSdkRoutingChargingconnectortypeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_ChargingConnectorType_create_handle_nullable'));
final _heresdkRoutingCommonBindingsListofSdkRoutingChargingconnectortypeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_ChargingConnectorType_release_handle_nullable'));
final _heresdkRoutingCommonBindingsListofSdkRoutingChargingconnectortypeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_ChargingConnectorType_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingsListofSdkRoutingChargingconnectortypeToFfiNullable(List<ChargingConnectorType> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingsListofSdkRoutingChargingconnectortypeToFfi(value);
  final result = _heresdkRoutingCommonBindingsListofSdkRoutingChargingconnectortypeCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingsListofSdkRoutingChargingconnectortypeReleaseFfiHandle(_handle);
  return result;
}

List<ChargingConnectorType> heresdkRoutingCommonBindingsListofSdkRoutingChargingconnectortypeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingCommonBindingsListofSdkRoutingChargingconnectortypeGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingsListofSdkRoutingChargingconnectortypeFromFfi(_handle);
  heresdkRoutingCommonBindingsListofSdkRoutingChargingconnectortypeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingsListofSdkRoutingChargingconnectortypeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingsListofSdkRoutingChargingconnectortypeReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingsListofSdkRoutingFareCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Fare_create_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingFareReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Fare_release_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingFareInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Fare_insert'));
final _heresdkRoutingCommonBindingsListofSdkRoutingFareIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Fare_iterator'));
final _heresdkRoutingCommonBindingsListofSdkRoutingFareIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Fare_iterator_release_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingFareIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Fare_iterator_is_valid'));
final _heresdkRoutingCommonBindingsListofSdkRoutingFareIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Fare_iterator_increment'));
final _heresdkRoutingCommonBindingsListofSdkRoutingFareIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Fare_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingsListofSdkRoutingFareToFfi(List<Fare> value) {
  final _result = _heresdkRoutingCommonBindingsListofSdkRoutingFareCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingFareToFfi(element);
    _heresdkRoutingCommonBindingsListofSdkRoutingFareInsert(_result, _elementHandle);
    sdkRoutingFareReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Fare> heresdkRoutingCommonBindingsListofSdkRoutingFareFromFfi(Pointer<Void> handle) {
  final result = List<Fare>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingsListofSdkRoutingFareIterator(handle);
  while (_heresdkRoutingCommonBindingsListofSdkRoutingFareIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingsListofSdkRoutingFareIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingFareFromFfi(_elementHandle));
    } finally {
      sdkRoutingFareReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingsListofSdkRoutingFareIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingsListofSdkRoutingFareIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingsListofSdkRoutingFareReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingsListofSdkRoutingFareReleaseHandle(handle);

final _heresdkRoutingCommonBindingsListofSdkRoutingFareCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Fare_create_handle_nullable'));
final _heresdkRoutingCommonBindingsListofSdkRoutingFareReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Fare_release_handle_nullable'));
final _heresdkRoutingCommonBindingsListofSdkRoutingFareGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Fare_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingsListofSdkRoutingFareToFfiNullable(List<Fare> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingsListofSdkRoutingFareToFfi(value);
  final result = _heresdkRoutingCommonBindingsListofSdkRoutingFareCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingsListofSdkRoutingFareReleaseFfiHandle(_handle);
  return result;
}

List<Fare> heresdkRoutingCommonBindingsListofSdkRoutingFareFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingCommonBindingsListofSdkRoutingFareGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingsListofSdkRoutingFareFromFfi(_handle);
  heresdkRoutingCommonBindingsListofSdkRoutingFareReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingsListofSdkRoutingFareReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingsListofSdkRoutingFareReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingsListofSdkRoutingHazardousgoodCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_HazardousGood_create_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingHazardousgoodReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_HazardousGood_release_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingHazardousgoodInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_HazardousGood_insert'));
final _heresdkRoutingCommonBindingsListofSdkRoutingHazardousgoodIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_HazardousGood_iterator'));
final _heresdkRoutingCommonBindingsListofSdkRoutingHazardousgoodIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_HazardousGood_iterator_release_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingHazardousgoodIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_HazardousGood_iterator_is_valid'));
final _heresdkRoutingCommonBindingsListofSdkRoutingHazardousgoodIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_HazardousGood_iterator_increment'));
final _heresdkRoutingCommonBindingsListofSdkRoutingHazardousgoodIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_HazardousGood_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingsListofSdkRoutingHazardousgoodToFfi(List<HazardousGood> value) {
  final _result = _heresdkRoutingCommonBindingsListofSdkRoutingHazardousgoodCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingHazardousgoodToFfi(element);
    _heresdkRoutingCommonBindingsListofSdkRoutingHazardousgoodInsert(_result, _elementHandle);
    sdkRoutingHazardousgoodReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<HazardousGood> heresdkRoutingCommonBindingsListofSdkRoutingHazardousgoodFromFfi(Pointer<Void> handle) {
  final result = List<HazardousGood>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingsListofSdkRoutingHazardousgoodIterator(handle);
  while (_heresdkRoutingCommonBindingsListofSdkRoutingHazardousgoodIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingsListofSdkRoutingHazardousgoodIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingHazardousgoodFromFfi(_elementHandle));
    } finally {
      sdkRoutingHazardousgoodReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingsListofSdkRoutingHazardousgoodIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingsListofSdkRoutingHazardousgoodIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingsListofSdkRoutingHazardousgoodReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingsListofSdkRoutingHazardousgoodReleaseHandle(handle);

final _heresdkRoutingCommonBindingsListofSdkRoutingHazardousgoodCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_HazardousGood_create_handle_nullable'));
final _heresdkRoutingCommonBindingsListofSdkRoutingHazardousgoodReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_HazardousGood_release_handle_nullable'));
final _heresdkRoutingCommonBindingsListofSdkRoutingHazardousgoodGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_HazardousGood_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingsListofSdkRoutingHazardousgoodToFfiNullable(List<HazardousGood> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingsListofSdkRoutingHazardousgoodToFfi(value);
  final result = _heresdkRoutingCommonBindingsListofSdkRoutingHazardousgoodCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingsListofSdkRoutingHazardousgoodReleaseFfiHandle(_handle);
  return result;
}

List<HazardousGood> heresdkRoutingCommonBindingsListofSdkRoutingHazardousgoodFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingCommonBindingsListofSdkRoutingHazardousgoodGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingsListofSdkRoutingHazardousgoodFromFfi(_handle);
  heresdkRoutingCommonBindingsListofSdkRoutingHazardousgoodReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingsListofSdkRoutingHazardousgoodReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingsListofSdkRoutingHazardousgoodReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingsListofSdkRoutingManeuverCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Maneuver_create_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingManeuverReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Maneuver_release_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingManeuverInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Maneuver_insert'));
final _heresdkRoutingCommonBindingsListofSdkRoutingManeuverIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Maneuver_iterator'));
final _heresdkRoutingCommonBindingsListofSdkRoutingManeuverIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Maneuver_iterator_release_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingManeuverIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Maneuver_iterator_is_valid'));
final _heresdkRoutingCommonBindingsListofSdkRoutingManeuverIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Maneuver_iterator_increment'));
final _heresdkRoutingCommonBindingsListofSdkRoutingManeuverIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Maneuver_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingsListofSdkRoutingManeuverToFfi(List<Maneuver> value) {
  final _result = _heresdkRoutingCommonBindingsListofSdkRoutingManeuverCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingManeuverToFfi(element);
    _heresdkRoutingCommonBindingsListofSdkRoutingManeuverInsert(_result, _elementHandle);
    sdkRoutingManeuverReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Maneuver> heresdkRoutingCommonBindingsListofSdkRoutingManeuverFromFfi(Pointer<Void> handle) {
  final result = List<Maneuver>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingsListofSdkRoutingManeuverIterator(handle);
  while (_heresdkRoutingCommonBindingsListofSdkRoutingManeuverIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingsListofSdkRoutingManeuverIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingManeuverFromFfi(_elementHandle));
    } finally {
      sdkRoutingManeuverReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingsListofSdkRoutingManeuverIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingsListofSdkRoutingManeuverIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingsListofSdkRoutingManeuverReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingsListofSdkRoutingManeuverReleaseHandle(handle);

final _heresdkRoutingCommonBindingsListofSdkRoutingManeuverCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Maneuver_create_handle_nullable'));
final _heresdkRoutingCommonBindingsListofSdkRoutingManeuverReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Maneuver_release_handle_nullable'));
final _heresdkRoutingCommonBindingsListofSdkRoutingManeuverGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Maneuver_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingsListofSdkRoutingManeuverToFfiNullable(List<Maneuver> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingsListofSdkRoutingManeuverToFfi(value);
  final result = _heresdkRoutingCommonBindingsListofSdkRoutingManeuverCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingsListofSdkRoutingManeuverReleaseFfiHandle(_handle);
  return result;
}

List<Maneuver> heresdkRoutingCommonBindingsListofSdkRoutingManeuverFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingCommonBindingsListofSdkRoutingManeuverGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingsListofSdkRoutingManeuverFromFfi(_handle);
  heresdkRoutingCommonBindingsListofSdkRoutingManeuverReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingsListofSdkRoutingManeuverReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingsListofSdkRoutingManeuverReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingsListofSdkRoutingNoticeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Notice_create_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingNoticeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Notice_release_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingNoticeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Notice_insert'));
final _heresdkRoutingCommonBindingsListofSdkRoutingNoticeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Notice_iterator'));
final _heresdkRoutingCommonBindingsListofSdkRoutingNoticeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Notice_iterator_release_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingNoticeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Notice_iterator_is_valid'));
final _heresdkRoutingCommonBindingsListofSdkRoutingNoticeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Notice_iterator_increment'));
final _heresdkRoutingCommonBindingsListofSdkRoutingNoticeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Notice_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingsListofSdkRoutingNoticeToFfi(List<Notice> value) {
  final _result = _heresdkRoutingCommonBindingsListofSdkRoutingNoticeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingNoticeToFfi(element);
    _heresdkRoutingCommonBindingsListofSdkRoutingNoticeInsert(_result, _elementHandle);
    sdkRoutingNoticeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Notice> heresdkRoutingCommonBindingsListofSdkRoutingNoticeFromFfi(Pointer<Void> handle) {
  final result = List<Notice>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingsListofSdkRoutingNoticeIterator(handle);
  while (_heresdkRoutingCommonBindingsListofSdkRoutingNoticeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingsListofSdkRoutingNoticeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingNoticeFromFfi(_elementHandle));
    } finally {
      sdkRoutingNoticeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingsListofSdkRoutingNoticeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingsListofSdkRoutingNoticeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingsListofSdkRoutingNoticeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingsListofSdkRoutingNoticeReleaseHandle(handle);

final _heresdkRoutingCommonBindingsListofSdkRoutingNoticeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Notice_create_handle_nullable'));
final _heresdkRoutingCommonBindingsListofSdkRoutingNoticeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Notice_release_handle_nullable'));
final _heresdkRoutingCommonBindingsListofSdkRoutingNoticeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Notice_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingsListofSdkRoutingNoticeToFfiNullable(List<Notice> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingsListofSdkRoutingNoticeToFfi(value);
  final result = _heresdkRoutingCommonBindingsListofSdkRoutingNoticeCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingsListofSdkRoutingNoticeReleaseFfiHandle(_handle);
  return result;
}

List<Notice> heresdkRoutingCommonBindingsListofSdkRoutingNoticeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingCommonBindingsListofSdkRoutingNoticeGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingsListofSdkRoutingNoticeFromFfi(_handle);
  heresdkRoutingCommonBindingsListofSdkRoutingNoticeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingsListofSdkRoutingNoticeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingsListofSdkRoutingNoticeReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingsListofSdkRoutingPostactionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_PostAction_create_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingPostactionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_PostAction_release_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingPostactionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_PostAction_insert'));
final _heresdkRoutingCommonBindingsListofSdkRoutingPostactionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_PostAction_iterator'));
final _heresdkRoutingCommonBindingsListofSdkRoutingPostactionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_PostAction_iterator_release_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingPostactionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_PostAction_iterator_is_valid'));
final _heresdkRoutingCommonBindingsListofSdkRoutingPostactionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_PostAction_iterator_increment'));
final _heresdkRoutingCommonBindingsListofSdkRoutingPostactionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_PostAction_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingsListofSdkRoutingPostactionToFfi(List<PostAction> value) {
  final _result = _heresdkRoutingCommonBindingsListofSdkRoutingPostactionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPostactionToFfi(element);
    _heresdkRoutingCommonBindingsListofSdkRoutingPostactionInsert(_result, _elementHandle);
    sdkRoutingPostactionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PostAction> heresdkRoutingCommonBindingsListofSdkRoutingPostactionFromFfi(Pointer<Void> handle) {
  final result = List<PostAction>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingsListofSdkRoutingPostactionIterator(handle);
  while (_heresdkRoutingCommonBindingsListofSdkRoutingPostactionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingsListofSdkRoutingPostactionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPostactionFromFfi(_elementHandle));
    } finally {
      sdkRoutingPostactionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingsListofSdkRoutingPostactionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingsListofSdkRoutingPostactionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingsListofSdkRoutingPostactionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingsListofSdkRoutingPostactionReleaseHandle(handle);

final _heresdkRoutingCommonBindingsListofSdkRoutingPostactionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_PostAction_create_handle_nullable'));
final _heresdkRoutingCommonBindingsListofSdkRoutingPostactionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_PostAction_release_handle_nullable'));
final _heresdkRoutingCommonBindingsListofSdkRoutingPostactionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_PostAction_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingsListofSdkRoutingPostactionToFfiNullable(List<PostAction> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingsListofSdkRoutingPostactionToFfi(value);
  final result = _heresdkRoutingCommonBindingsListofSdkRoutingPostactionCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingsListofSdkRoutingPostactionReleaseFfiHandle(_handle);
  return result;
}

List<PostAction> heresdkRoutingCommonBindingsListofSdkRoutingPostactionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingCommonBindingsListofSdkRoutingPostactionGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingsListofSdkRoutingPostactionFromFfi(_handle);
  heresdkRoutingCommonBindingsListofSdkRoutingPostactionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingsListofSdkRoutingPostactionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingsListofSdkRoutingPostactionReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingsListofSdkRoutingPreactionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_PreAction_create_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingPreactionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_PreAction_release_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingPreactionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_PreAction_insert'));
final _heresdkRoutingCommonBindingsListofSdkRoutingPreactionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_PreAction_iterator'));
final _heresdkRoutingCommonBindingsListofSdkRoutingPreactionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_PreAction_iterator_release_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingPreactionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_PreAction_iterator_is_valid'));
final _heresdkRoutingCommonBindingsListofSdkRoutingPreactionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_PreAction_iterator_increment'));
final _heresdkRoutingCommonBindingsListofSdkRoutingPreactionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_PreAction_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingsListofSdkRoutingPreactionToFfi(List<PreAction> value) {
  final _result = _heresdkRoutingCommonBindingsListofSdkRoutingPreactionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPreactionToFfi(element);
    _heresdkRoutingCommonBindingsListofSdkRoutingPreactionInsert(_result, _elementHandle);
    sdkRoutingPreactionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PreAction> heresdkRoutingCommonBindingsListofSdkRoutingPreactionFromFfi(Pointer<Void> handle) {
  final result = List<PreAction>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingsListofSdkRoutingPreactionIterator(handle);
  while (_heresdkRoutingCommonBindingsListofSdkRoutingPreactionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingsListofSdkRoutingPreactionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPreactionFromFfi(_elementHandle));
    } finally {
      sdkRoutingPreactionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingsListofSdkRoutingPreactionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingsListofSdkRoutingPreactionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingsListofSdkRoutingPreactionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingsListofSdkRoutingPreactionReleaseHandle(handle);

final _heresdkRoutingCommonBindingsListofSdkRoutingPreactionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_PreAction_create_handle_nullable'));
final _heresdkRoutingCommonBindingsListofSdkRoutingPreactionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_PreAction_release_handle_nullable'));
final _heresdkRoutingCommonBindingsListofSdkRoutingPreactionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_PreAction_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingsListofSdkRoutingPreactionToFfiNullable(List<PreAction> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingsListofSdkRoutingPreactionToFfi(value);
  final result = _heresdkRoutingCommonBindingsListofSdkRoutingPreactionCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingsListofSdkRoutingPreactionReleaseFfiHandle(_handle);
  return result;
}

List<PreAction> heresdkRoutingCommonBindingsListofSdkRoutingPreactionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingCommonBindingsListofSdkRoutingPreactionGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingsListofSdkRoutingPreactionFromFfi(_handle);
  heresdkRoutingCommonBindingsListofSdkRoutingPreactionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingsListofSdkRoutingPreactionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingsListofSdkRoutingPreactionReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingsListofSdkRoutingRoadfeaturesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_RoadFeatures_create_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingRoadfeaturesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_RoadFeatures_release_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingRoadfeaturesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_RoadFeatures_insert'));
final _heresdkRoutingCommonBindingsListofSdkRoutingRoadfeaturesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_RoadFeatures_iterator'));
final _heresdkRoutingCommonBindingsListofSdkRoutingRoadfeaturesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_RoadFeatures_iterator_release_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingRoadfeaturesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_RoadFeatures_iterator_is_valid'));
final _heresdkRoutingCommonBindingsListofSdkRoutingRoadfeaturesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_RoadFeatures_iterator_increment'));
final _heresdkRoutingCommonBindingsListofSdkRoutingRoadfeaturesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_RoadFeatures_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingsListofSdkRoutingRoadfeaturesToFfi(List<RoadFeatures> value) {
  final _result = _heresdkRoutingCommonBindingsListofSdkRoutingRoadfeaturesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRoadfeaturesToFfi(element);
    _heresdkRoutingCommonBindingsListofSdkRoutingRoadfeaturesInsert(_result, _elementHandle);
    sdkRoutingRoadfeaturesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<RoadFeatures> heresdkRoutingCommonBindingsListofSdkRoutingRoadfeaturesFromFfi(Pointer<Void> handle) {
  final result = List<RoadFeatures>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingsListofSdkRoutingRoadfeaturesIterator(handle);
  while (_heresdkRoutingCommonBindingsListofSdkRoutingRoadfeaturesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingsListofSdkRoutingRoadfeaturesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRoadfeaturesFromFfi(_elementHandle));
    } finally {
      sdkRoutingRoadfeaturesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingsListofSdkRoutingRoadfeaturesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingsListofSdkRoutingRoadfeaturesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingsListofSdkRoutingRoadfeaturesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingsListofSdkRoutingRoadfeaturesReleaseHandle(handle);

final _heresdkRoutingCommonBindingsListofSdkRoutingRoadfeaturesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_RoadFeatures_create_handle_nullable'));
final _heresdkRoutingCommonBindingsListofSdkRoutingRoadfeaturesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_RoadFeatures_release_handle_nullable'));
final _heresdkRoutingCommonBindingsListofSdkRoutingRoadfeaturesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_RoadFeatures_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingsListofSdkRoutingRoadfeaturesToFfiNullable(List<RoadFeatures> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingsListofSdkRoutingRoadfeaturesToFfi(value);
  final result = _heresdkRoutingCommonBindingsListofSdkRoutingRoadfeaturesCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingsListofSdkRoutingRoadfeaturesReleaseFfiHandle(_handle);
  return result;
}

List<RoadFeatures> heresdkRoutingCommonBindingsListofSdkRoutingRoadfeaturesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingCommonBindingsListofSdkRoutingRoadfeaturesGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingsListofSdkRoutingRoadfeaturesFromFfi(_handle);
  heresdkRoutingCommonBindingsListofSdkRoutingRoadfeaturesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingsListofSdkRoutingRoadfeaturesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingsListofSdkRoutingRoadfeaturesReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingsListofSdkRoutingRouteCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Route_create_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingRouteReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Route_release_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingRouteInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Route_insert'));
final _heresdkRoutingCommonBindingsListofSdkRoutingRouteIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Route_iterator'));
final _heresdkRoutingCommonBindingsListofSdkRoutingRouteIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Route_iterator_release_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingRouteIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Route_iterator_is_valid'));
final _heresdkRoutingCommonBindingsListofSdkRoutingRouteIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Route_iterator_increment'));
final _heresdkRoutingCommonBindingsListofSdkRoutingRouteIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Route_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingsListofSdkRoutingRouteToFfi(List<Route> value) {
  final _result = _heresdkRoutingCommonBindingsListofSdkRoutingRouteCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRouteToFfi(element);
    _heresdkRoutingCommonBindingsListofSdkRoutingRouteInsert(_result, _elementHandle);
    sdkRoutingRouteReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Route> heresdkRoutingCommonBindingsListofSdkRoutingRouteFromFfi(Pointer<Void> handle) {
  final result = List<Route>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingsListofSdkRoutingRouteIterator(handle);
  while (_heresdkRoutingCommonBindingsListofSdkRoutingRouteIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingsListofSdkRoutingRouteIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRouteFromFfi(_elementHandle));
    } finally {
      sdkRoutingRouteReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingsListofSdkRoutingRouteIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingsListofSdkRoutingRouteIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingsListofSdkRoutingRouteReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingsListofSdkRoutingRouteReleaseHandle(handle);

final _heresdkRoutingCommonBindingsListofSdkRoutingRouteCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Route_create_handle_nullable'));
final _heresdkRoutingCommonBindingsListofSdkRoutingRouteReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Route_release_handle_nullable'));
final _heresdkRoutingCommonBindingsListofSdkRoutingRouteGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Route_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingsListofSdkRoutingRouteToFfiNullable(List<Route> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingsListofSdkRoutingRouteToFfi(value);
  final result = _heresdkRoutingCommonBindingsListofSdkRoutingRouteCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingsListofSdkRoutingRouteReleaseFfiHandle(_handle);
  return result;
}

List<Route> heresdkRoutingCommonBindingsListofSdkRoutingRouteFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingCommonBindingsListofSdkRoutingRouteGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingsListofSdkRoutingRouteFromFfi(_handle);
  heresdkRoutingCommonBindingsListofSdkRoutingRouteReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingsListofSdkRoutingRouteReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingsListofSdkRoutingRouteReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingsListofSdkRoutingSectionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Section_create_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingSectionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Section_release_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingSectionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Section_insert'));
final _heresdkRoutingCommonBindingsListofSdkRoutingSectionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Section_iterator'));
final _heresdkRoutingCommonBindingsListofSdkRoutingSectionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Section_iterator_release_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingSectionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Section_iterator_is_valid'));
final _heresdkRoutingCommonBindingsListofSdkRoutingSectionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Section_iterator_increment'));
final _heresdkRoutingCommonBindingsListofSdkRoutingSectionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Section_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingsListofSdkRoutingSectionToFfi(List<Section> value) {
  final _result = _heresdkRoutingCommonBindingsListofSdkRoutingSectionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSectionToFfi(element);
    _heresdkRoutingCommonBindingsListofSdkRoutingSectionInsert(_result, _elementHandle);
    sdkRoutingSectionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Section> heresdkRoutingCommonBindingsListofSdkRoutingSectionFromFfi(Pointer<Void> handle) {
  final result = List<Section>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingsListofSdkRoutingSectionIterator(handle);
  while (_heresdkRoutingCommonBindingsListofSdkRoutingSectionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingsListofSdkRoutingSectionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSectionFromFfi(_elementHandle));
    } finally {
      sdkRoutingSectionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingsListofSdkRoutingSectionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingsListofSdkRoutingSectionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingsListofSdkRoutingSectionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingsListofSdkRoutingSectionReleaseHandle(handle);

final _heresdkRoutingCommonBindingsListofSdkRoutingSectionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Section_create_handle_nullable'));
final _heresdkRoutingCommonBindingsListofSdkRoutingSectionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Section_release_handle_nullable'));
final _heresdkRoutingCommonBindingsListofSdkRoutingSectionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Section_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingsListofSdkRoutingSectionToFfiNullable(List<Section> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingsListofSdkRoutingSectionToFfi(value);
  final result = _heresdkRoutingCommonBindingsListofSdkRoutingSectionCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingsListofSdkRoutingSectionReleaseFfiHandle(_handle);
  return result;
}

List<Section> heresdkRoutingCommonBindingsListofSdkRoutingSectionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingCommonBindingsListofSdkRoutingSectionGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingsListofSdkRoutingSectionFromFfi(_handle);
  heresdkRoutingCommonBindingsListofSdkRoutingSectionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingsListofSdkRoutingSectionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingsListofSdkRoutingSectionReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingsListofSdkRoutingSectionnoticeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_SectionNotice_create_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingSectionnoticeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_SectionNotice_release_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingSectionnoticeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_SectionNotice_insert'));
final _heresdkRoutingCommonBindingsListofSdkRoutingSectionnoticeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_SectionNotice_iterator'));
final _heresdkRoutingCommonBindingsListofSdkRoutingSectionnoticeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_SectionNotice_iterator_release_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingSectionnoticeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_SectionNotice_iterator_is_valid'));
final _heresdkRoutingCommonBindingsListofSdkRoutingSectionnoticeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_SectionNotice_iterator_increment'));
final _heresdkRoutingCommonBindingsListofSdkRoutingSectionnoticeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_SectionNotice_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingsListofSdkRoutingSectionnoticeToFfi(List<SectionNotice> value) {
  final _result = _heresdkRoutingCommonBindingsListofSdkRoutingSectionnoticeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSectionnoticeToFfi(element);
    _heresdkRoutingCommonBindingsListofSdkRoutingSectionnoticeInsert(_result, _elementHandle);
    sdkRoutingSectionnoticeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SectionNotice> heresdkRoutingCommonBindingsListofSdkRoutingSectionnoticeFromFfi(Pointer<Void> handle) {
  final result = List<SectionNotice>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingsListofSdkRoutingSectionnoticeIterator(handle);
  while (_heresdkRoutingCommonBindingsListofSdkRoutingSectionnoticeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingsListofSdkRoutingSectionnoticeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSectionnoticeFromFfi(_elementHandle));
    } finally {
      sdkRoutingSectionnoticeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingsListofSdkRoutingSectionnoticeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingsListofSdkRoutingSectionnoticeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingsListofSdkRoutingSectionnoticeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingsListofSdkRoutingSectionnoticeReleaseHandle(handle);

final _heresdkRoutingCommonBindingsListofSdkRoutingSectionnoticeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_SectionNotice_create_handle_nullable'));
final _heresdkRoutingCommonBindingsListofSdkRoutingSectionnoticeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_SectionNotice_release_handle_nullable'));
final _heresdkRoutingCommonBindingsListofSdkRoutingSectionnoticeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_SectionNotice_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingsListofSdkRoutingSectionnoticeToFfiNullable(List<SectionNotice> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingsListofSdkRoutingSectionnoticeToFfi(value);
  final result = _heresdkRoutingCommonBindingsListofSdkRoutingSectionnoticeCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingsListofSdkRoutingSectionnoticeReleaseFfiHandle(_handle);
  return result;
}

List<SectionNotice> heresdkRoutingCommonBindingsListofSdkRoutingSectionnoticeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingCommonBindingsListofSdkRoutingSectionnoticeGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingsListofSdkRoutingSectionnoticeFromFfi(_handle);
  heresdkRoutingCommonBindingsListofSdkRoutingSectionnoticeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingsListofSdkRoutingSectionnoticeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingsListofSdkRoutingSectionnoticeReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingsListofSdkRoutingSpanCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Span_create_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingSpanReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Span_release_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingSpanInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Span_insert'));
final _heresdkRoutingCommonBindingsListofSdkRoutingSpanIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Span_iterator'));
final _heresdkRoutingCommonBindingsListofSdkRoutingSpanIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Span_iterator_release_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingSpanIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Span_iterator_is_valid'));
final _heresdkRoutingCommonBindingsListofSdkRoutingSpanIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Span_iterator_increment'));
final _heresdkRoutingCommonBindingsListofSdkRoutingSpanIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Span_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingsListofSdkRoutingSpanToFfi(List<Span> value) {
  final _result = _heresdkRoutingCommonBindingsListofSdkRoutingSpanCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSpanToFfi(element);
    _heresdkRoutingCommonBindingsListofSdkRoutingSpanInsert(_result, _elementHandle);
    sdkRoutingSpanReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Span> heresdkRoutingCommonBindingsListofSdkRoutingSpanFromFfi(Pointer<Void> handle) {
  final result = List<Span>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingsListofSdkRoutingSpanIterator(handle);
  while (_heresdkRoutingCommonBindingsListofSdkRoutingSpanIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingsListofSdkRoutingSpanIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSpanFromFfi(_elementHandle));
    } finally {
      sdkRoutingSpanReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingsListofSdkRoutingSpanIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingsListofSdkRoutingSpanIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingsListofSdkRoutingSpanReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingsListofSdkRoutingSpanReleaseHandle(handle);

final _heresdkRoutingCommonBindingsListofSdkRoutingSpanCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Span_create_handle_nullable'));
final _heresdkRoutingCommonBindingsListofSdkRoutingSpanReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Span_release_handle_nullable'));
final _heresdkRoutingCommonBindingsListofSdkRoutingSpanGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Span_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingsListofSdkRoutingSpanToFfiNullable(List<Span> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingsListofSdkRoutingSpanToFfi(value);
  final result = _heresdkRoutingCommonBindingsListofSdkRoutingSpanCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingsListofSdkRoutingSpanReleaseFfiHandle(_handle);
  return result;
}

List<Span> heresdkRoutingCommonBindingsListofSdkRoutingSpanFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingCommonBindingsListofSdkRoutingSpanGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingsListofSdkRoutingSpanFromFfi(_handle);
  heresdkRoutingCommonBindingsListofSdkRoutingSpanReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingsListofSdkRoutingSpanReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingsListofSdkRoutingSpanReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingsListofSdkRoutingTrafficspeedCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_TrafficSpeed_create_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingTrafficspeedReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_TrafficSpeed_release_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingTrafficspeedInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_TrafficSpeed_insert'));
final _heresdkRoutingCommonBindingsListofSdkRoutingTrafficspeedIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_TrafficSpeed_iterator'));
final _heresdkRoutingCommonBindingsListofSdkRoutingTrafficspeedIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_TrafficSpeed_iterator_release_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingTrafficspeedIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_TrafficSpeed_iterator_is_valid'));
final _heresdkRoutingCommonBindingsListofSdkRoutingTrafficspeedIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_TrafficSpeed_iterator_increment'));
final _heresdkRoutingCommonBindingsListofSdkRoutingTrafficspeedIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_TrafficSpeed_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingsListofSdkRoutingTrafficspeedToFfi(List<TrafficSpeed> value) {
  final _result = _heresdkRoutingCommonBindingsListofSdkRoutingTrafficspeedCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTrafficspeedToFfi(element);
    _heresdkRoutingCommonBindingsListofSdkRoutingTrafficspeedInsert(_result, _elementHandle);
    sdkRoutingTrafficspeedReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TrafficSpeed> heresdkRoutingCommonBindingsListofSdkRoutingTrafficspeedFromFfi(Pointer<Void> handle) {
  final result = List<TrafficSpeed>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingsListofSdkRoutingTrafficspeedIterator(handle);
  while (_heresdkRoutingCommonBindingsListofSdkRoutingTrafficspeedIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingsListofSdkRoutingTrafficspeedIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTrafficspeedFromFfi(_elementHandle));
    } finally {
      sdkRoutingTrafficspeedReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingsListofSdkRoutingTrafficspeedIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingsListofSdkRoutingTrafficspeedIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingsListofSdkRoutingTrafficspeedReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingsListofSdkRoutingTrafficspeedReleaseHandle(handle);

final _heresdkRoutingCommonBindingsListofSdkRoutingTrafficspeedCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_TrafficSpeed_create_handle_nullable'));
final _heresdkRoutingCommonBindingsListofSdkRoutingTrafficspeedReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_TrafficSpeed_release_handle_nullable'));
final _heresdkRoutingCommonBindingsListofSdkRoutingTrafficspeedGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_TrafficSpeed_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingsListofSdkRoutingTrafficspeedToFfiNullable(List<TrafficSpeed> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingsListofSdkRoutingTrafficspeedToFfi(value);
  final result = _heresdkRoutingCommonBindingsListofSdkRoutingTrafficspeedCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingsListofSdkRoutingTrafficspeedReleaseFfiHandle(_handle);
  return result;
}

List<TrafficSpeed> heresdkRoutingCommonBindingsListofSdkRoutingTrafficspeedFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingCommonBindingsListofSdkRoutingTrafficspeedGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingsListofSdkRoutingTrafficspeedFromFfi(_handle);
  heresdkRoutingCommonBindingsListofSdkRoutingTrafficspeedReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingsListofSdkRoutingTrafficspeedReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingsListofSdkRoutingTrafficspeedReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingsListofSdkRoutingTransitincidentCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_TransitIncident_create_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingTransitincidentReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_TransitIncident_release_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingTransitincidentInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_TransitIncident_insert'));
final _heresdkRoutingCommonBindingsListofSdkRoutingTransitincidentIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_TransitIncident_iterator'));
final _heresdkRoutingCommonBindingsListofSdkRoutingTransitincidentIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_TransitIncident_iterator_release_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingTransitincidentIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_TransitIncident_iterator_is_valid'));
final _heresdkRoutingCommonBindingsListofSdkRoutingTransitincidentIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_TransitIncident_iterator_increment'));
final _heresdkRoutingCommonBindingsListofSdkRoutingTransitincidentIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_TransitIncident_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingsListofSdkRoutingTransitincidentToFfi(List<TransitIncident> value) {
  final _result = _heresdkRoutingCommonBindingsListofSdkRoutingTransitincidentCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitincidentToFfi(element);
    _heresdkRoutingCommonBindingsListofSdkRoutingTransitincidentInsert(_result, _elementHandle);
    sdkRoutingTransitincidentReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitIncident> heresdkRoutingCommonBindingsListofSdkRoutingTransitincidentFromFfi(Pointer<Void> handle) {
  final result = List<TransitIncident>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingsListofSdkRoutingTransitincidentIterator(handle);
  while (_heresdkRoutingCommonBindingsListofSdkRoutingTransitincidentIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingsListofSdkRoutingTransitincidentIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitincidentFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitincidentReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingsListofSdkRoutingTransitincidentIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingsListofSdkRoutingTransitincidentIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingsListofSdkRoutingTransitincidentReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingsListofSdkRoutingTransitincidentReleaseHandle(handle);

final _heresdkRoutingCommonBindingsListofSdkRoutingTransitincidentCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_TransitIncident_create_handle_nullable'));
final _heresdkRoutingCommonBindingsListofSdkRoutingTransitincidentReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_TransitIncident_release_handle_nullable'));
final _heresdkRoutingCommonBindingsListofSdkRoutingTransitincidentGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_TransitIncident_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingsListofSdkRoutingTransitincidentToFfiNullable(List<TransitIncident> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingsListofSdkRoutingTransitincidentToFfi(value);
  final result = _heresdkRoutingCommonBindingsListofSdkRoutingTransitincidentCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingsListofSdkRoutingTransitincidentReleaseFfiHandle(_handle);
  return result;
}

List<TransitIncident> heresdkRoutingCommonBindingsListofSdkRoutingTransitincidentFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingCommonBindingsListofSdkRoutingTransitincidentGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingsListofSdkRoutingTransitincidentFromFfi(_handle);
  heresdkRoutingCommonBindingsListofSdkRoutingTransitincidentReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingsListofSdkRoutingTransitincidentReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingsListofSdkRoutingTransitincidentReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingsListofSdkRoutingTransitmodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_TransitMode_create_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingTransitmodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_TransitMode_release_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingTransitmodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_TransitMode_insert'));
final _heresdkRoutingCommonBindingsListofSdkRoutingTransitmodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_TransitMode_iterator'));
final _heresdkRoutingCommonBindingsListofSdkRoutingTransitmodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_TransitMode_iterator_release_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingTransitmodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_TransitMode_iterator_is_valid'));
final _heresdkRoutingCommonBindingsListofSdkRoutingTransitmodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_TransitMode_iterator_increment'));
final _heresdkRoutingCommonBindingsListofSdkRoutingTransitmodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_TransitMode_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingsListofSdkRoutingTransitmodeToFfi(List<TransitMode> value) {
  final _result = _heresdkRoutingCommonBindingsListofSdkRoutingTransitmodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitmodeToFfi(element);
    _heresdkRoutingCommonBindingsListofSdkRoutingTransitmodeInsert(_result, _elementHandle);
    sdkRoutingTransitmodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitMode> heresdkRoutingCommonBindingsListofSdkRoutingTransitmodeFromFfi(Pointer<Void> handle) {
  final result = List<TransitMode>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingsListofSdkRoutingTransitmodeIterator(handle);
  while (_heresdkRoutingCommonBindingsListofSdkRoutingTransitmodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingsListofSdkRoutingTransitmodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitmodeFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitmodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingsListofSdkRoutingTransitmodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingsListofSdkRoutingTransitmodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingsListofSdkRoutingTransitmodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingsListofSdkRoutingTransitmodeReleaseHandle(handle);

final _heresdkRoutingCommonBindingsListofSdkRoutingTransitmodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_TransitMode_create_handle_nullable'));
final _heresdkRoutingCommonBindingsListofSdkRoutingTransitmodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_TransitMode_release_handle_nullable'));
final _heresdkRoutingCommonBindingsListofSdkRoutingTransitmodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_TransitMode_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingsListofSdkRoutingTransitmodeToFfiNullable(List<TransitMode> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingsListofSdkRoutingTransitmodeToFfi(value);
  final result = _heresdkRoutingCommonBindingsListofSdkRoutingTransitmodeCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingsListofSdkRoutingTransitmodeReleaseFfiHandle(_handle);
  return result;
}

List<TransitMode> heresdkRoutingCommonBindingsListofSdkRoutingTransitmodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingCommonBindingsListofSdkRoutingTransitmodeGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingsListofSdkRoutingTransitmodeFromFfi(_handle);
  heresdkRoutingCommonBindingsListofSdkRoutingTransitmodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingsListofSdkRoutingTransitmodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingsListofSdkRoutingTransitmodeReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingsListofSdkRoutingTransitstopCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_TransitStop_create_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingTransitstopReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_TransitStop_release_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingTransitstopInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_TransitStop_insert'));
final _heresdkRoutingCommonBindingsListofSdkRoutingTransitstopIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_TransitStop_iterator'));
final _heresdkRoutingCommonBindingsListofSdkRoutingTransitstopIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_TransitStop_iterator_release_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingTransitstopIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_TransitStop_iterator_is_valid'));
final _heresdkRoutingCommonBindingsListofSdkRoutingTransitstopIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_TransitStop_iterator_increment'));
final _heresdkRoutingCommonBindingsListofSdkRoutingTransitstopIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_TransitStop_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingsListofSdkRoutingTransitstopToFfi(List<TransitStop> value) {
  final _result = _heresdkRoutingCommonBindingsListofSdkRoutingTransitstopCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitstopToFfi(element);
    _heresdkRoutingCommonBindingsListofSdkRoutingTransitstopInsert(_result, _elementHandle);
    sdkRoutingTransitstopReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitStop> heresdkRoutingCommonBindingsListofSdkRoutingTransitstopFromFfi(Pointer<Void> handle) {
  final result = List<TransitStop>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingsListofSdkRoutingTransitstopIterator(handle);
  while (_heresdkRoutingCommonBindingsListofSdkRoutingTransitstopIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingsListofSdkRoutingTransitstopIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitstopFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitstopReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingsListofSdkRoutingTransitstopIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingsListofSdkRoutingTransitstopIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingsListofSdkRoutingTransitstopReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingsListofSdkRoutingTransitstopReleaseHandle(handle);

final _heresdkRoutingCommonBindingsListofSdkRoutingTransitstopCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_TransitStop_create_handle_nullable'));
final _heresdkRoutingCommonBindingsListofSdkRoutingTransitstopReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_TransitStop_release_handle_nullable'));
final _heresdkRoutingCommonBindingsListofSdkRoutingTransitstopGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_TransitStop_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingsListofSdkRoutingTransitstopToFfiNullable(List<TransitStop> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingsListofSdkRoutingTransitstopToFfi(value);
  final result = _heresdkRoutingCommonBindingsListofSdkRoutingTransitstopCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingsListofSdkRoutingTransitstopReleaseFfiHandle(_handle);
  return result;
}

List<TransitStop> heresdkRoutingCommonBindingsListofSdkRoutingTransitstopFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingCommonBindingsListofSdkRoutingTransitstopGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingsListofSdkRoutingTransitstopFromFfi(_handle);
  heresdkRoutingCommonBindingsListofSdkRoutingTransitstopReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingsListofSdkRoutingTransitstopReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingsListofSdkRoutingTransitstopReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingsListofSdkRoutingWaypointCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Waypoint_create_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingWaypointReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Waypoint_release_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingWaypointInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Waypoint_insert'));
final _heresdkRoutingCommonBindingsListofSdkRoutingWaypointIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Waypoint_iterator'));
final _heresdkRoutingCommonBindingsListofSdkRoutingWaypointIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Waypoint_iterator_release_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingWaypointIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Waypoint_iterator_is_valid'));
final _heresdkRoutingCommonBindingsListofSdkRoutingWaypointIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Waypoint_iterator_increment'));
final _heresdkRoutingCommonBindingsListofSdkRoutingWaypointIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Waypoint_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingsListofSdkRoutingWaypointToFfi(List<Waypoint> value) {
  final _result = _heresdkRoutingCommonBindingsListofSdkRoutingWaypointCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingWaypointToFfi(element);
    _heresdkRoutingCommonBindingsListofSdkRoutingWaypointInsert(_result, _elementHandle);
    sdkRoutingWaypointReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Waypoint> heresdkRoutingCommonBindingsListofSdkRoutingWaypointFromFfi(Pointer<Void> handle) {
  final result = List<Waypoint>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingsListofSdkRoutingWaypointIterator(handle);
  while (_heresdkRoutingCommonBindingsListofSdkRoutingWaypointIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingsListofSdkRoutingWaypointIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingWaypointFromFfi(_elementHandle));
    } finally {
      sdkRoutingWaypointReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingsListofSdkRoutingWaypointIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingsListofSdkRoutingWaypointIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingsListofSdkRoutingWaypointReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingsListofSdkRoutingWaypointReleaseHandle(handle);

final _heresdkRoutingCommonBindingsListofSdkRoutingWaypointCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Waypoint_create_handle_nullable'));
final _heresdkRoutingCommonBindingsListofSdkRoutingWaypointReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Waypoint_release_handle_nullable'));
final _heresdkRoutingCommonBindingsListofSdkRoutingWaypointGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_Waypoint_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingsListofSdkRoutingWaypointToFfiNullable(List<Waypoint> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingsListofSdkRoutingWaypointToFfi(value);
  final result = _heresdkRoutingCommonBindingsListofSdkRoutingWaypointCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingsListofSdkRoutingWaypointReleaseFfiHandle(_handle);
  return result;
}

List<Waypoint> heresdkRoutingCommonBindingsListofSdkRoutingWaypointFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingCommonBindingsListofSdkRoutingWaypointGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingsListofSdkRoutingWaypointFromFfi(_handle);
  heresdkRoutingCommonBindingsListofSdkRoutingWaypointReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingsListofSdkRoutingWaypointReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingsListofSdkRoutingWaypointReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingsListofSdkRoutingZonecategoryCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_ZoneCategory_create_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingZonecategoryReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_ZoneCategory_release_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingZonecategoryInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_ZoneCategory_insert'));
final _heresdkRoutingCommonBindingsListofSdkRoutingZonecategoryIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_ZoneCategory_iterator'));
final _heresdkRoutingCommonBindingsListofSdkRoutingZonecategoryIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_ZoneCategory_iterator_release_handle'));
final _heresdkRoutingCommonBindingsListofSdkRoutingZonecategoryIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_ZoneCategory_iterator_is_valid'));
final _heresdkRoutingCommonBindingsListofSdkRoutingZonecategoryIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_ZoneCategory_iterator_increment'));
final _heresdkRoutingCommonBindingsListofSdkRoutingZonecategoryIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_ZoneCategory_iterator_get'));

Pointer<Void> heresdkRoutingCommonBindingsListofSdkRoutingZonecategoryToFfi(List<ZoneCategory> value) {
  final _result = _heresdkRoutingCommonBindingsListofSdkRoutingZonecategoryCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingZonecategoryToFfi(element);
    _heresdkRoutingCommonBindingsListofSdkRoutingZonecategoryInsert(_result, _elementHandle);
    sdkRoutingZonecategoryReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ZoneCategory> heresdkRoutingCommonBindingsListofSdkRoutingZonecategoryFromFfi(Pointer<Void> handle) {
  final result = List<ZoneCategory>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingCommonBindingsListofSdkRoutingZonecategoryIterator(handle);
  while (_heresdkRoutingCommonBindingsListofSdkRoutingZonecategoryIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingCommonBindingsListofSdkRoutingZonecategoryIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingZonecategoryFromFfi(_elementHandle));
    } finally {
      sdkRoutingZonecategoryReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingCommonBindingsListofSdkRoutingZonecategoryIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingsListofSdkRoutingZonecategoryIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingsListofSdkRoutingZonecategoryReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingsListofSdkRoutingZonecategoryReleaseHandle(handle);

final _heresdkRoutingCommonBindingsListofSdkRoutingZonecategoryCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_ZoneCategory_create_handle_nullable'));
final _heresdkRoutingCommonBindingsListofSdkRoutingZonecategoryReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_ZoneCategory_release_handle_nullable'));
final _heresdkRoutingCommonBindingsListofSdkRoutingZonecategoryGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_ListOf_sdk_routing_ZoneCategory_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingsListofSdkRoutingZonecategoryToFfiNullable(List<ZoneCategory> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingsListofSdkRoutingZonecategoryToFfi(value);
  final result = _heresdkRoutingCommonBindingsListofSdkRoutingZonecategoryCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingsListofSdkRoutingZonecategoryReleaseFfiHandle(_handle);
  return result;
}

List<ZoneCategory> heresdkRoutingCommonBindingsListofSdkRoutingZonecategoryFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingCommonBindingsListofSdkRoutingZonecategoryGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingsListofSdkRoutingZonecategoryFromFfi(_handle);
  heresdkRoutingCommonBindingsListofSdkRoutingZonecategoryReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingsListofSdkRoutingZonecategoryReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingsListofSdkRoutingZonecategoryReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingsMapofDoubleToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindings_MapOf_Double_to_Double_create_handle'));
final _heresdkRoutingCommonBindingsMapofDoubleToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_MapOf_Double_to_Double_release_handle'));
final _heresdkRoutingCommonBindingsMapofDoubleToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Double, Double),
    void Function(Pointer<Void>, double, double)
  >('here_sdk_heresdk_routing_common_bindings_MapOf_Double_to_Double_put'));
final _heresdkRoutingCommonBindingsMapofDoubleToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_MapOf_Double_to_Double_iterator'));
final _heresdkRoutingCommonBindingsMapofDoubleToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_MapOf_Double_to_Double_iterator_release_handle'));
final _heresdkRoutingCommonBindingsMapofDoubleToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_MapOf_Double_to_Double_iterator_is_valid'));
final _heresdkRoutingCommonBindingsMapofDoubleToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_MapOf_Double_to_Double_iterator_increment'));
final _heresdkRoutingCommonBindingsMapofDoubleToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_MapOf_Double_to_Double_iterator_get_key'));
final _heresdkRoutingCommonBindingsMapofDoubleToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_MapOf_Double_to_Double_iterator_get_value'));

Pointer<Void> heresdkRoutingCommonBindingsMapofDoubleToDoubleToFfi(Map<double, double> value) {
  final _result = _heresdkRoutingCommonBindingsMapofDoubleToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _heresdkRoutingCommonBindingsMapofDoubleToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<double, double> heresdkRoutingCommonBindingsMapofDoubleToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<double, double>();
  final _iteratorHandle = _heresdkRoutingCommonBindingsMapofDoubleToDoubleIterator(handle);
  while (_heresdkRoutingCommonBindingsMapofDoubleToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkRoutingCommonBindingsMapofDoubleToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkRoutingCommonBindingsMapofDoubleToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _heresdkRoutingCommonBindingsMapofDoubleToDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingsMapofDoubleToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingsMapofDoubleToDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingsMapofDoubleToDoubleReleaseHandle(handle);

final _heresdkRoutingCommonBindingsMapofDoubleToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_MapOf_Double_to_Double_create_handle_nullable'));
final _heresdkRoutingCommonBindingsMapofDoubleToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_MapOf_Double_to_Double_release_handle_nullable'));
final _heresdkRoutingCommonBindingsMapofDoubleToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_MapOf_Double_to_Double_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingsMapofDoubleToDoubleToFfiNullable(Map<double, double> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingsMapofDoubleToDoubleToFfi(value);
  final result = _heresdkRoutingCommonBindingsMapofDoubleToDoubleCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingsMapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<double, double> heresdkRoutingCommonBindingsMapofDoubleToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return {};
  final _handle = _heresdkRoutingCommonBindingsMapofDoubleToDoubleGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingsMapofDoubleToDoubleFromFfi(_handle);
  heresdkRoutingCommonBindingsMapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingsMapofDoubleToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingsMapofDoubleToDoubleReleaseHandleNullable(handle);

final _heresdkRoutingCommonBindingsMapofIntToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_common_bindings_MapOf_Int_to_Double_create_handle'));
final _heresdkRoutingCommonBindingsMapofIntToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_MapOf_Int_to_Double_release_handle'));
final _heresdkRoutingCommonBindingsMapofIntToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32, Double),
    void Function(Pointer<Void>, int, double)
  >('here_sdk_heresdk_routing_common_bindings_MapOf_Int_to_Double_put'));
final _heresdkRoutingCommonBindingsMapofIntToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_MapOf_Int_to_Double_iterator'));
final _heresdkRoutingCommonBindingsMapofIntToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_MapOf_Int_to_Double_iterator_release_handle'));
final _heresdkRoutingCommonBindingsMapofIntToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_MapOf_Int_to_Double_iterator_is_valid'));
final _heresdkRoutingCommonBindingsMapofIntToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_MapOf_Int_to_Double_iterator_increment'));
final _heresdkRoutingCommonBindingsMapofIntToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_MapOf_Int_to_Double_iterator_get_key'));
final _heresdkRoutingCommonBindingsMapofIntToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_common_bindings_MapOf_Int_to_Double_iterator_get_value'));

Pointer<Void> heresdkRoutingCommonBindingsMapofIntToDoubleToFfi(Map<int, double> value) {
  final _result = _heresdkRoutingCommonBindingsMapofIntToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _heresdkRoutingCommonBindingsMapofIntToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<int, double> heresdkRoutingCommonBindingsMapofIntToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<int, double>();
  final _iteratorHandle = _heresdkRoutingCommonBindingsMapofIntToDoubleIterator(handle);
  while (_heresdkRoutingCommonBindingsMapofIntToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkRoutingCommonBindingsMapofIntToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkRoutingCommonBindingsMapofIntToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _heresdkRoutingCommonBindingsMapofIntToDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingCommonBindingsMapofIntToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingCommonBindingsMapofIntToDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingCommonBindingsMapofIntToDoubleReleaseHandle(handle);

final _heresdkRoutingCommonBindingsMapofIntToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_MapOf_Int_to_Double_create_handle_nullable'));
final _heresdkRoutingCommonBindingsMapofIntToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_MapOf_Int_to_Double_release_handle_nullable'));
final _heresdkRoutingCommonBindingsMapofIntToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_common_bindings_MapOf_Int_to_Double_get_value_nullable'));

Pointer<Void> heresdkRoutingCommonBindingsMapofIntToDoubleToFfiNullable(Map<int, double> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingCommonBindingsMapofIntToDoubleToFfi(value);
  final result = _heresdkRoutingCommonBindingsMapofIntToDoubleCreateHandleNullable(_handle);
  heresdkRoutingCommonBindingsMapofIntToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<int, double> heresdkRoutingCommonBindingsMapofIntToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return {};
  final _handle = _heresdkRoutingCommonBindingsMapofIntToDoubleGetValueNullable(handle);
  final result = heresdkRoutingCommonBindingsMapofIntToDoubleFromFfi(_handle);
  heresdkRoutingCommonBindingsMapofIntToDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingCommonBindingsMapofIntToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingCommonBindingsMapofIntToDoubleReleaseHandleNullable(handle);


// Copyright (c) 2018-2021 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//

































final _heresdkRoutingIsolineBindingsListofIntCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_Int_create_handle'));
final _heresdkRoutingIsolineBindingsListofIntReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_Int_release_handle'));
final _heresdkRoutingIsolineBindingsListofIntInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_Int_insert'));
final _heresdkRoutingIsolineBindingsListofIntIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_Int_iterator'));
final _heresdkRoutingIsolineBindingsListofIntIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_Int_iterator_release_handle'));
final _heresdkRoutingIsolineBindingsListofIntIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_Int_iterator_is_valid'));
final _heresdkRoutingIsolineBindingsListofIntIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_Int_iterator_increment'));
final _heresdkRoutingIsolineBindingsListofIntIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_Int_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingsListofIntToFfi(List<int> value) {
  final _result = _heresdkRoutingIsolineBindingsListofIntCreateHandle();
  for (final element in value) {
    final _elementHandle = (element);
    _heresdkRoutingIsolineBindingsListofIntInsert(_result, _elementHandle);
    
  }
  return _result;
}

List<int> heresdkRoutingIsolineBindingsListofIntFromFfi(Pointer<Void> handle) {
  final result = List<int>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingsListofIntIterator(handle);
  while (_heresdkRoutingIsolineBindingsListofIntIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingsListofIntIteratorGet(_iteratorHandle);
    try {
      result.add((_elementHandle));
    } finally {
      
    }
    _heresdkRoutingIsolineBindingsListofIntIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingsListofIntIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingsListofIntReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingsListofIntReleaseHandle(handle);

final _heresdkRoutingIsolineBindingsListofIntCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_Int_create_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofIntReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_Int_release_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofIntGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_Int_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingsListofIntToFfiNullable(List<int> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingsListofIntToFfi(value);
  final result = _heresdkRoutingIsolineBindingsListofIntCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingsListofIntReleaseFfiHandle(_handle);
  return result;
}

List<int> heresdkRoutingIsolineBindingsListofIntFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingIsolineBindingsListofIntGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingsListofIntFromFfi(_handle);
  heresdkRoutingIsolineBindingsListofIntReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingsListofIntReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingsListofIntReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingsListofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_Locale_create_handle'));
final _heresdkRoutingIsolineBindingsListofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_Locale_release_handle'));
final _heresdkRoutingIsolineBindingsListofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_Locale_insert'));
final _heresdkRoutingIsolineBindingsListofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_Locale_iterator'));
final _heresdkRoutingIsolineBindingsListofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_Locale_iterator_release_handle'));
final _heresdkRoutingIsolineBindingsListofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_Locale_iterator_is_valid'));
final _heresdkRoutingIsolineBindingsListofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_Locale_iterator_increment'));
final _heresdkRoutingIsolineBindingsListofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_Locale_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingsListofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkRoutingIsolineBindingsListofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkRoutingIsolineBindingsListofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkRoutingIsolineBindingsListofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingsListofLocaleIterator(handle);
  while (_heresdkRoutingIsolineBindingsListofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingsListofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingsListofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingsListofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingsListofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingsListofLocaleReleaseHandle(handle);

final _heresdkRoutingIsolineBindingsListofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_Locale_create_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_Locale_release_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingsListofLocaleToFfiNullable(List<Locale> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingsListofLocaleToFfi(value);
  final result = _heresdkRoutingIsolineBindingsListofLocaleCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingsListofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale> heresdkRoutingIsolineBindingsListofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingIsolineBindingsListofLocaleGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingsListofLocaleFromFfi(_handle);
  heresdkRoutingIsolineBindingsListofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingsListofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingsListofLocaleReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingsListofSdkCoreCountrycodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_CountryCode_create_handle'));
final _heresdkRoutingIsolineBindingsListofSdkCoreCountrycodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_CountryCode_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkCoreCountrycodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_CountryCode_insert'));
final _heresdkRoutingIsolineBindingsListofSdkCoreCountrycodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_CountryCode_iterator'));
final _heresdkRoutingIsolineBindingsListofSdkCoreCountrycodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_CountryCode_iterator_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkCoreCountrycodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_CountryCode_iterator_is_valid'));
final _heresdkRoutingIsolineBindingsListofSdkCoreCountrycodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_CountryCode_iterator_increment'));
final _heresdkRoutingIsolineBindingsListofSdkCoreCountrycodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_CountryCode_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkCoreCountrycodeToFfi(List<CountryCode> value) {
  final _result = _heresdkRoutingIsolineBindingsListofSdkCoreCountrycodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreCountrycodeToFfi(element);
    _heresdkRoutingIsolineBindingsListofSdkCoreCountrycodeInsert(_result, _elementHandle);
    sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<CountryCode> heresdkRoutingIsolineBindingsListofSdkCoreCountrycodeFromFfi(Pointer<Void> handle) {
  final result = List<CountryCode>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingsListofSdkCoreCountrycodeIterator(handle);
  while (_heresdkRoutingIsolineBindingsListofSdkCoreCountrycodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingsListofSdkCoreCountrycodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreCountrycodeFromFfi(_elementHandle));
    } finally {
      sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingsListofSdkCoreCountrycodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingsListofSdkCoreCountrycodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkCoreCountrycodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingsListofSdkCoreCountrycodeReleaseHandle(handle);

final _heresdkRoutingIsolineBindingsListofSdkCoreCountrycodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_CountryCode_create_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkCoreCountrycodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_CountryCode_release_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkCoreCountrycodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_CountryCode_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkCoreCountrycodeToFfiNullable(List<CountryCode> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingsListofSdkCoreCountrycodeToFfi(value);
  final result = _heresdkRoutingIsolineBindingsListofSdkCoreCountrycodeCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingsListofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

List<CountryCode> heresdkRoutingIsolineBindingsListofSdkCoreCountrycodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingIsolineBindingsListofSdkCoreCountrycodeGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingsListofSdkCoreCountrycodeFromFfi(_handle);
  heresdkRoutingIsolineBindingsListofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkCoreCountrycodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingsListofSdkCoreCountrycodeReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingsListofSdkCoreGeoboxCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_GeoBox_create_handle'));
final _heresdkRoutingIsolineBindingsListofSdkCoreGeoboxReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_GeoBox_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkCoreGeoboxInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_GeoBox_insert'));
final _heresdkRoutingIsolineBindingsListofSdkCoreGeoboxIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_GeoBox_iterator'));
final _heresdkRoutingIsolineBindingsListofSdkCoreGeoboxIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_GeoBox_iterator_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkCoreGeoboxIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_GeoBox_iterator_is_valid'));
final _heresdkRoutingIsolineBindingsListofSdkCoreGeoboxIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_GeoBox_iterator_increment'));
final _heresdkRoutingIsolineBindingsListofSdkCoreGeoboxIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_GeoBox_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkCoreGeoboxToFfi(List<GeoBox> value) {
  final _result = _heresdkRoutingIsolineBindingsListofSdkCoreGeoboxCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeoboxToFfi(element);
    _heresdkRoutingIsolineBindingsListofSdkCoreGeoboxInsert(_result, _elementHandle);
    sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoBox> heresdkRoutingIsolineBindingsListofSdkCoreGeoboxFromFfi(Pointer<Void> handle) {
  final result = List<GeoBox>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingsListofSdkCoreGeoboxIterator(handle);
  while (_heresdkRoutingIsolineBindingsListofSdkCoreGeoboxIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingsListofSdkCoreGeoboxIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeoboxFromFfi(_elementHandle));
    } finally {
      sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingsListofSdkCoreGeoboxIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingsListofSdkCoreGeoboxIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkCoreGeoboxReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingsListofSdkCoreGeoboxReleaseHandle(handle);

final _heresdkRoutingIsolineBindingsListofSdkCoreGeoboxCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_GeoBox_create_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkCoreGeoboxReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_GeoBox_release_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkCoreGeoboxGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_GeoBox_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkCoreGeoboxToFfiNullable(List<GeoBox> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingsListofSdkCoreGeoboxToFfi(value);
  final result = _heresdkRoutingIsolineBindingsListofSdkCoreGeoboxCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingsListofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

List<GeoBox> heresdkRoutingIsolineBindingsListofSdkCoreGeoboxFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingIsolineBindingsListofSdkCoreGeoboxGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingsListofSdkCoreGeoboxFromFfi(_handle);
  heresdkRoutingIsolineBindingsListofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkCoreGeoboxReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingsListofSdkCoreGeoboxReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingsListofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkRoutingIsolineBindingsListofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkRoutingIsolineBindingsListofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkRoutingIsolineBindingsListofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkRoutingIsolineBindingsListofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkRoutingIsolineBindingsListofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkRoutingIsolineBindingsListofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkRoutingIsolineBindingsListofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkRoutingIsolineBindingsListofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingsListofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkRoutingIsolineBindingsListofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingsListofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingsListofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingsListofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingsListofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkRoutingIsolineBindingsListofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingsListofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkRoutingIsolineBindingsListofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingsListofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates> heresdkRoutingIsolineBindingsListofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingIsolineBindingsListofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingsListofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkRoutingIsolineBindingsListofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingsListofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingsListofSdkCoreGeopolygonCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_GeoPolygon_create_handle'));
final _heresdkRoutingIsolineBindingsListofSdkCoreGeopolygonReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_GeoPolygon_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkCoreGeopolygonInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_GeoPolygon_insert'));
final _heresdkRoutingIsolineBindingsListofSdkCoreGeopolygonIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_GeoPolygon_iterator'));
final _heresdkRoutingIsolineBindingsListofSdkCoreGeopolygonIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_GeoPolygon_iterator_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkCoreGeopolygonIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_GeoPolygon_iterator_is_valid'));
final _heresdkRoutingIsolineBindingsListofSdkCoreGeopolygonIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_GeoPolygon_iterator_increment'));
final _heresdkRoutingIsolineBindingsListofSdkCoreGeopolygonIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_GeoPolygon_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkCoreGeopolygonToFfi(List<GeoPolygon> value) {
  final _result = _heresdkRoutingIsolineBindingsListofSdkCoreGeopolygonCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeopolygonToFfi(element);
    _heresdkRoutingIsolineBindingsListofSdkCoreGeopolygonInsert(_result, _elementHandle);
    sdkCoreGeopolygonReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoPolygon> heresdkRoutingIsolineBindingsListofSdkCoreGeopolygonFromFfi(Pointer<Void> handle) {
  final result = List<GeoPolygon>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingsListofSdkCoreGeopolygonIterator(handle);
  while (_heresdkRoutingIsolineBindingsListofSdkCoreGeopolygonIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingsListofSdkCoreGeopolygonIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeopolygonFromFfi(_elementHandle));
    } finally {
      sdkCoreGeopolygonReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingsListofSdkCoreGeopolygonIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingsListofSdkCoreGeopolygonIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkCoreGeopolygonReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingsListofSdkCoreGeopolygonReleaseHandle(handle);

final _heresdkRoutingIsolineBindingsListofSdkCoreGeopolygonCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_GeoPolygon_create_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkCoreGeopolygonReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_GeoPolygon_release_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkCoreGeopolygonGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_GeoPolygon_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkCoreGeopolygonToFfiNullable(List<GeoPolygon> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingsListofSdkCoreGeopolygonToFfi(value);
  final result = _heresdkRoutingIsolineBindingsListofSdkCoreGeopolygonCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingsListofSdkCoreGeopolygonReleaseFfiHandle(_handle);
  return result;
}

List<GeoPolygon> heresdkRoutingIsolineBindingsListofSdkCoreGeopolygonFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingIsolineBindingsListofSdkCoreGeopolygonGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingsListofSdkCoreGeopolygonFromFfi(_handle);
  heresdkRoutingIsolineBindingsListofSdkCoreGeopolygonReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkCoreGeopolygonReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingsListofSdkCoreGeopolygonReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingsListofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkRoutingIsolineBindingsListofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_LocalizedText_insert'));
final _heresdkRoutingIsolineBindingsListofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_LocalizedText_iterator'));
final _heresdkRoutingIsolineBindingsListofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkRoutingIsolineBindingsListofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkRoutingIsolineBindingsListofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkRoutingIsolineBindingsListofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkRoutingIsolineBindingsListofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkRoutingIsolineBindingsListofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingsListofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkRoutingIsolineBindingsListofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingsListofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingsListofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingsListofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingsListofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkRoutingIsolineBindingsListofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingsListofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkRoutingIsolineBindingsListofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingsListofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText> heresdkRoutingIsolineBindingsListofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingIsolineBindingsListofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingsListofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkRoutingIsolineBindingsListofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingsListofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingsListofSdkRoutingAttributionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Attribution_create_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingAttributionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Attribution_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingAttributionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Attribution_insert'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingAttributionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Attribution_iterator'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingAttributionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Attribution_iterator_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingAttributionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Attribution_iterator_is_valid'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingAttributionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Attribution_iterator_increment'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingAttributionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Attribution_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkRoutingAttributionToFfi(List<Attribution> value) {
  final _result = _heresdkRoutingIsolineBindingsListofSdkRoutingAttributionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingAttributionToFfi(element);
    _heresdkRoutingIsolineBindingsListofSdkRoutingAttributionInsert(_result, _elementHandle);
    sdkRoutingAttributionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Attribution> heresdkRoutingIsolineBindingsListofSdkRoutingAttributionFromFfi(Pointer<Void> handle) {
  final result = List<Attribution>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingsListofSdkRoutingAttributionIterator(handle);
  while (_heresdkRoutingIsolineBindingsListofSdkRoutingAttributionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingsListofSdkRoutingAttributionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingAttributionFromFfi(_elementHandle));
    } finally {
      sdkRoutingAttributionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingsListofSdkRoutingAttributionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingsListofSdkRoutingAttributionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkRoutingAttributionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingsListofSdkRoutingAttributionReleaseHandle(handle);

final _heresdkRoutingIsolineBindingsListofSdkRoutingAttributionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Attribution_create_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingAttributionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Attribution_release_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingAttributionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Attribution_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkRoutingAttributionToFfiNullable(List<Attribution> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingsListofSdkRoutingAttributionToFfi(value);
  final result = _heresdkRoutingIsolineBindingsListofSdkRoutingAttributionCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingsListofSdkRoutingAttributionReleaseFfiHandle(_handle);
  return result;
}

List<Attribution> heresdkRoutingIsolineBindingsListofSdkRoutingAttributionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingIsolineBindingsListofSdkRoutingAttributionGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingsListofSdkRoutingAttributionFromFfi(_handle);
  heresdkRoutingIsolineBindingsListofSdkRoutingAttributionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkRoutingAttributionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingsListofSdkRoutingAttributionReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingsListofSdkRoutingChargingconnectortypeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_ChargingConnectorType_create_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingChargingconnectortypeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_ChargingConnectorType_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingChargingconnectortypeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_ChargingConnectorType_insert'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingChargingconnectortypeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_ChargingConnectorType_iterator'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingChargingconnectortypeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_ChargingConnectorType_iterator_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingChargingconnectortypeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_ChargingConnectorType_iterator_is_valid'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingChargingconnectortypeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_ChargingConnectorType_iterator_increment'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingChargingconnectortypeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_ChargingConnectorType_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkRoutingChargingconnectortypeToFfi(List<ChargingConnectorType> value) {
  final _result = _heresdkRoutingIsolineBindingsListofSdkRoutingChargingconnectortypeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingChargingconnectortypeToFfi(element);
    _heresdkRoutingIsolineBindingsListofSdkRoutingChargingconnectortypeInsert(_result, _elementHandle);
    sdkRoutingChargingconnectortypeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ChargingConnectorType> heresdkRoutingIsolineBindingsListofSdkRoutingChargingconnectortypeFromFfi(Pointer<Void> handle) {
  final result = List<ChargingConnectorType>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingsListofSdkRoutingChargingconnectortypeIterator(handle);
  while (_heresdkRoutingIsolineBindingsListofSdkRoutingChargingconnectortypeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingsListofSdkRoutingChargingconnectortypeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingChargingconnectortypeFromFfi(_elementHandle));
    } finally {
      sdkRoutingChargingconnectortypeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingsListofSdkRoutingChargingconnectortypeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingsListofSdkRoutingChargingconnectortypeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkRoutingChargingconnectortypeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingsListofSdkRoutingChargingconnectortypeReleaseHandle(handle);

final _heresdkRoutingIsolineBindingsListofSdkRoutingChargingconnectortypeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_ChargingConnectorType_create_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingChargingconnectortypeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_ChargingConnectorType_release_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingChargingconnectortypeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_ChargingConnectorType_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkRoutingChargingconnectortypeToFfiNullable(List<ChargingConnectorType> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingsListofSdkRoutingChargingconnectortypeToFfi(value);
  final result = _heresdkRoutingIsolineBindingsListofSdkRoutingChargingconnectortypeCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingsListofSdkRoutingChargingconnectortypeReleaseFfiHandle(_handle);
  return result;
}

List<ChargingConnectorType> heresdkRoutingIsolineBindingsListofSdkRoutingChargingconnectortypeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingIsolineBindingsListofSdkRoutingChargingconnectortypeGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingsListofSdkRoutingChargingconnectortypeFromFfi(_handle);
  heresdkRoutingIsolineBindingsListofSdkRoutingChargingconnectortypeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkRoutingChargingconnectortypeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingsListofSdkRoutingChargingconnectortypeReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingsListofSdkRoutingFareCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Fare_create_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingFareReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Fare_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingFareInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Fare_insert'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingFareIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Fare_iterator'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingFareIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Fare_iterator_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingFareIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Fare_iterator_is_valid'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingFareIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Fare_iterator_increment'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingFareIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Fare_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkRoutingFareToFfi(List<Fare> value) {
  final _result = _heresdkRoutingIsolineBindingsListofSdkRoutingFareCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingFareToFfi(element);
    _heresdkRoutingIsolineBindingsListofSdkRoutingFareInsert(_result, _elementHandle);
    sdkRoutingFareReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Fare> heresdkRoutingIsolineBindingsListofSdkRoutingFareFromFfi(Pointer<Void> handle) {
  final result = List<Fare>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingsListofSdkRoutingFareIterator(handle);
  while (_heresdkRoutingIsolineBindingsListofSdkRoutingFareIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingsListofSdkRoutingFareIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingFareFromFfi(_elementHandle));
    } finally {
      sdkRoutingFareReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingsListofSdkRoutingFareIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingsListofSdkRoutingFareIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkRoutingFareReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingsListofSdkRoutingFareReleaseHandle(handle);

final _heresdkRoutingIsolineBindingsListofSdkRoutingFareCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Fare_create_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingFareReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Fare_release_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingFareGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Fare_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkRoutingFareToFfiNullable(List<Fare> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingsListofSdkRoutingFareToFfi(value);
  final result = _heresdkRoutingIsolineBindingsListofSdkRoutingFareCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingsListofSdkRoutingFareReleaseFfiHandle(_handle);
  return result;
}

List<Fare> heresdkRoutingIsolineBindingsListofSdkRoutingFareFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingIsolineBindingsListofSdkRoutingFareGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingsListofSdkRoutingFareFromFfi(_handle);
  heresdkRoutingIsolineBindingsListofSdkRoutingFareReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkRoutingFareReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingsListofSdkRoutingFareReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingsListofSdkRoutingHazardousgoodCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_HazardousGood_create_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingHazardousgoodReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_HazardousGood_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingHazardousgoodInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_HazardousGood_insert'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingHazardousgoodIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_HazardousGood_iterator'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingHazardousgoodIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_HazardousGood_iterator_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingHazardousgoodIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_HazardousGood_iterator_is_valid'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingHazardousgoodIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_HazardousGood_iterator_increment'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingHazardousgoodIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_HazardousGood_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkRoutingHazardousgoodToFfi(List<HazardousGood> value) {
  final _result = _heresdkRoutingIsolineBindingsListofSdkRoutingHazardousgoodCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingHazardousgoodToFfi(element);
    _heresdkRoutingIsolineBindingsListofSdkRoutingHazardousgoodInsert(_result, _elementHandle);
    sdkRoutingHazardousgoodReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<HazardousGood> heresdkRoutingIsolineBindingsListofSdkRoutingHazardousgoodFromFfi(Pointer<Void> handle) {
  final result = List<HazardousGood>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingsListofSdkRoutingHazardousgoodIterator(handle);
  while (_heresdkRoutingIsolineBindingsListofSdkRoutingHazardousgoodIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingsListofSdkRoutingHazardousgoodIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingHazardousgoodFromFfi(_elementHandle));
    } finally {
      sdkRoutingHazardousgoodReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingsListofSdkRoutingHazardousgoodIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingsListofSdkRoutingHazardousgoodIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkRoutingHazardousgoodReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingsListofSdkRoutingHazardousgoodReleaseHandle(handle);

final _heresdkRoutingIsolineBindingsListofSdkRoutingHazardousgoodCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_HazardousGood_create_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingHazardousgoodReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_HazardousGood_release_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingHazardousgoodGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_HazardousGood_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkRoutingHazardousgoodToFfiNullable(List<HazardousGood> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingsListofSdkRoutingHazardousgoodToFfi(value);
  final result = _heresdkRoutingIsolineBindingsListofSdkRoutingHazardousgoodCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingsListofSdkRoutingHazardousgoodReleaseFfiHandle(_handle);
  return result;
}

List<HazardousGood> heresdkRoutingIsolineBindingsListofSdkRoutingHazardousgoodFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingIsolineBindingsListofSdkRoutingHazardousgoodGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingsListofSdkRoutingHazardousgoodFromFfi(_handle);
  heresdkRoutingIsolineBindingsListofSdkRoutingHazardousgoodReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkRoutingHazardousgoodReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingsListofSdkRoutingHazardousgoodReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingsListofSdkRoutingIsolineCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Isoline_create_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingIsolineReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Isoline_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingIsolineInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Isoline_insert'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingIsolineIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Isoline_iterator'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingIsolineIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Isoline_iterator_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingIsolineIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Isoline_iterator_is_valid'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingIsolineIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Isoline_iterator_increment'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingIsolineIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Isoline_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkRoutingIsolineToFfi(List<Isoline> value) {
  final _result = _heresdkRoutingIsolineBindingsListofSdkRoutingIsolineCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingIsolineToFfi(element);
    _heresdkRoutingIsolineBindingsListofSdkRoutingIsolineInsert(_result, _elementHandle);
    sdkRoutingIsolineReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Isoline> heresdkRoutingIsolineBindingsListofSdkRoutingIsolineFromFfi(Pointer<Void> handle) {
  final result = List<Isoline>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingsListofSdkRoutingIsolineIterator(handle);
  while (_heresdkRoutingIsolineBindingsListofSdkRoutingIsolineIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingsListofSdkRoutingIsolineIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingIsolineFromFfi(_elementHandle));
    } finally {
      sdkRoutingIsolineReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingsListofSdkRoutingIsolineIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingsListofSdkRoutingIsolineIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkRoutingIsolineReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingsListofSdkRoutingIsolineReleaseHandle(handle);

final _heresdkRoutingIsolineBindingsListofSdkRoutingIsolineCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Isoline_create_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingIsolineReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Isoline_release_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingIsolineGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Isoline_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkRoutingIsolineToFfiNullable(List<Isoline> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingsListofSdkRoutingIsolineToFfi(value);
  final result = _heresdkRoutingIsolineBindingsListofSdkRoutingIsolineCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingsListofSdkRoutingIsolineReleaseFfiHandle(_handle);
  return result;
}

List<Isoline> heresdkRoutingIsolineBindingsListofSdkRoutingIsolineFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingIsolineBindingsListofSdkRoutingIsolineGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingsListofSdkRoutingIsolineFromFfi(_handle);
  heresdkRoutingIsolineBindingsListofSdkRoutingIsolineReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkRoutingIsolineReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingsListofSdkRoutingIsolineReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingsListofSdkRoutingManeuverCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Maneuver_create_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingManeuverReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Maneuver_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingManeuverInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Maneuver_insert'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingManeuverIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Maneuver_iterator'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingManeuverIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Maneuver_iterator_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingManeuverIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Maneuver_iterator_is_valid'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingManeuverIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Maneuver_iterator_increment'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingManeuverIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Maneuver_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkRoutingManeuverToFfi(List<Maneuver> value) {
  final _result = _heresdkRoutingIsolineBindingsListofSdkRoutingManeuverCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingManeuverToFfi(element);
    _heresdkRoutingIsolineBindingsListofSdkRoutingManeuverInsert(_result, _elementHandle);
    sdkRoutingManeuverReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Maneuver> heresdkRoutingIsolineBindingsListofSdkRoutingManeuverFromFfi(Pointer<Void> handle) {
  final result = List<Maneuver>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingsListofSdkRoutingManeuverIterator(handle);
  while (_heresdkRoutingIsolineBindingsListofSdkRoutingManeuverIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingsListofSdkRoutingManeuverIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingManeuverFromFfi(_elementHandle));
    } finally {
      sdkRoutingManeuverReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingsListofSdkRoutingManeuverIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingsListofSdkRoutingManeuverIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkRoutingManeuverReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingsListofSdkRoutingManeuverReleaseHandle(handle);

final _heresdkRoutingIsolineBindingsListofSdkRoutingManeuverCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Maneuver_create_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingManeuverReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Maneuver_release_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingManeuverGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Maneuver_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkRoutingManeuverToFfiNullable(List<Maneuver> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingsListofSdkRoutingManeuverToFfi(value);
  final result = _heresdkRoutingIsolineBindingsListofSdkRoutingManeuverCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingsListofSdkRoutingManeuverReleaseFfiHandle(_handle);
  return result;
}

List<Maneuver> heresdkRoutingIsolineBindingsListofSdkRoutingManeuverFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingIsolineBindingsListofSdkRoutingManeuverGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingsListofSdkRoutingManeuverFromFfi(_handle);
  heresdkRoutingIsolineBindingsListofSdkRoutingManeuverReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkRoutingManeuverReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingsListofSdkRoutingManeuverReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingsListofSdkRoutingNoticeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Notice_create_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingNoticeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Notice_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingNoticeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Notice_insert'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingNoticeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Notice_iterator'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingNoticeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Notice_iterator_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingNoticeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Notice_iterator_is_valid'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingNoticeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Notice_iterator_increment'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingNoticeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Notice_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkRoutingNoticeToFfi(List<Notice> value) {
  final _result = _heresdkRoutingIsolineBindingsListofSdkRoutingNoticeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingNoticeToFfi(element);
    _heresdkRoutingIsolineBindingsListofSdkRoutingNoticeInsert(_result, _elementHandle);
    sdkRoutingNoticeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Notice> heresdkRoutingIsolineBindingsListofSdkRoutingNoticeFromFfi(Pointer<Void> handle) {
  final result = List<Notice>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingsListofSdkRoutingNoticeIterator(handle);
  while (_heresdkRoutingIsolineBindingsListofSdkRoutingNoticeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingsListofSdkRoutingNoticeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingNoticeFromFfi(_elementHandle));
    } finally {
      sdkRoutingNoticeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingsListofSdkRoutingNoticeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingsListofSdkRoutingNoticeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkRoutingNoticeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingsListofSdkRoutingNoticeReleaseHandle(handle);

final _heresdkRoutingIsolineBindingsListofSdkRoutingNoticeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Notice_create_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingNoticeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Notice_release_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingNoticeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Notice_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkRoutingNoticeToFfiNullable(List<Notice> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingsListofSdkRoutingNoticeToFfi(value);
  final result = _heresdkRoutingIsolineBindingsListofSdkRoutingNoticeCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingsListofSdkRoutingNoticeReleaseFfiHandle(_handle);
  return result;
}

List<Notice> heresdkRoutingIsolineBindingsListofSdkRoutingNoticeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingIsolineBindingsListofSdkRoutingNoticeGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingsListofSdkRoutingNoticeFromFfi(_handle);
  heresdkRoutingIsolineBindingsListofSdkRoutingNoticeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkRoutingNoticeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingsListofSdkRoutingNoticeReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingsListofSdkRoutingPostactionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_PostAction_create_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingPostactionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_PostAction_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingPostactionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_PostAction_insert'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingPostactionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_PostAction_iterator'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingPostactionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_PostAction_iterator_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingPostactionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_PostAction_iterator_is_valid'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingPostactionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_PostAction_iterator_increment'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingPostactionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_PostAction_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkRoutingPostactionToFfi(List<PostAction> value) {
  final _result = _heresdkRoutingIsolineBindingsListofSdkRoutingPostactionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPostactionToFfi(element);
    _heresdkRoutingIsolineBindingsListofSdkRoutingPostactionInsert(_result, _elementHandle);
    sdkRoutingPostactionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PostAction> heresdkRoutingIsolineBindingsListofSdkRoutingPostactionFromFfi(Pointer<Void> handle) {
  final result = List<PostAction>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingsListofSdkRoutingPostactionIterator(handle);
  while (_heresdkRoutingIsolineBindingsListofSdkRoutingPostactionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingsListofSdkRoutingPostactionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPostactionFromFfi(_elementHandle));
    } finally {
      sdkRoutingPostactionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingsListofSdkRoutingPostactionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingsListofSdkRoutingPostactionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkRoutingPostactionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingsListofSdkRoutingPostactionReleaseHandle(handle);

final _heresdkRoutingIsolineBindingsListofSdkRoutingPostactionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_PostAction_create_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingPostactionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_PostAction_release_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingPostactionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_PostAction_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkRoutingPostactionToFfiNullable(List<PostAction> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingsListofSdkRoutingPostactionToFfi(value);
  final result = _heresdkRoutingIsolineBindingsListofSdkRoutingPostactionCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingsListofSdkRoutingPostactionReleaseFfiHandle(_handle);
  return result;
}

List<PostAction> heresdkRoutingIsolineBindingsListofSdkRoutingPostactionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingIsolineBindingsListofSdkRoutingPostactionGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingsListofSdkRoutingPostactionFromFfi(_handle);
  heresdkRoutingIsolineBindingsListofSdkRoutingPostactionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkRoutingPostactionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingsListofSdkRoutingPostactionReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingsListofSdkRoutingPreactionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_PreAction_create_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingPreactionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_PreAction_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingPreactionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_PreAction_insert'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingPreactionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_PreAction_iterator'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingPreactionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_PreAction_iterator_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingPreactionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_PreAction_iterator_is_valid'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingPreactionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_PreAction_iterator_increment'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingPreactionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_PreAction_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkRoutingPreactionToFfi(List<PreAction> value) {
  final _result = _heresdkRoutingIsolineBindingsListofSdkRoutingPreactionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPreactionToFfi(element);
    _heresdkRoutingIsolineBindingsListofSdkRoutingPreactionInsert(_result, _elementHandle);
    sdkRoutingPreactionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PreAction> heresdkRoutingIsolineBindingsListofSdkRoutingPreactionFromFfi(Pointer<Void> handle) {
  final result = List<PreAction>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingsListofSdkRoutingPreactionIterator(handle);
  while (_heresdkRoutingIsolineBindingsListofSdkRoutingPreactionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingsListofSdkRoutingPreactionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPreactionFromFfi(_elementHandle));
    } finally {
      sdkRoutingPreactionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingsListofSdkRoutingPreactionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingsListofSdkRoutingPreactionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkRoutingPreactionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingsListofSdkRoutingPreactionReleaseHandle(handle);

final _heresdkRoutingIsolineBindingsListofSdkRoutingPreactionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_PreAction_create_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingPreactionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_PreAction_release_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingPreactionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_PreAction_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkRoutingPreactionToFfiNullable(List<PreAction> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingsListofSdkRoutingPreactionToFfi(value);
  final result = _heresdkRoutingIsolineBindingsListofSdkRoutingPreactionCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingsListofSdkRoutingPreactionReleaseFfiHandle(_handle);
  return result;
}

List<PreAction> heresdkRoutingIsolineBindingsListofSdkRoutingPreactionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingIsolineBindingsListofSdkRoutingPreactionGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingsListofSdkRoutingPreactionFromFfi(_handle);
  heresdkRoutingIsolineBindingsListofSdkRoutingPreactionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkRoutingPreactionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingsListofSdkRoutingPreactionReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingsListofSdkRoutingRoadfeaturesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_RoadFeatures_create_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingRoadfeaturesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_RoadFeatures_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingRoadfeaturesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_RoadFeatures_insert'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingRoadfeaturesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_RoadFeatures_iterator'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingRoadfeaturesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_RoadFeatures_iterator_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingRoadfeaturesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_RoadFeatures_iterator_is_valid'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingRoadfeaturesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_RoadFeatures_iterator_increment'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingRoadfeaturesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_RoadFeatures_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkRoutingRoadfeaturesToFfi(List<RoadFeatures> value) {
  final _result = _heresdkRoutingIsolineBindingsListofSdkRoutingRoadfeaturesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRoadfeaturesToFfi(element);
    _heresdkRoutingIsolineBindingsListofSdkRoutingRoadfeaturesInsert(_result, _elementHandle);
    sdkRoutingRoadfeaturesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<RoadFeatures> heresdkRoutingIsolineBindingsListofSdkRoutingRoadfeaturesFromFfi(Pointer<Void> handle) {
  final result = List<RoadFeatures>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingsListofSdkRoutingRoadfeaturesIterator(handle);
  while (_heresdkRoutingIsolineBindingsListofSdkRoutingRoadfeaturesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingsListofSdkRoutingRoadfeaturesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRoadfeaturesFromFfi(_elementHandle));
    } finally {
      sdkRoutingRoadfeaturesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingsListofSdkRoutingRoadfeaturesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingsListofSdkRoutingRoadfeaturesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkRoutingRoadfeaturesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingsListofSdkRoutingRoadfeaturesReleaseHandle(handle);

final _heresdkRoutingIsolineBindingsListofSdkRoutingRoadfeaturesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_RoadFeatures_create_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingRoadfeaturesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_RoadFeatures_release_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingRoadfeaturesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_RoadFeatures_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkRoutingRoadfeaturesToFfiNullable(List<RoadFeatures> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingsListofSdkRoutingRoadfeaturesToFfi(value);
  final result = _heresdkRoutingIsolineBindingsListofSdkRoutingRoadfeaturesCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingsListofSdkRoutingRoadfeaturesReleaseFfiHandle(_handle);
  return result;
}

List<RoadFeatures> heresdkRoutingIsolineBindingsListofSdkRoutingRoadfeaturesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingIsolineBindingsListofSdkRoutingRoadfeaturesGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingsListofSdkRoutingRoadfeaturesFromFfi(_handle);
  heresdkRoutingIsolineBindingsListofSdkRoutingRoadfeaturesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkRoutingRoadfeaturesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingsListofSdkRoutingRoadfeaturesReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingsListofSdkRoutingRouteCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Route_create_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingRouteReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Route_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingRouteInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Route_insert'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingRouteIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Route_iterator'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingRouteIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Route_iterator_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingRouteIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Route_iterator_is_valid'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingRouteIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Route_iterator_increment'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingRouteIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Route_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkRoutingRouteToFfi(List<Route> value) {
  final _result = _heresdkRoutingIsolineBindingsListofSdkRoutingRouteCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRouteToFfi(element);
    _heresdkRoutingIsolineBindingsListofSdkRoutingRouteInsert(_result, _elementHandle);
    sdkRoutingRouteReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Route> heresdkRoutingIsolineBindingsListofSdkRoutingRouteFromFfi(Pointer<Void> handle) {
  final result = List<Route>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingsListofSdkRoutingRouteIterator(handle);
  while (_heresdkRoutingIsolineBindingsListofSdkRoutingRouteIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingsListofSdkRoutingRouteIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRouteFromFfi(_elementHandle));
    } finally {
      sdkRoutingRouteReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingsListofSdkRoutingRouteIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingsListofSdkRoutingRouteIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkRoutingRouteReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingsListofSdkRoutingRouteReleaseHandle(handle);

final _heresdkRoutingIsolineBindingsListofSdkRoutingRouteCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Route_create_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingRouteReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Route_release_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingRouteGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Route_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkRoutingRouteToFfiNullable(List<Route> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingsListofSdkRoutingRouteToFfi(value);
  final result = _heresdkRoutingIsolineBindingsListofSdkRoutingRouteCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingsListofSdkRoutingRouteReleaseFfiHandle(_handle);
  return result;
}

List<Route> heresdkRoutingIsolineBindingsListofSdkRoutingRouteFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingIsolineBindingsListofSdkRoutingRouteGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingsListofSdkRoutingRouteFromFfi(_handle);
  heresdkRoutingIsolineBindingsListofSdkRoutingRouteReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkRoutingRouteReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingsListofSdkRoutingRouteReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingsListofSdkRoutingSectionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Section_create_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingSectionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Section_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingSectionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Section_insert'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingSectionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Section_iterator'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingSectionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Section_iterator_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingSectionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Section_iterator_is_valid'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingSectionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Section_iterator_increment'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingSectionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Section_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkRoutingSectionToFfi(List<Section> value) {
  final _result = _heresdkRoutingIsolineBindingsListofSdkRoutingSectionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSectionToFfi(element);
    _heresdkRoutingIsolineBindingsListofSdkRoutingSectionInsert(_result, _elementHandle);
    sdkRoutingSectionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Section> heresdkRoutingIsolineBindingsListofSdkRoutingSectionFromFfi(Pointer<Void> handle) {
  final result = List<Section>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingsListofSdkRoutingSectionIterator(handle);
  while (_heresdkRoutingIsolineBindingsListofSdkRoutingSectionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingsListofSdkRoutingSectionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSectionFromFfi(_elementHandle));
    } finally {
      sdkRoutingSectionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingsListofSdkRoutingSectionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingsListofSdkRoutingSectionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkRoutingSectionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingsListofSdkRoutingSectionReleaseHandle(handle);

final _heresdkRoutingIsolineBindingsListofSdkRoutingSectionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Section_create_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingSectionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Section_release_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingSectionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Section_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkRoutingSectionToFfiNullable(List<Section> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingsListofSdkRoutingSectionToFfi(value);
  final result = _heresdkRoutingIsolineBindingsListofSdkRoutingSectionCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingsListofSdkRoutingSectionReleaseFfiHandle(_handle);
  return result;
}

List<Section> heresdkRoutingIsolineBindingsListofSdkRoutingSectionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingIsolineBindingsListofSdkRoutingSectionGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingsListofSdkRoutingSectionFromFfi(_handle);
  heresdkRoutingIsolineBindingsListofSdkRoutingSectionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkRoutingSectionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingsListofSdkRoutingSectionReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingsListofSdkRoutingSectionnoticeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_SectionNotice_create_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingSectionnoticeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_SectionNotice_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingSectionnoticeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_SectionNotice_insert'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingSectionnoticeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_SectionNotice_iterator'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingSectionnoticeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_SectionNotice_iterator_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingSectionnoticeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_SectionNotice_iterator_is_valid'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingSectionnoticeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_SectionNotice_iterator_increment'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingSectionnoticeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_SectionNotice_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkRoutingSectionnoticeToFfi(List<SectionNotice> value) {
  final _result = _heresdkRoutingIsolineBindingsListofSdkRoutingSectionnoticeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSectionnoticeToFfi(element);
    _heresdkRoutingIsolineBindingsListofSdkRoutingSectionnoticeInsert(_result, _elementHandle);
    sdkRoutingSectionnoticeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SectionNotice> heresdkRoutingIsolineBindingsListofSdkRoutingSectionnoticeFromFfi(Pointer<Void> handle) {
  final result = List<SectionNotice>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingsListofSdkRoutingSectionnoticeIterator(handle);
  while (_heresdkRoutingIsolineBindingsListofSdkRoutingSectionnoticeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingsListofSdkRoutingSectionnoticeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSectionnoticeFromFfi(_elementHandle));
    } finally {
      sdkRoutingSectionnoticeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingsListofSdkRoutingSectionnoticeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingsListofSdkRoutingSectionnoticeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkRoutingSectionnoticeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingsListofSdkRoutingSectionnoticeReleaseHandle(handle);

final _heresdkRoutingIsolineBindingsListofSdkRoutingSectionnoticeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_SectionNotice_create_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingSectionnoticeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_SectionNotice_release_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingSectionnoticeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_SectionNotice_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkRoutingSectionnoticeToFfiNullable(List<SectionNotice> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingsListofSdkRoutingSectionnoticeToFfi(value);
  final result = _heresdkRoutingIsolineBindingsListofSdkRoutingSectionnoticeCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingsListofSdkRoutingSectionnoticeReleaseFfiHandle(_handle);
  return result;
}

List<SectionNotice> heresdkRoutingIsolineBindingsListofSdkRoutingSectionnoticeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingIsolineBindingsListofSdkRoutingSectionnoticeGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingsListofSdkRoutingSectionnoticeFromFfi(_handle);
  heresdkRoutingIsolineBindingsListofSdkRoutingSectionnoticeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkRoutingSectionnoticeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingsListofSdkRoutingSectionnoticeReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingsListofSdkRoutingSpanCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Span_create_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingSpanReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Span_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingSpanInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Span_insert'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingSpanIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Span_iterator'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingSpanIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Span_iterator_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingSpanIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Span_iterator_is_valid'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingSpanIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Span_iterator_increment'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingSpanIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Span_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkRoutingSpanToFfi(List<Span> value) {
  final _result = _heresdkRoutingIsolineBindingsListofSdkRoutingSpanCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSpanToFfi(element);
    _heresdkRoutingIsolineBindingsListofSdkRoutingSpanInsert(_result, _elementHandle);
    sdkRoutingSpanReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Span> heresdkRoutingIsolineBindingsListofSdkRoutingSpanFromFfi(Pointer<Void> handle) {
  final result = List<Span>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingsListofSdkRoutingSpanIterator(handle);
  while (_heresdkRoutingIsolineBindingsListofSdkRoutingSpanIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingsListofSdkRoutingSpanIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSpanFromFfi(_elementHandle));
    } finally {
      sdkRoutingSpanReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingsListofSdkRoutingSpanIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingsListofSdkRoutingSpanIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkRoutingSpanReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingsListofSdkRoutingSpanReleaseHandle(handle);

final _heresdkRoutingIsolineBindingsListofSdkRoutingSpanCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Span_create_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingSpanReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Span_release_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingSpanGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Span_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkRoutingSpanToFfiNullable(List<Span> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingsListofSdkRoutingSpanToFfi(value);
  final result = _heresdkRoutingIsolineBindingsListofSdkRoutingSpanCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingsListofSdkRoutingSpanReleaseFfiHandle(_handle);
  return result;
}

List<Span> heresdkRoutingIsolineBindingsListofSdkRoutingSpanFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingIsolineBindingsListofSdkRoutingSpanGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingsListofSdkRoutingSpanFromFfi(_handle);
  heresdkRoutingIsolineBindingsListofSdkRoutingSpanReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkRoutingSpanReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingsListofSdkRoutingSpanReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingsListofSdkRoutingTrafficspeedCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_TrafficSpeed_create_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingTrafficspeedReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_TrafficSpeed_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingTrafficspeedInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_TrafficSpeed_insert'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingTrafficspeedIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_TrafficSpeed_iterator'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingTrafficspeedIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_TrafficSpeed_iterator_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingTrafficspeedIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_TrafficSpeed_iterator_is_valid'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingTrafficspeedIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_TrafficSpeed_iterator_increment'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingTrafficspeedIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_TrafficSpeed_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkRoutingTrafficspeedToFfi(List<TrafficSpeed> value) {
  final _result = _heresdkRoutingIsolineBindingsListofSdkRoutingTrafficspeedCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTrafficspeedToFfi(element);
    _heresdkRoutingIsolineBindingsListofSdkRoutingTrafficspeedInsert(_result, _elementHandle);
    sdkRoutingTrafficspeedReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TrafficSpeed> heresdkRoutingIsolineBindingsListofSdkRoutingTrafficspeedFromFfi(Pointer<Void> handle) {
  final result = List<TrafficSpeed>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingsListofSdkRoutingTrafficspeedIterator(handle);
  while (_heresdkRoutingIsolineBindingsListofSdkRoutingTrafficspeedIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingsListofSdkRoutingTrafficspeedIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTrafficspeedFromFfi(_elementHandle));
    } finally {
      sdkRoutingTrafficspeedReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingsListofSdkRoutingTrafficspeedIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingsListofSdkRoutingTrafficspeedIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkRoutingTrafficspeedReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingsListofSdkRoutingTrafficspeedReleaseHandle(handle);

final _heresdkRoutingIsolineBindingsListofSdkRoutingTrafficspeedCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_TrafficSpeed_create_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingTrafficspeedReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_TrafficSpeed_release_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingTrafficspeedGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_TrafficSpeed_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkRoutingTrafficspeedToFfiNullable(List<TrafficSpeed> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingsListofSdkRoutingTrafficspeedToFfi(value);
  final result = _heresdkRoutingIsolineBindingsListofSdkRoutingTrafficspeedCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingsListofSdkRoutingTrafficspeedReleaseFfiHandle(_handle);
  return result;
}

List<TrafficSpeed> heresdkRoutingIsolineBindingsListofSdkRoutingTrafficspeedFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingIsolineBindingsListofSdkRoutingTrafficspeedGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingsListofSdkRoutingTrafficspeedFromFfi(_handle);
  heresdkRoutingIsolineBindingsListofSdkRoutingTrafficspeedReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkRoutingTrafficspeedReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingsListofSdkRoutingTrafficspeedReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingsListofSdkRoutingTransitincidentCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_TransitIncident_create_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingTransitincidentReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_TransitIncident_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingTransitincidentInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_TransitIncident_insert'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingTransitincidentIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_TransitIncident_iterator'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingTransitincidentIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_TransitIncident_iterator_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingTransitincidentIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_TransitIncident_iterator_is_valid'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingTransitincidentIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_TransitIncident_iterator_increment'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingTransitincidentIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_TransitIncident_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkRoutingTransitincidentToFfi(List<TransitIncident> value) {
  final _result = _heresdkRoutingIsolineBindingsListofSdkRoutingTransitincidentCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitincidentToFfi(element);
    _heresdkRoutingIsolineBindingsListofSdkRoutingTransitincidentInsert(_result, _elementHandle);
    sdkRoutingTransitincidentReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitIncident> heresdkRoutingIsolineBindingsListofSdkRoutingTransitincidentFromFfi(Pointer<Void> handle) {
  final result = List<TransitIncident>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingsListofSdkRoutingTransitincidentIterator(handle);
  while (_heresdkRoutingIsolineBindingsListofSdkRoutingTransitincidentIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingsListofSdkRoutingTransitincidentIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitincidentFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitincidentReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingsListofSdkRoutingTransitincidentIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingsListofSdkRoutingTransitincidentIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkRoutingTransitincidentReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingsListofSdkRoutingTransitincidentReleaseHandle(handle);

final _heresdkRoutingIsolineBindingsListofSdkRoutingTransitincidentCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_TransitIncident_create_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingTransitincidentReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_TransitIncident_release_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingTransitincidentGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_TransitIncident_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkRoutingTransitincidentToFfiNullable(List<TransitIncident> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingsListofSdkRoutingTransitincidentToFfi(value);
  final result = _heresdkRoutingIsolineBindingsListofSdkRoutingTransitincidentCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingsListofSdkRoutingTransitincidentReleaseFfiHandle(_handle);
  return result;
}

List<TransitIncident> heresdkRoutingIsolineBindingsListofSdkRoutingTransitincidentFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingIsolineBindingsListofSdkRoutingTransitincidentGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingsListofSdkRoutingTransitincidentFromFfi(_handle);
  heresdkRoutingIsolineBindingsListofSdkRoutingTransitincidentReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkRoutingTransitincidentReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingsListofSdkRoutingTransitincidentReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingsListofSdkRoutingTransitmodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_TransitMode_create_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingTransitmodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_TransitMode_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingTransitmodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_TransitMode_insert'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingTransitmodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_TransitMode_iterator'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingTransitmodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_TransitMode_iterator_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingTransitmodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_TransitMode_iterator_is_valid'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingTransitmodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_TransitMode_iterator_increment'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingTransitmodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_TransitMode_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkRoutingTransitmodeToFfi(List<TransitMode> value) {
  final _result = _heresdkRoutingIsolineBindingsListofSdkRoutingTransitmodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitmodeToFfi(element);
    _heresdkRoutingIsolineBindingsListofSdkRoutingTransitmodeInsert(_result, _elementHandle);
    sdkRoutingTransitmodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitMode> heresdkRoutingIsolineBindingsListofSdkRoutingTransitmodeFromFfi(Pointer<Void> handle) {
  final result = List<TransitMode>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingsListofSdkRoutingTransitmodeIterator(handle);
  while (_heresdkRoutingIsolineBindingsListofSdkRoutingTransitmodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingsListofSdkRoutingTransitmodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitmodeFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitmodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingsListofSdkRoutingTransitmodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingsListofSdkRoutingTransitmodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkRoutingTransitmodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingsListofSdkRoutingTransitmodeReleaseHandle(handle);

final _heresdkRoutingIsolineBindingsListofSdkRoutingTransitmodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_TransitMode_create_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingTransitmodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_TransitMode_release_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingTransitmodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_TransitMode_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkRoutingTransitmodeToFfiNullable(List<TransitMode> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingsListofSdkRoutingTransitmodeToFfi(value);
  final result = _heresdkRoutingIsolineBindingsListofSdkRoutingTransitmodeCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingsListofSdkRoutingTransitmodeReleaseFfiHandle(_handle);
  return result;
}

List<TransitMode> heresdkRoutingIsolineBindingsListofSdkRoutingTransitmodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingIsolineBindingsListofSdkRoutingTransitmodeGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingsListofSdkRoutingTransitmodeFromFfi(_handle);
  heresdkRoutingIsolineBindingsListofSdkRoutingTransitmodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkRoutingTransitmodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingsListofSdkRoutingTransitmodeReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingsListofSdkRoutingTransitstopCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_TransitStop_create_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingTransitstopReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_TransitStop_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingTransitstopInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_TransitStop_insert'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingTransitstopIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_TransitStop_iterator'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingTransitstopIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_TransitStop_iterator_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingTransitstopIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_TransitStop_iterator_is_valid'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingTransitstopIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_TransitStop_iterator_increment'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingTransitstopIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_TransitStop_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkRoutingTransitstopToFfi(List<TransitStop> value) {
  final _result = _heresdkRoutingIsolineBindingsListofSdkRoutingTransitstopCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitstopToFfi(element);
    _heresdkRoutingIsolineBindingsListofSdkRoutingTransitstopInsert(_result, _elementHandle);
    sdkRoutingTransitstopReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitStop> heresdkRoutingIsolineBindingsListofSdkRoutingTransitstopFromFfi(Pointer<Void> handle) {
  final result = List<TransitStop>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingsListofSdkRoutingTransitstopIterator(handle);
  while (_heresdkRoutingIsolineBindingsListofSdkRoutingTransitstopIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingsListofSdkRoutingTransitstopIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitstopFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitstopReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingsListofSdkRoutingTransitstopIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingsListofSdkRoutingTransitstopIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkRoutingTransitstopReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingsListofSdkRoutingTransitstopReleaseHandle(handle);

final _heresdkRoutingIsolineBindingsListofSdkRoutingTransitstopCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_TransitStop_create_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingTransitstopReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_TransitStop_release_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingTransitstopGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_TransitStop_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkRoutingTransitstopToFfiNullable(List<TransitStop> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingsListofSdkRoutingTransitstopToFfi(value);
  final result = _heresdkRoutingIsolineBindingsListofSdkRoutingTransitstopCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingsListofSdkRoutingTransitstopReleaseFfiHandle(_handle);
  return result;
}

List<TransitStop> heresdkRoutingIsolineBindingsListofSdkRoutingTransitstopFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingIsolineBindingsListofSdkRoutingTransitstopGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingsListofSdkRoutingTransitstopFromFfi(_handle);
  heresdkRoutingIsolineBindingsListofSdkRoutingTransitstopReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkRoutingTransitstopReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingsListofSdkRoutingTransitstopReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingsListofSdkRoutingWaypointCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Waypoint_create_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingWaypointReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Waypoint_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingWaypointInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Waypoint_insert'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingWaypointIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Waypoint_iterator'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingWaypointIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Waypoint_iterator_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingWaypointIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Waypoint_iterator_is_valid'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingWaypointIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Waypoint_iterator_increment'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingWaypointIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Waypoint_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkRoutingWaypointToFfi(List<Waypoint> value) {
  final _result = _heresdkRoutingIsolineBindingsListofSdkRoutingWaypointCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingWaypointToFfi(element);
    _heresdkRoutingIsolineBindingsListofSdkRoutingWaypointInsert(_result, _elementHandle);
    sdkRoutingWaypointReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Waypoint> heresdkRoutingIsolineBindingsListofSdkRoutingWaypointFromFfi(Pointer<Void> handle) {
  final result = List<Waypoint>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingsListofSdkRoutingWaypointIterator(handle);
  while (_heresdkRoutingIsolineBindingsListofSdkRoutingWaypointIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingsListofSdkRoutingWaypointIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingWaypointFromFfi(_elementHandle));
    } finally {
      sdkRoutingWaypointReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingsListofSdkRoutingWaypointIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingsListofSdkRoutingWaypointIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkRoutingWaypointReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingsListofSdkRoutingWaypointReleaseHandle(handle);

final _heresdkRoutingIsolineBindingsListofSdkRoutingWaypointCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Waypoint_create_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingWaypointReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Waypoint_release_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingWaypointGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_Waypoint_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkRoutingWaypointToFfiNullable(List<Waypoint> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingsListofSdkRoutingWaypointToFfi(value);
  final result = _heresdkRoutingIsolineBindingsListofSdkRoutingWaypointCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingsListofSdkRoutingWaypointReleaseFfiHandle(_handle);
  return result;
}

List<Waypoint> heresdkRoutingIsolineBindingsListofSdkRoutingWaypointFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingIsolineBindingsListofSdkRoutingWaypointGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingsListofSdkRoutingWaypointFromFfi(_handle);
  heresdkRoutingIsolineBindingsListofSdkRoutingWaypointReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkRoutingWaypointReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingsListofSdkRoutingWaypointReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingsListofSdkRoutingZonecategoryCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_ZoneCategory_create_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingZonecategoryReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_ZoneCategory_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingZonecategoryInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_ZoneCategory_insert'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingZonecategoryIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_ZoneCategory_iterator'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingZonecategoryIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_ZoneCategory_iterator_release_handle'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingZonecategoryIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_ZoneCategory_iterator_is_valid'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingZonecategoryIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_ZoneCategory_iterator_increment'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingZonecategoryIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_ZoneCategory_iterator_get'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkRoutingZonecategoryToFfi(List<ZoneCategory> value) {
  final _result = _heresdkRoutingIsolineBindingsListofSdkRoutingZonecategoryCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingZonecategoryToFfi(element);
    _heresdkRoutingIsolineBindingsListofSdkRoutingZonecategoryInsert(_result, _elementHandle);
    sdkRoutingZonecategoryReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ZoneCategory> heresdkRoutingIsolineBindingsListofSdkRoutingZonecategoryFromFfi(Pointer<Void> handle) {
  final result = List<ZoneCategory>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingIsolineBindingsListofSdkRoutingZonecategoryIterator(handle);
  while (_heresdkRoutingIsolineBindingsListofSdkRoutingZonecategoryIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingIsolineBindingsListofSdkRoutingZonecategoryIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingZonecategoryFromFfi(_elementHandle));
    } finally {
      sdkRoutingZonecategoryReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingIsolineBindingsListofSdkRoutingZonecategoryIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingsListofSdkRoutingZonecategoryIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkRoutingZonecategoryReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingsListofSdkRoutingZonecategoryReleaseHandle(handle);

final _heresdkRoutingIsolineBindingsListofSdkRoutingZonecategoryCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_ZoneCategory_create_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingZonecategoryReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_ZoneCategory_release_handle_nullable'));
final _heresdkRoutingIsolineBindingsListofSdkRoutingZonecategoryGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_ListOf_sdk_routing_ZoneCategory_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingsListofSdkRoutingZonecategoryToFfiNullable(List<ZoneCategory> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingsListofSdkRoutingZonecategoryToFfi(value);
  final result = _heresdkRoutingIsolineBindingsListofSdkRoutingZonecategoryCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingsListofSdkRoutingZonecategoryReleaseFfiHandle(_handle);
  return result;
}

List<ZoneCategory> heresdkRoutingIsolineBindingsListofSdkRoutingZonecategoryFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingIsolineBindingsListofSdkRoutingZonecategoryGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingsListofSdkRoutingZonecategoryFromFfi(_handle);
  heresdkRoutingIsolineBindingsListofSdkRoutingZonecategoryReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingsListofSdkRoutingZonecategoryReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingsListofSdkRoutingZonecategoryReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingsMapofDoubleToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindings_MapOf_Double_to_Double_create_handle'));
final _heresdkRoutingIsolineBindingsMapofDoubleToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_MapOf_Double_to_Double_release_handle'));
final _heresdkRoutingIsolineBindingsMapofDoubleToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Double, Double),
    void Function(Pointer<Void>, double, double)
  >('here_sdk_heresdk_routing_isoline_bindings_MapOf_Double_to_Double_put'));
final _heresdkRoutingIsolineBindingsMapofDoubleToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_MapOf_Double_to_Double_iterator'));
final _heresdkRoutingIsolineBindingsMapofDoubleToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_MapOf_Double_to_Double_iterator_release_handle'));
final _heresdkRoutingIsolineBindingsMapofDoubleToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_MapOf_Double_to_Double_iterator_is_valid'));
final _heresdkRoutingIsolineBindingsMapofDoubleToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_MapOf_Double_to_Double_iterator_increment'));
final _heresdkRoutingIsolineBindingsMapofDoubleToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_MapOf_Double_to_Double_iterator_get_key'));
final _heresdkRoutingIsolineBindingsMapofDoubleToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_MapOf_Double_to_Double_iterator_get_value'));

Pointer<Void> heresdkRoutingIsolineBindingsMapofDoubleToDoubleToFfi(Map<double, double> value) {
  final _result = _heresdkRoutingIsolineBindingsMapofDoubleToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _heresdkRoutingIsolineBindingsMapofDoubleToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<double, double> heresdkRoutingIsolineBindingsMapofDoubleToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<double, double>();
  final _iteratorHandle = _heresdkRoutingIsolineBindingsMapofDoubleToDoubleIterator(handle);
  while (_heresdkRoutingIsolineBindingsMapofDoubleToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkRoutingIsolineBindingsMapofDoubleToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkRoutingIsolineBindingsMapofDoubleToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _heresdkRoutingIsolineBindingsMapofDoubleToDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingsMapofDoubleToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingsMapofDoubleToDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingsMapofDoubleToDoubleReleaseHandle(handle);

final _heresdkRoutingIsolineBindingsMapofDoubleToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_MapOf_Double_to_Double_create_handle_nullable'));
final _heresdkRoutingIsolineBindingsMapofDoubleToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_MapOf_Double_to_Double_release_handle_nullable'));
final _heresdkRoutingIsolineBindingsMapofDoubleToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_MapOf_Double_to_Double_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingsMapofDoubleToDoubleToFfiNullable(Map<double, double> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingsMapofDoubleToDoubleToFfi(value);
  final result = _heresdkRoutingIsolineBindingsMapofDoubleToDoubleCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingsMapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<double, double> heresdkRoutingIsolineBindingsMapofDoubleToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return {};
  final _handle = _heresdkRoutingIsolineBindingsMapofDoubleToDoubleGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingsMapofDoubleToDoubleFromFfi(_handle);
  heresdkRoutingIsolineBindingsMapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingsMapofDoubleToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingsMapofDoubleToDoubleReleaseHandleNullable(handle);

final _heresdkRoutingIsolineBindingsMapofIntToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_isoline_bindings_MapOf_Int_to_Double_create_handle'));
final _heresdkRoutingIsolineBindingsMapofIntToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_MapOf_Int_to_Double_release_handle'));
final _heresdkRoutingIsolineBindingsMapofIntToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32, Double),
    void Function(Pointer<Void>, int, double)
  >('here_sdk_heresdk_routing_isoline_bindings_MapOf_Int_to_Double_put'));
final _heresdkRoutingIsolineBindingsMapofIntToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_MapOf_Int_to_Double_iterator'));
final _heresdkRoutingIsolineBindingsMapofIntToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_MapOf_Int_to_Double_iterator_release_handle'));
final _heresdkRoutingIsolineBindingsMapofIntToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_MapOf_Int_to_Double_iterator_is_valid'));
final _heresdkRoutingIsolineBindingsMapofIntToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_MapOf_Int_to_Double_iterator_increment'));
final _heresdkRoutingIsolineBindingsMapofIntToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_MapOf_Int_to_Double_iterator_get_key'));
final _heresdkRoutingIsolineBindingsMapofIntToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_isoline_bindings_MapOf_Int_to_Double_iterator_get_value'));

Pointer<Void> heresdkRoutingIsolineBindingsMapofIntToDoubleToFfi(Map<int, double> value) {
  final _result = _heresdkRoutingIsolineBindingsMapofIntToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _heresdkRoutingIsolineBindingsMapofIntToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<int, double> heresdkRoutingIsolineBindingsMapofIntToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<int, double>();
  final _iteratorHandle = _heresdkRoutingIsolineBindingsMapofIntToDoubleIterator(handle);
  while (_heresdkRoutingIsolineBindingsMapofIntToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkRoutingIsolineBindingsMapofIntToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkRoutingIsolineBindingsMapofIntToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _heresdkRoutingIsolineBindingsMapofIntToDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingIsolineBindingsMapofIntToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingIsolineBindingsMapofIntToDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingIsolineBindingsMapofIntToDoubleReleaseHandle(handle);

final _heresdkRoutingIsolineBindingsMapofIntToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_MapOf_Int_to_Double_create_handle_nullable'));
final _heresdkRoutingIsolineBindingsMapofIntToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_MapOf_Int_to_Double_release_handle_nullable'));
final _heresdkRoutingIsolineBindingsMapofIntToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_isoline_bindings_MapOf_Int_to_Double_get_value_nullable'));

Pointer<Void> heresdkRoutingIsolineBindingsMapofIntToDoubleToFfiNullable(Map<int, double> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingIsolineBindingsMapofIntToDoubleToFfi(value);
  final result = _heresdkRoutingIsolineBindingsMapofIntToDoubleCreateHandleNullable(_handle);
  heresdkRoutingIsolineBindingsMapofIntToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<int, double> heresdkRoutingIsolineBindingsMapofIntToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return {};
  final _handle = _heresdkRoutingIsolineBindingsMapofIntToDoubleGetValueNullable(handle);
  final result = heresdkRoutingIsolineBindingsMapofIntToDoubleFromFfi(_handle);
  heresdkRoutingIsolineBindingsMapofIntToDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingIsolineBindingsMapofIntToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingIsolineBindingsMapofIntToDoubleReleaseHandleNullable(handle);


// Copyright (c) 2018-2021 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//































final _heresdkRoutingTransitBindingsListofIntCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_Int_create_handle'));
final _heresdkRoutingTransitBindingsListofIntReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_Int_release_handle'));
final _heresdkRoutingTransitBindingsListofIntInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_Int_insert'));
final _heresdkRoutingTransitBindingsListofIntIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_Int_iterator'));
final _heresdkRoutingTransitBindingsListofIntIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_Int_iterator_release_handle'));
final _heresdkRoutingTransitBindingsListofIntIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_Int_iterator_is_valid'));
final _heresdkRoutingTransitBindingsListofIntIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_Int_iterator_increment'));
final _heresdkRoutingTransitBindingsListofIntIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_Int_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingsListofIntToFfi(List<int> value) {
  final _result = _heresdkRoutingTransitBindingsListofIntCreateHandle();
  for (final element in value) {
    final _elementHandle = (element);
    _heresdkRoutingTransitBindingsListofIntInsert(_result, _elementHandle);
    
  }
  return _result;
}

List<int> heresdkRoutingTransitBindingsListofIntFromFfi(Pointer<Void> handle) {
  final result = List<int>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingsListofIntIterator(handle);
  while (_heresdkRoutingTransitBindingsListofIntIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingsListofIntIteratorGet(_iteratorHandle);
    try {
      result.add((_elementHandle));
    } finally {
      
    }
    _heresdkRoutingTransitBindingsListofIntIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingsListofIntIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingsListofIntReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingsListofIntReleaseHandle(handle);

final _heresdkRoutingTransitBindingsListofIntCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_Int_create_handle_nullable'));
final _heresdkRoutingTransitBindingsListofIntReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_Int_release_handle_nullable'));
final _heresdkRoutingTransitBindingsListofIntGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_Int_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingsListofIntToFfiNullable(List<int> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingsListofIntToFfi(value);
  final result = _heresdkRoutingTransitBindingsListofIntCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingsListofIntReleaseFfiHandle(_handle);
  return result;
}

List<int> heresdkRoutingTransitBindingsListofIntFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingTransitBindingsListofIntGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingsListofIntFromFfi(_handle);
  heresdkRoutingTransitBindingsListofIntReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingsListofIntReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingsListofIntReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingsListofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_Locale_create_handle'));
final _heresdkRoutingTransitBindingsListofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_Locale_release_handle'));
final _heresdkRoutingTransitBindingsListofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_Locale_insert'));
final _heresdkRoutingTransitBindingsListofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_Locale_iterator'));
final _heresdkRoutingTransitBindingsListofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_Locale_iterator_release_handle'));
final _heresdkRoutingTransitBindingsListofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_Locale_iterator_is_valid'));
final _heresdkRoutingTransitBindingsListofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_Locale_iterator_increment'));
final _heresdkRoutingTransitBindingsListofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_Locale_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingsListofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkRoutingTransitBindingsListofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkRoutingTransitBindingsListofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkRoutingTransitBindingsListofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingsListofLocaleIterator(handle);
  while (_heresdkRoutingTransitBindingsListofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingsListofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingsListofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingsListofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingsListofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingsListofLocaleReleaseHandle(handle);

final _heresdkRoutingTransitBindingsListofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_Locale_create_handle_nullable'));
final _heresdkRoutingTransitBindingsListofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_Locale_release_handle_nullable'));
final _heresdkRoutingTransitBindingsListofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingsListofLocaleToFfiNullable(List<Locale> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingsListofLocaleToFfi(value);
  final result = _heresdkRoutingTransitBindingsListofLocaleCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingsListofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale> heresdkRoutingTransitBindingsListofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingTransitBindingsListofLocaleGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingsListofLocaleFromFfi(_handle);
  heresdkRoutingTransitBindingsListofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingsListofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingsListofLocaleReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingsListofSdkCoreCountrycodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_core_CountryCode_create_handle'));
final _heresdkRoutingTransitBindingsListofSdkCoreCountrycodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_core_CountryCode_release_handle'));
final _heresdkRoutingTransitBindingsListofSdkCoreCountrycodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_core_CountryCode_insert'));
final _heresdkRoutingTransitBindingsListofSdkCoreCountrycodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_core_CountryCode_iterator'));
final _heresdkRoutingTransitBindingsListofSdkCoreCountrycodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_core_CountryCode_iterator_release_handle'));
final _heresdkRoutingTransitBindingsListofSdkCoreCountrycodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_core_CountryCode_iterator_is_valid'));
final _heresdkRoutingTransitBindingsListofSdkCoreCountrycodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_core_CountryCode_iterator_increment'));
final _heresdkRoutingTransitBindingsListofSdkCoreCountrycodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_core_CountryCode_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingsListofSdkCoreCountrycodeToFfi(List<CountryCode> value) {
  final _result = _heresdkRoutingTransitBindingsListofSdkCoreCountrycodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreCountrycodeToFfi(element);
    _heresdkRoutingTransitBindingsListofSdkCoreCountrycodeInsert(_result, _elementHandle);
    sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<CountryCode> heresdkRoutingTransitBindingsListofSdkCoreCountrycodeFromFfi(Pointer<Void> handle) {
  final result = List<CountryCode>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingsListofSdkCoreCountrycodeIterator(handle);
  while (_heresdkRoutingTransitBindingsListofSdkCoreCountrycodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingsListofSdkCoreCountrycodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreCountrycodeFromFfi(_elementHandle));
    } finally {
      sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingsListofSdkCoreCountrycodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingsListofSdkCoreCountrycodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingsListofSdkCoreCountrycodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingsListofSdkCoreCountrycodeReleaseHandle(handle);

final _heresdkRoutingTransitBindingsListofSdkCoreCountrycodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_core_CountryCode_create_handle_nullable'));
final _heresdkRoutingTransitBindingsListofSdkCoreCountrycodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_core_CountryCode_release_handle_nullable'));
final _heresdkRoutingTransitBindingsListofSdkCoreCountrycodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_core_CountryCode_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingsListofSdkCoreCountrycodeToFfiNullable(List<CountryCode> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingsListofSdkCoreCountrycodeToFfi(value);
  final result = _heresdkRoutingTransitBindingsListofSdkCoreCountrycodeCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingsListofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

List<CountryCode> heresdkRoutingTransitBindingsListofSdkCoreCountrycodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingTransitBindingsListofSdkCoreCountrycodeGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingsListofSdkCoreCountrycodeFromFfi(_handle);
  heresdkRoutingTransitBindingsListofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingsListofSdkCoreCountrycodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingsListofSdkCoreCountrycodeReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingsListofSdkCoreGeoboxCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_core_GeoBox_create_handle'));
final _heresdkRoutingTransitBindingsListofSdkCoreGeoboxReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_core_GeoBox_release_handle'));
final _heresdkRoutingTransitBindingsListofSdkCoreGeoboxInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_core_GeoBox_insert'));
final _heresdkRoutingTransitBindingsListofSdkCoreGeoboxIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_core_GeoBox_iterator'));
final _heresdkRoutingTransitBindingsListofSdkCoreGeoboxIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_core_GeoBox_iterator_release_handle'));
final _heresdkRoutingTransitBindingsListofSdkCoreGeoboxIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_core_GeoBox_iterator_is_valid'));
final _heresdkRoutingTransitBindingsListofSdkCoreGeoboxIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_core_GeoBox_iterator_increment'));
final _heresdkRoutingTransitBindingsListofSdkCoreGeoboxIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_core_GeoBox_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingsListofSdkCoreGeoboxToFfi(List<GeoBox> value) {
  final _result = _heresdkRoutingTransitBindingsListofSdkCoreGeoboxCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeoboxToFfi(element);
    _heresdkRoutingTransitBindingsListofSdkCoreGeoboxInsert(_result, _elementHandle);
    sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoBox> heresdkRoutingTransitBindingsListofSdkCoreGeoboxFromFfi(Pointer<Void> handle) {
  final result = List<GeoBox>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingsListofSdkCoreGeoboxIterator(handle);
  while (_heresdkRoutingTransitBindingsListofSdkCoreGeoboxIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingsListofSdkCoreGeoboxIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeoboxFromFfi(_elementHandle));
    } finally {
      sdkCoreGeoboxReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingsListofSdkCoreGeoboxIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingsListofSdkCoreGeoboxIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingsListofSdkCoreGeoboxReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingsListofSdkCoreGeoboxReleaseHandle(handle);

final _heresdkRoutingTransitBindingsListofSdkCoreGeoboxCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_core_GeoBox_create_handle_nullable'));
final _heresdkRoutingTransitBindingsListofSdkCoreGeoboxReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_core_GeoBox_release_handle_nullable'));
final _heresdkRoutingTransitBindingsListofSdkCoreGeoboxGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_core_GeoBox_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingsListofSdkCoreGeoboxToFfiNullable(List<GeoBox> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingsListofSdkCoreGeoboxToFfi(value);
  final result = _heresdkRoutingTransitBindingsListofSdkCoreGeoboxCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingsListofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

List<GeoBox> heresdkRoutingTransitBindingsListofSdkCoreGeoboxFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingTransitBindingsListofSdkCoreGeoboxGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingsListofSdkCoreGeoboxFromFfi(_handle);
  heresdkRoutingTransitBindingsListofSdkCoreGeoboxReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingsListofSdkCoreGeoboxReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingsListofSdkCoreGeoboxReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingsListofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkRoutingTransitBindingsListofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkRoutingTransitBindingsListofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkRoutingTransitBindingsListofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkRoutingTransitBindingsListofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkRoutingTransitBindingsListofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkRoutingTransitBindingsListofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkRoutingTransitBindingsListofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingsListofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkRoutingTransitBindingsListofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkRoutingTransitBindingsListofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkRoutingTransitBindingsListofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingsListofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkRoutingTransitBindingsListofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingsListofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingsListofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingsListofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingsListofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingsListofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkRoutingTransitBindingsListofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkRoutingTransitBindingsListofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkRoutingTransitBindingsListofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingsListofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingsListofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkRoutingTransitBindingsListofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingsListofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates> heresdkRoutingTransitBindingsListofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingTransitBindingsListofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingsListofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkRoutingTransitBindingsListofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingsListofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingsListofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingsListofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkRoutingTransitBindingsListofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkRoutingTransitBindingsListofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_core_LocalizedText_insert'));
final _heresdkRoutingTransitBindingsListofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_core_LocalizedText_iterator'));
final _heresdkRoutingTransitBindingsListofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkRoutingTransitBindingsListofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkRoutingTransitBindingsListofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkRoutingTransitBindingsListofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingsListofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkRoutingTransitBindingsListofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkRoutingTransitBindingsListofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkRoutingTransitBindingsListofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingsListofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkRoutingTransitBindingsListofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingsListofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingsListofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingsListofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingsListofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingsListofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkRoutingTransitBindingsListofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkRoutingTransitBindingsListofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkRoutingTransitBindingsListofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingsListofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingsListofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkRoutingTransitBindingsListofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingsListofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText> heresdkRoutingTransitBindingsListofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingTransitBindingsListofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingsListofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkRoutingTransitBindingsListofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingsListofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingsListofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingsListofSdkRoutingAttributionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Attribution_create_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingAttributionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Attribution_release_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingAttributionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Attribution_insert'));
final _heresdkRoutingTransitBindingsListofSdkRoutingAttributionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Attribution_iterator'));
final _heresdkRoutingTransitBindingsListofSdkRoutingAttributionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Attribution_iterator_release_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingAttributionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Attribution_iterator_is_valid'));
final _heresdkRoutingTransitBindingsListofSdkRoutingAttributionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Attribution_iterator_increment'));
final _heresdkRoutingTransitBindingsListofSdkRoutingAttributionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Attribution_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingsListofSdkRoutingAttributionToFfi(List<Attribution> value) {
  final _result = _heresdkRoutingTransitBindingsListofSdkRoutingAttributionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingAttributionToFfi(element);
    _heresdkRoutingTransitBindingsListofSdkRoutingAttributionInsert(_result, _elementHandle);
    sdkRoutingAttributionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Attribution> heresdkRoutingTransitBindingsListofSdkRoutingAttributionFromFfi(Pointer<Void> handle) {
  final result = List<Attribution>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingsListofSdkRoutingAttributionIterator(handle);
  while (_heresdkRoutingTransitBindingsListofSdkRoutingAttributionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingsListofSdkRoutingAttributionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingAttributionFromFfi(_elementHandle));
    } finally {
      sdkRoutingAttributionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingsListofSdkRoutingAttributionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingsListofSdkRoutingAttributionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingsListofSdkRoutingAttributionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingsListofSdkRoutingAttributionReleaseHandle(handle);

final _heresdkRoutingTransitBindingsListofSdkRoutingAttributionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Attribution_create_handle_nullable'));
final _heresdkRoutingTransitBindingsListofSdkRoutingAttributionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Attribution_release_handle_nullable'));
final _heresdkRoutingTransitBindingsListofSdkRoutingAttributionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Attribution_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingsListofSdkRoutingAttributionToFfiNullable(List<Attribution> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingsListofSdkRoutingAttributionToFfi(value);
  final result = _heresdkRoutingTransitBindingsListofSdkRoutingAttributionCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingsListofSdkRoutingAttributionReleaseFfiHandle(_handle);
  return result;
}

List<Attribution> heresdkRoutingTransitBindingsListofSdkRoutingAttributionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingTransitBindingsListofSdkRoutingAttributionGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingsListofSdkRoutingAttributionFromFfi(_handle);
  heresdkRoutingTransitBindingsListofSdkRoutingAttributionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingsListofSdkRoutingAttributionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingsListofSdkRoutingAttributionReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingsListofSdkRoutingChargingconnectortypeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_ChargingConnectorType_create_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingChargingconnectortypeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_ChargingConnectorType_release_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingChargingconnectortypeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_ChargingConnectorType_insert'));
final _heresdkRoutingTransitBindingsListofSdkRoutingChargingconnectortypeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_ChargingConnectorType_iterator'));
final _heresdkRoutingTransitBindingsListofSdkRoutingChargingconnectortypeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_ChargingConnectorType_iterator_release_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingChargingconnectortypeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_ChargingConnectorType_iterator_is_valid'));
final _heresdkRoutingTransitBindingsListofSdkRoutingChargingconnectortypeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_ChargingConnectorType_iterator_increment'));
final _heresdkRoutingTransitBindingsListofSdkRoutingChargingconnectortypeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_ChargingConnectorType_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingsListofSdkRoutingChargingconnectortypeToFfi(List<ChargingConnectorType> value) {
  final _result = _heresdkRoutingTransitBindingsListofSdkRoutingChargingconnectortypeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingChargingconnectortypeToFfi(element);
    _heresdkRoutingTransitBindingsListofSdkRoutingChargingconnectortypeInsert(_result, _elementHandle);
    sdkRoutingChargingconnectortypeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ChargingConnectorType> heresdkRoutingTransitBindingsListofSdkRoutingChargingconnectortypeFromFfi(Pointer<Void> handle) {
  final result = List<ChargingConnectorType>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingsListofSdkRoutingChargingconnectortypeIterator(handle);
  while (_heresdkRoutingTransitBindingsListofSdkRoutingChargingconnectortypeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingsListofSdkRoutingChargingconnectortypeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingChargingconnectortypeFromFfi(_elementHandle));
    } finally {
      sdkRoutingChargingconnectortypeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingsListofSdkRoutingChargingconnectortypeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingsListofSdkRoutingChargingconnectortypeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingsListofSdkRoutingChargingconnectortypeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingsListofSdkRoutingChargingconnectortypeReleaseHandle(handle);

final _heresdkRoutingTransitBindingsListofSdkRoutingChargingconnectortypeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_ChargingConnectorType_create_handle_nullable'));
final _heresdkRoutingTransitBindingsListofSdkRoutingChargingconnectortypeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_ChargingConnectorType_release_handle_nullable'));
final _heresdkRoutingTransitBindingsListofSdkRoutingChargingconnectortypeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_ChargingConnectorType_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingsListofSdkRoutingChargingconnectortypeToFfiNullable(List<ChargingConnectorType> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingsListofSdkRoutingChargingconnectortypeToFfi(value);
  final result = _heresdkRoutingTransitBindingsListofSdkRoutingChargingconnectortypeCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingsListofSdkRoutingChargingconnectortypeReleaseFfiHandle(_handle);
  return result;
}

List<ChargingConnectorType> heresdkRoutingTransitBindingsListofSdkRoutingChargingconnectortypeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingTransitBindingsListofSdkRoutingChargingconnectortypeGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingsListofSdkRoutingChargingconnectortypeFromFfi(_handle);
  heresdkRoutingTransitBindingsListofSdkRoutingChargingconnectortypeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingsListofSdkRoutingChargingconnectortypeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingsListofSdkRoutingChargingconnectortypeReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingsListofSdkRoutingFareCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Fare_create_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingFareReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Fare_release_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingFareInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Fare_insert'));
final _heresdkRoutingTransitBindingsListofSdkRoutingFareIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Fare_iterator'));
final _heresdkRoutingTransitBindingsListofSdkRoutingFareIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Fare_iterator_release_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingFareIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Fare_iterator_is_valid'));
final _heresdkRoutingTransitBindingsListofSdkRoutingFareIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Fare_iterator_increment'));
final _heresdkRoutingTransitBindingsListofSdkRoutingFareIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Fare_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingsListofSdkRoutingFareToFfi(List<Fare> value) {
  final _result = _heresdkRoutingTransitBindingsListofSdkRoutingFareCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingFareToFfi(element);
    _heresdkRoutingTransitBindingsListofSdkRoutingFareInsert(_result, _elementHandle);
    sdkRoutingFareReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Fare> heresdkRoutingTransitBindingsListofSdkRoutingFareFromFfi(Pointer<Void> handle) {
  final result = List<Fare>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingsListofSdkRoutingFareIterator(handle);
  while (_heresdkRoutingTransitBindingsListofSdkRoutingFareIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingsListofSdkRoutingFareIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingFareFromFfi(_elementHandle));
    } finally {
      sdkRoutingFareReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingsListofSdkRoutingFareIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingsListofSdkRoutingFareIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingsListofSdkRoutingFareReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingsListofSdkRoutingFareReleaseHandle(handle);

final _heresdkRoutingTransitBindingsListofSdkRoutingFareCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Fare_create_handle_nullable'));
final _heresdkRoutingTransitBindingsListofSdkRoutingFareReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Fare_release_handle_nullable'));
final _heresdkRoutingTransitBindingsListofSdkRoutingFareGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Fare_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingsListofSdkRoutingFareToFfiNullable(List<Fare> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingsListofSdkRoutingFareToFfi(value);
  final result = _heresdkRoutingTransitBindingsListofSdkRoutingFareCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingsListofSdkRoutingFareReleaseFfiHandle(_handle);
  return result;
}

List<Fare> heresdkRoutingTransitBindingsListofSdkRoutingFareFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingTransitBindingsListofSdkRoutingFareGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingsListofSdkRoutingFareFromFfi(_handle);
  heresdkRoutingTransitBindingsListofSdkRoutingFareReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingsListofSdkRoutingFareReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingsListofSdkRoutingFareReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingsListofSdkRoutingHazardousgoodCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_HazardousGood_create_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingHazardousgoodReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_HazardousGood_release_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingHazardousgoodInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_HazardousGood_insert'));
final _heresdkRoutingTransitBindingsListofSdkRoutingHazardousgoodIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_HazardousGood_iterator'));
final _heresdkRoutingTransitBindingsListofSdkRoutingHazardousgoodIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_HazardousGood_iterator_release_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingHazardousgoodIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_HazardousGood_iterator_is_valid'));
final _heresdkRoutingTransitBindingsListofSdkRoutingHazardousgoodIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_HazardousGood_iterator_increment'));
final _heresdkRoutingTransitBindingsListofSdkRoutingHazardousgoodIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_HazardousGood_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingsListofSdkRoutingHazardousgoodToFfi(List<HazardousGood> value) {
  final _result = _heresdkRoutingTransitBindingsListofSdkRoutingHazardousgoodCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingHazardousgoodToFfi(element);
    _heresdkRoutingTransitBindingsListofSdkRoutingHazardousgoodInsert(_result, _elementHandle);
    sdkRoutingHazardousgoodReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<HazardousGood> heresdkRoutingTransitBindingsListofSdkRoutingHazardousgoodFromFfi(Pointer<Void> handle) {
  final result = List<HazardousGood>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingsListofSdkRoutingHazardousgoodIterator(handle);
  while (_heresdkRoutingTransitBindingsListofSdkRoutingHazardousgoodIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingsListofSdkRoutingHazardousgoodIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingHazardousgoodFromFfi(_elementHandle));
    } finally {
      sdkRoutingHazardousgoodReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingsListofSdkRoutingHazardousgoodIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingsListofSdkRoutingHazardousgoodIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingsListofSdkRoutingHazardousgoodReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingsListofSdkRoutingHazardousgoodReleaseHandle(handle);

final _heresdkRoutingTransitBindingsListofSdkRoutingHazardousgoodCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_HazardousGood_create_handle_nullable'));
final _heresdkRoutingTransitBindingsListofSdkRoutingHazardousgoodReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_HazardousGood_release_handle_nullable'));
final _heresdkRoutingTransitBindingsListofSdkRoutingHazardousgoodGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_HazardousGood_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingsListofSdkRoutingHazardousgoodToFfiNullable(List<HazardousGood> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingsListofSdkRoutingHazardousgoodToFfi(value);
  final result = _heresdkRoutingTransitBindingsListofSdkRoutingHazardousgoodCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingsListofSdkRoutingHazardousgoodReleaseFfiHandle(_handle);
  return result;
}

List<HazardousGood> heresdkRoutingTransitBindingsListofSdkRoutingHazardousgoodFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingTransitBindingsListofSdkRoutingHazardousgoodGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingsListofSdkRoutingHazardousgoodFromFfi(_handle);
  heresdkRoutingTransitBindingsListofSdkRoutingHazardousgoodReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingsListofSdkRoutingHazardousgoodReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingsListofSdkRoutingHazardousgoodReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingsListofSdkRoutingManeuverCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Maneuver_create_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingManeuverReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Maneuver_release_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingManeuverInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Maneuver_insert'));
final _heresdkRoutingTransitBindingsListofSdkRoutingManeuverIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Maneuver_iterator'));
final _heresdkRoutingTransitBindingsListofSdkRoutingManeuverIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Maneuver_iterator_release_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingManeuverIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Maneuver_iterator_is_valid'));
final _heresdkRoutingTransitBindingsListofSdkRoutingManeuverIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Maneuver_iterator_increment'));
final _heresdkRoutingTransitBindingsListofSdkRoutingManeuverIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Maneuver_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingsListofSdkRoutingManeuverToFfi(List<Maneuver> value) {
  final _result = _heresdkRoutingTransitBindingsListofSdkRoutingManeuverCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingManeuverToFfi(element);
    _heresdkRoutingTransitBindingsListofSdkRoutingManeuverInsert(_result, _elementHandle);
    sdkRoutingManeuverReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Maneuver> heresdkRoutingTransitBindingsListofSdkRoutingManeuverFromFfi(Pointer<Void> handle) {
  final result = List<Maneuver>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingsListofSdkRoutingManeuverIterator(handle);
  while (_heresdkRoutingTransitBindingsListofSdkRoutingManeuverIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingsListofSdkRoutingManeuverIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingManeuverFromFfi(_elementHandle));
    } finally {
      sdkRoutingManeuverReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingsListofSdkRoutingManeuverIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingsListofSdkRoutingManeuverIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingsListofSdkRoutingManeuverReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingsListofSdkRoutingManeuverReleaseHandle(handle);

final _heresdkRoutingTransitBindingsListofSdkRoutingManeuverCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Maneuver_create_handle_nullable'));
final _heresdkRoutingTransitBindingsListofSdkRoutingManeuverReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Maneuver_release_handle_nullable'));
final _heresdkRoutingTransitBindingsListofSdkRoutingManeuverGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Maneuver_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingsListofSdkRoutingManeuverToFfiNullable(List<Maneuver> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingsListofSdkRoutingManeuverToFfi(value);
  final result = _heresdkRoutingTransitBindingsListofSdkRoutingManeuverCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingsListofSdkRoutingManeuverReleaseFfiHandle(_handle);
  return result;
}

List<Maneuver> heresdkRoutingTransitBindingsListofSdkRoutingManeuverFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingTransitBindingsListofSdkRoutingManeuverGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingsListofSdkRoutingManeuverFromFfi(_handle);
  heresdkRoutingTransitBindingsListofSdkRoutingManeuverReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingsListofSdkRoutingManeuverReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingsListofSdkRoutingManeuverReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingsListofSdkRoutingNoticeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Notice_create_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingNoticeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Notice_release_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingNoticeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Notice_insert'));
final _heresdkRoutingTransitBindingsListofSdkRoutingNoticeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Notice_iterator'));
final _heresdkRoutingTransitBindingsListofSdkRoutingNoticeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Notice_iterator_release_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingNoticeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Notice_iterator_is_valid'));
final _heresdkRoutingTransitBindingsListofSdkRoutingNoticeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Notice_iterator_increment'));
final _heresdkRoutingTransitBindingsListofSdkRoutingNoticeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Notice_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingsListofSdkRoutingNoticeToFfi(List<Notice> value) {
  final _result = _heresdkRoutingTransitBindingsListofSdkRoutingNoticeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingNoticeToFfi(element);
    _heresdkRoutingTransitBindingsListofSdkRoutingNoticeInsert(_result, _elementHandle);
    sdkRoutingNoticeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Notice> heresdkRoutingTransitBindingsListofSdkRoutingNoticeFromFfi(Pointer<Void> handle) {
  final result = List<Notice>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingsListofSdkRoutingNoticeIterator(handle);
  while (_heresdkRoutingTransitBindingsListofSdkRoutingNoticeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingsListofSdkRoutingNoticeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingNoticeFromFfi(_elementHandle));
    } finally {
      sdkRoutingNoticeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingsListofSdkRoutingNoticeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingsListofSdkRoutingNoticeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingsListofSdkRoutingNoticeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingsListofSdkRoutingNoticeReleaseHandle(handle);

final _heresdkRoutingTransitBindingsListofSdkRoutingNoticeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Notice_create_handle_nullable'));
final _heresdkRoutingTransitBindingsListofSdkRoutingNoticeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Notice_release_handle_nullable'));
final _heresdkRoutingTransitBindingsListofSdkRoutingNoticeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Notice_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingsListofSdkRoutingNoticeToFfiNullable(List<Notice> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingsListofSdkRoutingNoticeToFfi(value);
  final result = _heresdkRoutingTransitBindingsListofSdkRoutingNoticeCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingsListofSdkRoutingNoticeReleaseFfiHandle(_handle);
  return result;
}

List<Notice> heresdkRoutingTransitBindingsListofSdkRoutingNoticeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingTransitBindingsListofSdkRoutingNoticeGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingsListofSdkRoutingNoticeFromFfi(_handle);
  heresdkRoutingTransitBindingsListofSdkRoutingNoticeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingsListofSdkRoutingNoticeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingsListofSdkRoutingNoticeReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingsListofSdkRoutingPostactionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_PostAction_create_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingPostactionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_PostAction_release_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingPostactionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_PostAction_insert'));
final _heresdkRoutingTransitBindingsListofSdkRoutingPostactionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_PostAction_iterator'));
final _heresdkRoutingTransitBindingsListofSdkRoutingPostactionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_PostAction_iterator_release_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingPostactionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_PostAction_iterator_is_valid'));
final _heresdkRoutingTransitBindingsListofSdkRoutingPostactionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_PostAction_iterator_increment'));
final _heresdkRoutingTransitBindingsListofSdkRoutingPostactionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_PostAction_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingsListofSdkRoutingPostactionToFfi(List<PostAction> value) {
  final _result = _heresdkRoutingTransitBindingsListofSdkRoutingPostactionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPostactionToFfi(element);
    _heresdkRoutingTransitBindingsListofSdkRoutingPostactionInsert(_result, _elementHandle);
    sdkRoutingPostactionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PostAction> heresdkRoutingTransitBindingsListofSdkRoutingPostactionFromFfi(Pointer<Void> handle) {
  final result = List<PostAction>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingsListofSdkRoutingPostactionIterator(handle);
  while (_heresdkRoutingTransitBindingsListofSdkRoutingPostactionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingsListofSdkRoutingPostactionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPostactionFromFfi(_elementHandle));
    } finally {
      sdkRoutingPostactionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingsListofSdkRoutingPostactionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingsListofSdkRoutingPostactionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingsListofSdkRoutingPostactionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingsListofSdkRoutingPostactionReleaseHandle(handle);

final _heresdkRoutingTransitBindingsListofSdkRoutingPostactionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_PostAction_create_handle_nullable'));
final _heresdkRoutingTransitBindingsListofSdkRoutingPostactionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_PostAction_release_handle_nullable'));
final _heresdkRoutingTransitBindingsListofSdkRoutingPostactionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_PostAction_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingsListofSdkRoutingPostactionToFfiNullable(List<PostAction> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingsListofSdkRoutingPostactionToFfi(value);
  final result = _heresdkRoutingTransitBindingsListofSdkRoutingPostactionCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingsListofSdkRoutingPostactionReleaseFfiHandle(_handle);
  return result;
}

List<PostAction> heresdkRoutingTransitBindingsListofSdkRoutingPostactionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingTransitBindingsListofSdkRoutingPostactionGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingsListofSdkRoutingPostactionFromFfi(_handle);
  heresdkRoutingTransitBindingsListofSdkRoutingPostactionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingsListofSdkRoutingPostactionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingsListofSdkRoutingPostactionReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingsListofSdkRoutingPreactionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_PreAction_create_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingPreactionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_PreAction_release_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingPreactionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_PreAction_insert'));
final _heresdkRoutingTransitBindingsListofSdkRoutingPreactionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_PreAction_iterator'));
final _heresdkRoutingTransitBindingsListofSdkRoutingPreactionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_PreAction_iterator_release_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingPreactionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_PreAction_iterator_is_valid'));
final _heresdkRoutingTransitBindingsListofSdkRoutingPreactionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_PreAction_iterator_increment'));
final _heresdkRoutingTransitBindingsListofSdkRoutingPreactionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_PreAction_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingsListofSdkRoutingPreactionToFfi(List<PreAction> value) {
  final _result = _heresdkRoutingTransitBindingsListofSdkRoutingPreactionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingPreactionToFfi(element);
    _heresdkRoutingTransitBindingsListofSdkRoutingPreactionInsert(_result, _elementHandle);
    sdkRoutingPreactionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PreAction> heresdkRoutingTransitBindingsListofSdkRoutingPreactionFromFfi(Pointer<Void> handle) {
  final result = List<PreAction>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingsListofSdkRoutingPreactionIterator(handle);
  while (_heresdkRoutingTransitBindingsListofSdkRoutingPreactionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingsListofSdkRoutingPreactionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingPreactionFromFfi(_elementHandle));
    } finally {
      sdkRoutingPreactionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingsListofSdkRoutingPreactionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingsListofSdkRoutingPreactionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingsListofSdkRoutingPreactionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingsListofSdkRoutingPreactionReleaseHandle(handle);

final _heresdkRoutingTransitBindingsListofSdkRoutingPreactionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_PreAction_create_handle_nullable'));
final _heresdkRoutingTransitBindingsListofSdkRoutingPreactionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_PreAction_release_handle_nullable'));
final _heresdkRoutingTransitBindingsListofSdkRoutingPreactionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_PreAction_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingsListofSdkRoutingPreactionToFfiNullable(List<PreAction> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingsListofSdkRoutingPreactionToFfi(value);
  final result = _heresdkRoutingTransitBindingsListofSdkRoutingPreactionCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingsListofSdkRoutingPreactionReleaseFfiHandle(_handle);
  return result;
}

List<PreAction> heresdkRoutingTransitBindingsListofSdkRoutingPreactionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingTransitBindingsListofSdkRoutingPreactionGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingsListofSdkRoutingPreactionFromFfi(_handle);
  heresdkRoutingTransitBindingsListofSdkRoutingPreactionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingsListofSdkRoutingPreactionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingsListofSdkRoutingPreactionReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingsListofSdkRoutingRoadfeaturesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_RoadFeatures_create_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingRoadfeaturesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_RoadFeatures_release_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingRoadfeaturesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_RoadFeatures_insert'));
final _heresdkRoutingTransitBindingsListofSdkRoutingRoadfeaturesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_RoadFeatures_iterator'));
final _heresdkRoutingTransitBindingsListofSdkRoutingRoadfeaturesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_RoadFeatures_iterator_release_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingRoadfeaturesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_RoadFeatures_iterator_is_valid'));
final _heresdkRoutingTransitBindingsListofSdkRoutingRoadfeaturesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_RoadFeatures_iterator_increment'));
final _heresdkRoutingTransitBindingsListofSdkRoutingRoadfeaturesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_RoadFeatures_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingsListofSdkRoutingRoadfeaturesToFfi(List<RoadFeatures> value) {
  final _result = _heresdkRoutingTransitBindingsListofSdkRoutingRoadfeaturesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRoadfeaturesToFfi(element);
    _heresdkRoutingTransitBindingsListofSdkRoutingRoadfeaturesInsert(_result, _elementHandle);
    sdkRoutingRoadfeaturesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<RoadFeatures> heresdkRoutingTransitBindingsListofSdkRoutingRoadfeaturesFromFfi(Pointer<Void> handle) {
  final result = List<RoadFeatures>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingsListofSdkRoutingRoadfeaturesIterator(handle);
  while (_heresdkRoutingTransitBindingsListofSdkRoutingRoadfeaturesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingsListofSdkRoutingRoadfeaturesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRoadfeaturesFromFfi(_elementHandle));
    } finally {
      sdkRoutingRoadfeaturesReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingsListofSdkRoutingRoadfeaturesIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingsListofSdkRoutingRoadfeaturesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingsListofSdkRoutingRoadfeaturesReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingsListofSdkRoutingRoadfeaturesReleaseHandle(handle);

final _heresdkRoutingTransitBindingsListofSdkRoutingRoadfeaturesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_RoadFeatures_create_handle_nullable'));
final _heresdkRoutingTransitBindingsListofSdkRoutingRoadfeaturesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_RoadFeatures_release_handle_nullable'));
final _heresdkRoutingTransitBindingsListofSdkRoutingRoadfeaturesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_RoadFeatures_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingsListofSdkRoutingRoadfeaturesToFfiNullable(List<RoadFeatures> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingsListofSdkRoutingRoadfeaturesToFfi(value);
  final result = _heresdkRoutingTransitBindingsListofSdkRoutingRoadfeaturesCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingsListofSdkRoutingRoadfeaturesReleaseFfiHandle(_handle);
  return result;
}

List<RoadFeatures> heresdkRoutingTransitBindingsListofSdkRoutingRoadfeaturesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingTransitBindingsListofSdkRoutingRoadfeaturesGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingsListofSdkRoutingRoadfeaturesFromFfi(_handle);
  heresdkRoutingTransitBindingsListofSdkRoutingRoadfeaturesReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingsListofSdkRoutingRoadfeaturesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingsListofSdkRoutingRoadfeaturesReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingsListofSdkRoutingRouteCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Route_create_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingRouteReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Route_release_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingRouteInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Route_insert'));
final _heresdkRoutingTransitBindingsListofSdkRoutingRouteIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Route_iterator'));
final _heresdkRoutingTransitBindingsListofSdkRoutingRouteIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Route_iterator_release_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingRouteIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Route_iterator_is_valid'));
final _heresdkRoutingTransitBindingsListofSdkRoutingRouteIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Route_iterator_increment'));
final _heresdkRoutingTransitBindingsListofSdkRoutingRouteIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Route_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingsListofSdkRoutingRouteToFfi(List<Route> value) {
  final _result = _heresdkRoutingTransitBindingsListofSdkRoutingRouteCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingRouteToFfi(element);
    _heresdkRoutingTransitBindingsListofSdkRoutingRouteInsert(_result, _elementHandle);
    sdkRoutingRouteReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Route> heresdkRoutingTransitBindingsListofSdkRoutingRouteFromFfi(Pointer<Void> handle) {
  final result = List<Route>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingsListofSdkRoutingRouteIterator(handle);
  while (_heresdkRoutingTransitBindingsListofSdkRoutingRouteIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingsListofSdkRoutingRouteIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingRouteFromFfi(_elementHandle));
    } finally {
      sdkRoutingRouteReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingsListofSdkRoutingRouteIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingsListofSdkRoutingRouteIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingsListofSdkRoutingRouteReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingsListofSdkRoutingRouteReleaseHandle(handle);

final _heresdkRoutingTransitBindingsListofSdkRoutingRouteCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Route_create_handle_nullable'));
final _heresdkRoutingTransitBindingsListofSdkRoutingRouteReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Route_release_handle_nullable'));
final _heresdkRoutingTransitBindingsListofSdkRoutingRouteGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Route_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingsListofSdkRoutingRouteToFfiNullable(List<Route> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingsListofSdkRoutingRouteToFfi(value);
  final result = _heresdkRoutingTransitBindingsListofSdkRoutingRouteCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingsListofSdkRoutingRouteReleaseFfiHandle(_handle);
  return result;
}

List<Route> heresdkRoutingTransitBindingsListofSdkRoutingRouteFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingTransitBindingsListofSdkRoutingRouteGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingsListofSdkRoutingRouteFromFfi(_handle);
  heresdkRoutingTransitBindingsListofSdkRoutingRouteReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingsListofSdkRoutingRouteReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingsListofSdkRoutingRouteReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingsListofSdkRoutingSectionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Section_create_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingSectionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Section_release_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingSectionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Section_insert'));
final _heresdkRoutingTransitBindingsListofSdkRoutingSectionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Section_iterator'));
final _heresdkRoutingTransitBindingsListofSdkRoutingSectionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Section_iterator_release_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingSectionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Section_iterator_is_valid'));
final _heresdkRoutingTransitBindingsListofSdkRoutingSectionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Section_iterator_increment'));
final _heresdkRoutingTransitBindingsListofSdkRoutingSectionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Section_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingsListofSdkRoutingSectionToFfi(List<Section> value) {
  final _result = _heresdkRoutingTransitBindingsListofSdkRoutingSectionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSectionToFfi(element);
    _heresdkRoutingTransitBindingsListofSdkRoutingSectionInsert(_result, _elementHandle);
    sdkRoutingSectionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Section> heresdkRoutingTransitBindingsListofSdkRoutingSectionFromFfi(Pointer<Void> handle) {
  final result = List<Section>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingsListofSdkRoutingSectionIterator(handle);
  while (_heresdkRoutingTransitBindingsListofSdkRoutingSectionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingsListofSdkRoutingSectionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSectionFromFfi(_elementHandle));
    } finally {
      sdkRoutingSectionReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingsListofSdkRoutingSectionIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingsListofSdkRoutingSectionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingsListofSdkRoutingSectionReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingsListofSdkRoutingSectionReleaseHandle(handle);

final _heresdkRoutingTransitBindingsListofSdkRoutingSectionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Section_create_handle_nullable'));
final _heresdkRoutingTransitBindingsListofSdkRoutingSectionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Section_release_handle_nullable'));
final _heresdkRoutingTransitBindingsListofSdkRoutingSectionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Section_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingsListofSdkRoutingSectionToFfiNullable(List<Section> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingsListofSdkRoutingSectionToFfi(value);
  final result = _heresdkRoutingTransitBindingsListofSdkRoutingSectionCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingsListofSdkRoutingSectionReleaseFfiHandle(_handle);
  return result;
}

List<Section> heresdkRoutingTransitBindingsListofSdkRoutingSectionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingTransitBindingsListofSdkRoutingSectionGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingsListofSdkRoutingSectionFromFfi(_handle);
  heresdkRoutingTransitBindingsListofSdkRoutingSectionReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingsListofSdkRoutingSectionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingsListofSdkRoutingSectionReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingsListofSdkRoutingSectionnoticeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_SectionNotice_create_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingSectionnoticeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_SectionNotice_release_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingSectionnoticeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_SectionNotice_insert'));
final _heresdkRoutingTransitBindingsListofSdkRoutingSectionnoticeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_SectionNotice_iterator'));
final _heresdkRoutingTransitBindingsListofSdkRoutingSectionnoticeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_SectionNotice_iterator_release_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingSectionnoticeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_SectionNotice_iterator_is_valid'));
final _heresdkRoutingTransitBindingsListofSdkRoutingSectionnoticeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_SectionNotice_iterator_increment'));
final _heresdkRoutingTransitBindingsListofSdkRoutingSectionnoticeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_SectionNotice_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingsListofSdkRoutingSectionnoticeToFfi(List<SectionNotice> value) {
  final _result = _heresdkRoutingTransitBindingsListofSdkRoutingSectionnoticeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSectionnoticeToFfi(element);
    _heresdkRoutingTransitBindingsListofSdkRoutingSectionnoticeInsert(_result, _elementHandle);
    sdkRoutingSectionnoticeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SectionNotice> heresdkRoutingTransitBindingsListofSdkRoutingSectionnoticeFromFfi(Pointer<Void> handle) {
  final result = List<SectionNotice>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingsListofSdkRoutingSectionnoticeIterator(handle);
  while (_heresdkRoutingTransitBindingsListofSdkRoutingSectionnoticeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingsListofSdkRoutingSectionnoticeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSectionnoticeFromFfi(_elementHandle));
    } finally {
      sdkRoutingSectionnoticeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingsListofSdkRoutingSectionnoticeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingsListofSdkRoutingSectionnoticeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingsListofSdkRoutingSectionnoticeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingsListofSdkRoutingSectionnoticeReleaseHandle(handle);

final _heresdkRoutingTransitBindingsListofSdkRoutingSectionnoticeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_SectionNotice_create_handle_nullable'));
final _heresdkRoutingTransitBindingsListofSdkRoutingSectionnoticeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_SectionNotice_release_handle_nullable'));
final _heresdkRoutingTransitBindingsListofSdkRoutingSectionnoticeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_SectionNotice_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingsListofSdkRoutingSectionnoticeToFfiNullable(List<SectionNotice> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingsListofSdkRoutingSectionnoticeToFfi(value);
  final result = _heresdkRoutingTransitBindingsListofSdkRoutingSectionnoticeCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingsListofSdkRoutingSectionnoticeReleaseFfiHandle(_handle);
  return result;
}

List<SectionNotice> heresdkRoutingTransitBindingsListofSdkRoutingSectionnoticeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingTransitBindingsListofSdkRoutingSectionnoticeGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingsListofSdkRoutingSectionnoticeFromFfi(_handle);
  heresdkRoutingTransitBindingsListofSdkRoutingSectionnoticeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingsListofSdkRoutingSectionnoticeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingsListofSdkRoutingSectionnoticeReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingsListofSdkRoutingSpanCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Span_create_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingSpanReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Span_release_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingSpanInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Span_insert'));
final _heresdkRoutingTransitBindingsListofSdkRoutingSpanIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Span_iterator'));
final _heresdkRoutingTransitBindingsListofSdkRoutingSpanIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Span_iterator_release_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingSpanIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Span_iterator_is_valid'));
final _heresdkRoutingTransitBindingsListofSdkRoutingSpanIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Span_iterator_increment'));
final _heresdkRoutingTransitBindingsListofSdkRoutingSpanIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Span_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingsListofSdkRoutingSpanToFfi(List<Span> value) {
  final _result = _heresdkRoutingTransitBindingsListofSdkRoutingSpanCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingSpanToFfi(element);
    _heresdkRoutingTransitBindingsListofSdkRoutingSpanInsert(_result, _elementHandle);
    sdkRoutingSpanReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Span> heresdkRoutingTransitBindingsListofSdkRoutingSpanFromFfi(Pointer<Void> handle) {
  final result = List<Span>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingsListofSdkRoutingSpanIterator(handle);
  while (_heresdkRoutingTransitBindingsListofSdkRoutingSpanIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingsListofSdkRoutingSpanIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingSpanFromFfi(_elementHandle));
    } finally {
      sdkRoutingSpanReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingsListofSdkRoutingSpanIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingsListofSdkRoutingSpanIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingsListofSdkRoutingSpanReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingsListofSdkRoutingSpanReleaseHandle(handle);

final _heresdkRoutingTransitBindingsListofSdkRoutingSpanCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Span_create_handle_nullable'));
final _heresdkRoutingTransitBindingsListofSdkRoutingSpanReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Span_release_handle_nullable'));
final _heresdkRoutingTransitBindingsListofSdkRoutingSpanGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Span_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingsListofSdkRoutingSpanToFfiNullable(List<Span> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingsListofSdkRoutingSpanToFfi(value);
  final result = _heresdkRoutingTransitBindingsListofSdkRoutingSpanCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingsListofSdkRoutingSpanReleaseFfiHandle(_handle);
  return result;
}

List<Span> heresdkRoutingTransitBindingsListofSdkRoutingSpanFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingTransitBindingsListofSdkRoutingSpanGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingsListofSdkRoutingSpanFromFfi(_handle);
  heresdkRoutingTransitBindingsListofSdkRoutingSpanReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingsListofSdkRoutingSpanReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingsListofSdkRoutingSpanReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingsListofSdkRoutingTrafficspeedCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_TrafficSpeed_create_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingTrafficspeedReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_TrafficSpeed_release_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingTrafficspeedInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_TrafficSpeed_insert'));
final _heresdkRoutingTransitBindingsListofSdkRoutingTrafficspeedIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_TrafficSpeed_iterator'));
final _heresdkRoutingTransitBindingsListofSdkRoutingTrafficspeedIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_TrafficSpeed_iterator_release_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingTrafficspeedIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_TrafficSpeed_iterator_is_valid'));
final _heresdkRoutingTransitBindingsListofSdkRoutingTrafficspeedIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_TrafficSpeed_iterator_increment'));
final _heresdkRoutingTransitBindingsListofSdkRoutingTrafficspeedIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_TrafficSpeed_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingsListofSdkRoutingTrafficspeedToFfi(List<TrafficSpeed> value) {
  final _result = _heresdkRoutingTransitBindingsListofSdkRoutingTrafficspeedCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTrafficspeedToFfi(element);
    _heresdkRoutingTransitBindingsListofSdkRoutingTrafficspeedInsert(_result, _elementHandle);
    sdkRoutingTrafficspeedReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TrafficSpeed> heresdkRoutingTransitBindingsListofSdkRoutingTrafficspeedFromFfi(Pointer<Void> handle) {
  final result = List<TrafficSpeed>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingsListofSdkRoutingTrafficspeedIterator(handle);
  while (_heresdkRoutingTransitBindingsListofSdkRoutingTrafficspeedIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingsListofSdkRoutingTrafficspeedIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTrafficspeedFromFfi(_elementHandle));
    } finally {
      sdkRoutingTrafficspeedReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingsListofSdkRoutingTrafficspeedIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingsListofSdkRoutingTrafficspeedIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingsListofSdkRoutingTrafficspeedReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingsListofSdkRoutingTrafficspeedReleaseHandle(handle);

final _heresdkRoutingTransitBindingsListofSdkRoutingTrafficspeedCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_TrafficSpeed_create_handle_nullable'));
final _heresdkRoutingTransitBindingsListofSdkRoutingTrafficspeedReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_TrafficSpeed_release_handle_nullable'));
final _heresdkRoutingTransitBindingsListofSdkRoutingTrafficspeedGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_TrafficSpeed_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingsListofSdkRoutingTrafficspeedToFfiNullable(List<TrafficSpeed> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingsListofSdkRoutingTrafficspeedToFfi(value);
  final result = _heresdkRoutingTransitBindingsListofSdkRoutingTrafficspeedCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingsListofSdkRoutingTrafficspeedReleaseFfiHandle(_handle);
  return result;
}

List<TrafficSpeed> heresdkRoutingTransitBindingsListofSdkRoutingTrafficspeedFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingTransitBindingsListofSdkRoutingTrafficspeedGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingsListofSdkRoutingTrafficspeedFromFfi(_handle);
  heresdkRoutingTransitBindingsListofSdkRoutingTrafficspeedReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingsListofSdkRoutingTrafficspeedReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingsListofSdkRoutingTrafficspeedReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingsListofSdkRoutingTransitincidentCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_TransitIncident_create_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingTransitincidentReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_TransitIncident_release_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingTransitincidentInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_TransitIncident_insert'));
final _heresdkRoutingTransitBindingsListofSdkRoutingTransitincidentIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_TransitIncident_iterator'));
final _heresdkRoutingTransitBindingsListofSdkRoutingTransitincidentIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_TransitIncident_iterator_release_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingTransitincidentIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_TransitIncident_iterator_is_valid'));
final _heresdkRoutingTransitBindingsListofSdkRoutingTransitincidentIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_TransitIncident_iterator_increment'));
final _heresdkRoutingTransitBindingsListofSdkRoutingTransitincidentIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_TransitIncident_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingsListofSdkRoutingTransitincidentToFfi(List<TransitIncident> value) {
  final _result = _heresdkRoutingTransitBindingsListofSdkRoutingTransitincidentCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitincidentToFfi(element);
    _heresdkRoutingTransitBindingsListofSdkRoutingTransitincidentInsert(_result, _elementHandle);
    sdkRoutingTransitincidentReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitIncident> heresdkRoutingTransitBindingsListofSdkRoutingTransitincidentFromFfi(Pointer<Void> handle) {
  final result = List<TransitIncident>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingsListofSdkRoutingTransitincidentIterator(handle);
  while (_heresdkRoutingTransitBindingsListofSdkRoutingTransitincidentIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingsListofSdkRoutingTransitincidentIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitincidentFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitincidentReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingsListofSdkRoutingTransitincidentIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingsListofSdkRoutingTransitincidentIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingsListofSdkRoutingTransitincidentReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingsListofSdkRoutingTransitincidentReleaseHandle(handle);

final _heresdkRoutingTransitBindingsListofSdkRoutingTransitincidentCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_TransitIncident_create_handle_nullable'));
final _heresdkRoutingTransitBindingsListofSdkRoutingTransitincidentReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_TransitIncident_release_handle_nullable'));
final _heresdkRoutingTransitBindingsListofSdkRoutingTransitincidentGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_TransitIncident_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingsListofSdkRoutingTransitincidentToFfiNullable(List<TransitIncident> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingsListofSdkRoutingTransitincidentToFfi(value);
  final result = _heresdkRoutingTransitBindingsListofSdkRoutingTransitincidentCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingsListofSdkRoutingTransitincidentReleaseFfiHandle(_handle);
  return result;
}

List<TransitIncident> heresdkRoutingTransitBindingsListofSdkRoutingTransitincidentFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingTransitBindingsListofSdkRoutingTransitincidentGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingsListofSdkRoutingTransitincidentFromFfi(_handle);
  heresdkRoutingTransitBindingsListofSdkRoutingTransitincidentReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingsListofSdkRoutingTransitincidentReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingsListofSdkRoutingTransitincidentReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingsListofSdkRoutingTransitmodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_TransitMode_create_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingTransitmodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_TransitMode_release_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingTransitmodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_TransitMode_insert'));
final _heresdkRoutingTransitBindingsListofSdkRoutingTransitmodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_TransitMode_iterator'));
final _heresdkRoutingTransitBindingsListofSdkRoutingTransitmodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_TransitMode_iterator_release_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingTransitmodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_TransitMode_iterator_is_valid'));
final _heresdkRoutingTransitBindingsListofSdkRoutingTransitmodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_TransitMode_iterator_increment'));
final _heresdkRoutingTransitBindingsListofSdkRoutingTransitmodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_TransitMode_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingsListofSdkRoutingTransitmodeToFfi(List<TransitMode> value) {
  final _result = _heresdkRoutingTransitBindingsListofSdkRoutingTransitmodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitmodeToFfi(element);
    _heresdkRoutingTransitBindingsListofSdkRoutingTransitmodeInsert(_result, _elementHandle);
    sdkRoutingTransitmodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitMode> heresdkRoutingTransitBindingsListofSdkRoutingTransitmodeFromFfi(Pointer<Void> handle) {
  final result = List<TransitMode>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingsListofSdkRoutingTransitmodeIterator(handle);
  while (_heresdkRoutingTransitBindingsListofSdkRoutingTransitmodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingsListofSdkRoutingTransitmodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitmodeFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitmodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingsListofSdkRoutingTransitmodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingsListofSdkRoutingTransitmodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingsListofSdkRoutingTransitmodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingsListofSdkRoutingTransitmodeReleaseHandle(handle);

final _heresdkRoutingTransitBindingsListofSdkRoutingTransitmodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_TransitMode_create_handle_nullable'));
final _heresdkRoutingTransitBindingsListofSdkRoutingTransitmodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_TransitMode_release_handle_nullable'));
final _heresdkRoutingTransitBindingsListofSdkRoutingTransitmodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_TransitMode_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingsListofSdkRoutingTransitmodeToFfiNullable(List<TransitMode> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingsListofSdkRoutingTransitmodeToFfi(value);
  final result = _heresdkRoutingTransitBindingsListofSdkRoutingTransitmodeCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingsListofSdkRoutingTransitmodeReleaseFfiHandle(_handle);
  return result;
}

List<TransitMode> heresdkRoutingTransitBindingsListofSdkRoutingTransitmodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingTransitBindingsListofSdkRoutingTransitmodeGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingsListofSdkRoutingTransitmodeFromFfi(_handle);
  heresdkRoutingTransitBindingsListofSdkRoutingTransitmodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingsListofSdkRoutingTransitmodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingsListofSdkRoutingTransitmodeReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingsListofSdkRoutingTransitstopCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_TransitStop_create_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingTransitstopReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_TransitStop_release_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingTransitstopInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_TransitStop_insert'));
final _heresdkRoutingTransitBindingsListofSdkRoutingTransitstopIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_TransitStop_iterator'));
final _heresdkRoutingTransitBindingsListofSdkRoutingTransitstopIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_TransitStop_iterator_release_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingTransitstopIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_TransitStop_iterator_is_valid'));
final _heresdkRoutingTransitBindingsListofSdkRoutingTransitstopIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_TransitStop_iterator_increment'));
final _heresdkRoutingTransitBindingsListofSdkRoutingTransitstopIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_TransitStop_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingsListofSdkRoutingTransitstopToFfi(List<TransitStop> value) {
  final _result = _heresdkRoutingTransitBindingsListofSdkRoutingTransitstopCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingTransitstopToFfi(element);
    _heresdkRoutingTransitBindingsListofSdkRoutingTransitstopInsert(_result, _elementHandle);
    sdkRoutingTransitstopReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<TransitStop> heresdkRoutingTransitBindingsListofSdkRoutingTransitstopFromFfi(Pointer<Void> handle) {
  final result = List<TransitStop>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingsListofSdkRoutingTransitstopIterator(handle);
  while (_heresdkRoutingTransitBindingsListofSdkRoutingTransitstopIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingsListofSdkRoutingTransitstopIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingTransitstopFromFfi(_elementHandle));
    } finally {
      sdkRoutingTransitstopReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingsListofSdkRoutingTransitstopIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingsListofSdkRoutingTransitstopIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingsListofSdkRoutingTransitstopReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingsListofSdkRoutingTransitstopReleaseHandle(handle);

final _heresdkRoutingTransitBindingsListofSdkRoutingTransitstopCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_TransitStop_create_handle_nullable'));
final _heresdkRoutingTransitBindingsListofSdkRoutingTransitstopReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_TransitStop_release_handle_nullable'));
final _heresdkRoutingTransitBindingsListofSdkRoutingTransitstopGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_TransitStop_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingsListofSdkRoutingTransitstopToFfiNullable(List<TransitStop> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingsListofSdkRoutingTransitstopToFfi(value);
  final result = _heresdkRoutingTransitBindingsListofSdkRoutingTransitstopCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingsListofSdkRoutingTransitstopReleaseFfiHandle(_handle);
  return result;
}

List<TransitStop> heresdkRoutingTransitBindingsListofSdkRoutingTransitstopFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingTransitBindingsListofSdkRoutingTransitstopGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingsListofSdkRoutingTransitstopFromFfi(_handle);
  heresdkRoutingTransitBindingsListofSdkRoutingTransitstopReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingsListofSdkRoutingTransitstopReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingsListofSdkRoutingTransitstopReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingsListofSdkRoutingWaypointCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Waypoint_create_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingWaypointReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Waypoint_release_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingWaypointInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Waypoint_insert'));
final _heresdkRoutingTransitBindingsListofSdkRoutingWaypointIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Waypoint_iterator'));
final _heresdkRoutingTransitBindingsListofSdkRoutingWaypointIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Waypoint_iterator_release_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingWaypointIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Waypoint_iterator_is_valid'));
final _heresdkRoutingTransitBindingsListofSdkRoutingWaypointIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Waypoint_iterator_increment'));
final _heresdkRoutingTransitBindingsListofSdkRoutingWaypointIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Waypoint_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingsListofSdkRoutingWaypointToFfi(List<Waypoint> value) {
  final _result = _heresdkRoutingTransitBindingsListofSdkRoutingWaypointCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingWaypointToFfi(element);
    _heresdkRoutingTransitBindingsListofSdkRoutingWaypointInsert(_result, _elementHandle);
    sdkRoutingWaypointReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Waypoint> heresdkRoutingTransitBindingsListofSdkRoutingWaypointFromFfi(Pointer<Void> handle) {
  final result = List<Waypoint>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingsListofSdkRoutingWaypointIterator(handle);
  while (_heresdkRoutingTransitBindingsListofSdkRoutingWaypointIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingsListofSdkRoutingWaypointIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingWaypointFromFfi(_elementHandle));
    } finally {
      sdkRoutingWaypointReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingsListofSdkRoutingWaypointIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingsListofSdkRoutingWaypointIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingsListofSdkRoutingWaypointReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingsListofSdkRoutingWaypointReleaseHandle(handle);

final _heresdkRoutingTransitBindingsListofSdkRoutingWaypointCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Waypoint_create_handle_nullable'));
final _heresdkRoutingTransitBindingsListofSdkRoutingWaypointReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Waypoint_release_handle_nullable'));
final _heresdkRoutingTransitBindingsListofSdkRoutingWaypointGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_Waypoint_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingsListofSdkRoutingWaypointToFfiNullable(List<Waypoint> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingsListofSdkRoutingWaypointToFfi(value);
  final result = _heresdkRoutingTransitBindingsListofSdkRoutingWaypointCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingsListofSdkRoutingWaypointReleaseFfiHandle(_handle);
  return result;
}

List<Waypoint> heresdkRoutingTransitBindingsListofSdkRoutingWaypointFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingTransitBindingsListofSdkRoutingWaypointGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingsListofSdkRoutingWaypointFromFfi(_handle);
  heresdkRoutingTransitBindingsListofSdkRoutingWaypointReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingsListofSdkRoutingWaypointReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingsListofSdkRoutingWaypointReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingsListofSdkRoutingZonecategoryCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_ZoneCategory_create_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingZonecategoryReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_ZoneCategory_release_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingZonecategoryInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_ZoneCategory_insert'));
final _heresdkRoutingTransitBindingsListofSdkRoutingZonecategoryIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_ZoneCategory_iterator'));
final _heresdkRoutingTransitBindingsListofSdkRoutingZonecategoryIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_ZoneCategory_iterator_release_handle'));
final _heresdkRoutingTransitBindingsListofSdkRoutingZonecategoryIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_ZoneCategory_iterator_is_valid'));
final _heresdkRoutingTransitBindingsListofSdkRoutingZonecategoryIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_ZoneCategory_iterator_increment'));
final _heresdkRoutingTransitBindingsListofSdkRoutingZonecategoryIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_ZoneCategory_iterator_get'));

Pointer<Void> heresdkRoutingTransitBindingsListofSdkRoutingZonecategoryToFfi(List<ZoneCategory> value) {
  final _result = _heresdkRoutingTransitBindingsListofSdkRoutingZonecategoryCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkRoutingZonecategoryToFfi(element);
    _heresdkRoutingTransitBindingsListofSdkRoutingZonecategoryInsert(_result, _elementHandle);
    sdkRoutingZonecategoryReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ZoneCategory> heresdkRoutingTransitBindingsListofSdkRoutingZonecategoryFromFfi(Pointer<Void> handle) {
  final result = List<ZoneCategory>.empty(growable: true);
  final _iteratorHandle = _heresdkRoutingTransitBindingsListofSdkRoutingZonecategoryIterator(handle);
  while (_heresdkRoutingTransitBindingsListofSdkRoutingZonecategoryIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkRoutingTransitBindingsListofSdkRoutingZonecategoryIteratorGet(_iteratorHandle);
    try {
      result.add(sdkRoutingZonecategoryFromFfi(_elementHandle));
    } finally {
      sdkRoutingZonecategoryReleaseFfiHandle(_elementHandle);
    }
    _heresdkRoutingTransitBindingsListofSdkRoutingZonecategoryIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingsListofSdkRoutingZonecategoryIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingsListofSdkRoutingZonecategoryReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingsListofSdkRoutingZonecategoryReleaseHandle(handle);

final _heresdkRoutingTransitBindingsListofSdkRoutingZonecategoryCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_ZoneCategory_create_handle_nullable'));
final _heresdkRoutingTransitBindingsListofSdkRoutingZonecategoryReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_ZoneCategory_release_handle_nullable'));
final _heresdkRoutingTransitBindingsListofSdkRoutingZonecategoryGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_ListOf_sdk_routing_ZoneCategory_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingsListofSdkRoutingZonecategoryToFfiNullable(List<ZoneCategory> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingsListofSdkRoutingZonecategoryToFfi(value);
  final result = _heresdkRoutingTransitBindingsListofSdkRoutingZonecategoryCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingsListofSdkRoutingZonecategoryReleaseFfiHandle(_handle);
  return result;
}

List<ZoneCategory> heresdkRoutingTransitBindingsListofSdkRoutingZonecategoryFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkRoutingTransitBindingsListofSdkRoutingZonecategoryGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingsListofSdkRoutingZonecategoryFromFfi(_handle);
  heresdkRoutingTransitBindingsListofSdkRoutingZonecategoryReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingsListofSdkRoutingZonecategoryReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingsListofSdkRoutingZonecategoryReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingsMapofDoubleToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindings_MapOf_Double_to_Double_create_handle'));
final _heresdkRoutingTransitBindingsMapofDoubleToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_MapOf_Double_to_Double_release_handle'));
final _heresdkRoutingTransitBindingsMapofDoubleToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Double, Double),
    void Function(Pointer<Void>, double, double)
  >('here_sdk_heresdk_routing_transit_bindings_MapOf_Double_to_Double_put'));
final _heresdkRoutingTransitBindingsMapofDoubleToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_MapOf_Double_to_Double_iterator'));
final _heresdkRoutingTransitBindingsMapofDoubleToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_MapOf_Double_to_Double_iterator_release_handle'));
final _heresdkRoutingTransitBindingsMapofDoubleToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_MapOf_Double_to_Double_iterator_is_valid'));
final _heresdkRoutingTransitBindingsMapofDoubleToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_MapOf_Double_to_Double_iterator_increment'));
final _heresdkRoutingTransitBindingsMapofDoubleToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_MapOf_Double_to_Double_iterator_get_key'));
final _heresdkRoutingTransitBindingsMapofDoubleToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_MapOf_Double_to_Double_iterator_get_value'));

Pointer<Void> heresdkRoutingTransitBindingsMapofDoubleToDoubleToFfi(Map<double, double> value) {
  final _result = _heresdkRoutingTransitBindingsMapofDoubleToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _heresdkRoutingTransitBindingsMapofDoubleToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<double, double> heresdkRoutingTransitBindingsMapofDoubleToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<double, double>();
  final _iteratorHandle = _heresdkRoutingTransitBindingsMapofDoubleToDoubleIterator(handle);
  while (_heresdkRoutingTransitBindingsMapofDoubleToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkRoutingTransitBindingsMapofDoubleToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkRoutingTransitBindingsMapofDoubleToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _heresdkRoutingTransitBindingsMapofDoubleToDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingsMapofDoubleToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingsMapofDoubleToDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingsMapofDoubleToDoubleReleaseHandle(handle);

final _heresdkRoutingTransitBindingsMapofDoubleToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_MapOf_Double_to_Double_create_handle_nullable'));
final _heresdkRoutingTransitBindingsMapofDoubleToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_MapOf_Double_to_Double_release_handle_nullable'));
final _heresdkRoutingTransitBindingsMapofDoubleToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_MapOf_Double_to_Double_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingsMapofDoubleToDoubleToFfiNullable(Map<double, double> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingsMapofDoubleToDoubleToFfi(value);
  final result = _heresdkRoutingTransitBindingsMapofDoubleToDoubleCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingsMapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<double, double> heresdkRoutingTransitBindingsMapofDoubleToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return {};
  final _handle = _heresdkRoutingTransitBindingsMapofDoubleToDoubleGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingsMapofDoubleToDoubleFromFfi(_handle);
  heresdkRoutingTransitBindingsMapofDoubleToDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingsMapofDoubleToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingsMapofDoubleToDoubleReleaseHandleNullable(handle);

final _heresdkRoutingTransitBindingsMapofIntToDoubleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_routing_transit_bindings_MapOf_Int_to_Double_create_handle'));
final _heresdkRoutingTransitBindingsMapofIntToDoubleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_MapOf_Int_to_Double_release_handle'));
final _heresdkRoutingTransitBindingsMapofIntToDoublePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Int32, Double),
    void Function(Pointer<Void>, int, double)
  >('here_sdk_heresdk_routing_transit_bindings_MapOf_Int_to_Double_put'));
final _heresdkRoutingTransitBindingsMapofIntToDoubleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_MapOf_Int_to_Double_iterator'));
final _heresdkRoutingTransitBindingsMapofIntToDoubleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_MapOf_Int_to_Double_iterator_release_handle'));
final _heresdkRoutingTransitBindingsMapofIntToDoubleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_MapOf_Int_to_Double_iterator_is_valid'));
final _heresdkRoutingTransitBindingsMapofIntToDoubleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_MapOf_Int_to_Double_iterator_increment'));
final _heresdkRoutingTransitBindingsMapofIntToDoubleIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_MapOf_Int_to_Double_iterator_get_key'));
final _heresdkRoutingTransitBindingsMapofIntToDoubleIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Double Function(Pointer<Void>),
    double Function(Pointer<Void>)
>('here_sdk_heresdk_routing_transit_bindings_MapOf_Int_to_Double_iterator_get_value'));

Pointer<Void> heresdkRoutingTransitBindingsMapofIntToDoubleToFfi(Map<int, double> value) {
  final _result = _heresdkRoutingTransitBindingsMapofIntToDoubleCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = (entry.key);
    final _valueHandle = (entry.value);
    _heresdkRoutingTransitBindingsMapofIntToDoublePut(_result, _keyHandle, _valueHandle);
    
    
  }
  return _result;
}

Map<int, double> heresdkRoutingTransitBindingsMapofIntToDoubleFromFfi(Pointer<Void> handle) {
  final result = Map<int, double>();
  final _iteratorHandle = _heresdkRoutingTransitBindingsMapofIntToDoubleIterator(handle);
  while (_heresdkRoutingTransitBindingsMapofIntToDoubleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkRoutingTransitBindingsMapofIntToDoubleIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkRoutingTransitBindingsMapofIntToDoubleIteratorGetValue(_iteratorHandle);
    try {
      result[(_keyHandle)] =
        (_valueHandle);
    } finally {
      
      
    }
    _heresdkRoutingTransitBindingsMapofIntToDoubleIteratorIncrement(_iteratorHandle);
  }
  _heresdkRoutingTransitBindingsMapofIntToDoubleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkRoutingTransitBindingsMapofIntToDoubleReleaseFfiHandle(Pointer<Void> handle) => _heresdkRoutingTransitBindingsMapofIntToDoubleReleaseHandle(handle);

final _heresdkRoutingTransitBindingsMapofIntToDoubleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_MapOf_Int_to_Double_create_handle_nullable'));
final _heresdkRoutingTransitBindingsMapofIntToDoubleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_MapOf_Int_to_Double_release_handle_nullable'));
final _heresdkRoutingTransitBindingsMapofIntToDoubleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_routing_transit_bindings_MapOf_Int_to_Double_get_value_nullable'));

Pointer<Void> heresdkRoutingTransitBindingsMapofIntToDoubleToFfiNullable(Map<int, double> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkRoutingTransitBindingsMapofIntToDoubleToFfi(value);
  final result = _heresdkRoutingTransitBindingsMapofIntToDoubleCreateHandleNullable(_handle);
  heresdkRoutingTransitBindingsMapofIntToDoubleReleaseFfiHandle(_handle);
  return result;
}

Map<int, double> heresdkRoutingTransitBindingsMapofIntToDoubleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return {};
  final _handle = _heresdkRoutingTransitBindingsMapofIntToDoubleGetValueNullable(handle);
  final result = heresdkRoutingTransitBindingsMapofIntToDoubleFromFfi(_handle);
  heresdkRoutingTransitBindingsMapofIntToDoubleReleaseFfiHandle(_handle);
  return result;
}

void heresdkRoutingTransitBindingsMapofIntToDoubleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkRoutingTransitBindingsMapofIntToDoubleReleaseHandleNullable(handle);


// Copyright (c) 2018-2021 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//






























final _heresdkSearchBindingsListofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindings_ListOf_Locale_create_handle'));
final _heresdkSearchBindingsListofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_Locale_release_handle'));
final _heresdkSearchBindingsListofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_Locale_insert'));
final _heresdkSearchBindingsListofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_Locale_iterator'));
final _heresdkSearchBindingsListofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_Locale_iterator_release_handle'));
final _heresdkSearchBindingsListofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_Locale_iterator_is_valid'));
final _heresdkSearchBindingsListofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_Locale_iterator_increment'));
final _heresdkSearchBindingsListofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_Locale_iterator_get'));

Pointer<Void> heresdkSearchBindingsListofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkSearchBindingsListofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkSearchBindingsListofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkSearchBindingsListofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingsListofLocaleIterator(handle);
  while (_heresdkSearchBindingsListofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingsListofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingsListofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingsListofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingsListofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingsListofLocaleReleaseHandle(handle);

final _heresdkSearchBindingsListofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_Locale_create_handle_nullable'));
final _heresdkSearchBindingsListofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_Locale_release_handle_nullable'));
final _heresdkSearchBindingsListofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkSearchBindingsListofLocaleToFfiNullable(List<Locale> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingsListofLocaleToFfi(value);
  final result = _heresdkSearchBindingsListofLocaleCreateHandleNullable(_handle);
  heresdkSearchBindingsListofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale> heresdkSearchBindingsListofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkSearchBindingsListofLocaleGetValueNullable(handle);
  final result = heresdkSearchBindingsListofLocaleFromFfi(_handle);
  heresdkSearchBindingsListofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingsListofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingsListofLocaleReleaseHandleNullable(handle);

final _heresdkSearchBindingsListofStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindings_ListOf_String_create_handle'));
final _heresdkSearchBindingsListofStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_String_release_handle'));
final _heresdkSearchBindingsListofStringInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_String_insert'));
final _heresdkSearchBindingsListofStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_String_iterator'));
final _heresdkSearchBindingsListofStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_String_iterator_release_handle'));
final _heresdkSearchBindingsListofStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_String_iterator_is_valid'));
final _heresdkSearchBindingsListofStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_String_iterator_increment'));
final _heresdkSearchBindingsListofStringIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_String_iterator_get'));

Pointer<Void> heresdkSearchBindingsListofStringToFfi(List<String> value) {
  final _result = _heresdkSearchBindingsListofStringCreateHandle();
  for (final element in value) {
    final _elementHandle = stringToFfi(element);
    _heresdkSearchBindingsListofStringInsert(_result, _elementHandle);
    stringReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<String> heresdkSearchBindingsListofStringFromFfi(Pointer<Void> handle) {
  final result = List<String>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingsListofStringIterator(handle);
  while (_heresdkSearchBindingsListofStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingsListofStringIteratorGet(_iteratorHandle);
    try {
      result.add(stringFromFfi(_elementHandle));
    } finally {
      stringReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingsListofStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingsListofStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingsListofStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingsListofStringReleaseHandle(handle);

final _heresdkSearchBindingsListofStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_String_create_handle_nullable'));
final _heresdkSearchBindingsListofStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_String_release_handle_nullable'));
final _heresdkSearchBindingsListofStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_String_get_value_nullable'));

Pointer<Void> heresdkSearchBindingsListofStringToFfiNullable(List<String> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingsListofStringToFfi(value);
  final result = _heresdkSearchBindingsListofStringCreateHandleNullable(_handle);
  heresdkSearchBindingsListofStringReleaseFfiHandle(_handle);
  return result;
}

List<String> heresdkSearchBindingsListofStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkSearchBindingsListofStringGetValueNullable(handle);
  final result = heresdkSearchBindingsListofStringFromFfi(_handle);
  heresdkSearchBindingsListofStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingsListofStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingsListofStringReleaseHandleNullable(handle);

final _heresdkSearchBindingsListofSdkCoreCountrycodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_core_CountryCode_create_handle'));
final _heresdkSearchBindingsListofSdkCoreCountrycodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_core_CountryCode_release_handle'));
final _heresdkSearchBindingsListofSdkCoreCountrycodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_core_CountryCode_insert'));
final _heresdkSearchBindingsListofSdkCoreCountrycodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_core_CountryCode_iterator'));
final _heresdkSearchBindingsListofSdkCoreCountrycodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_core_CountryCode_iterator_release_handle'));
final _heresdkSearchBindingsListofSdkCoreCountrycodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_core_CountryCode_iterator_is_valid'));
final _heresdkSearchBindingsListofSdkCoreCountrycodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_core_CountryCode_iterator_increment'));
final _heresdkSearchBindingsListofSdkCoreCountrycodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_core_CountryCode_iterator_get'));

Pointer<Void> heresdkSearchBindingsListofSdkCoreCountrycodeToFfi(List<CountryCode> value) {
  final _result = _heresdkSearchBindingsListofSdkCoreCountrycodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreCountrycodeToFfi(element);
    _heresdkSearchBindingsListofSdkCoreCountrycodeInsert(_result, _elementHandle);
    sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<CountryCode> heresdkSearchBindingsListofSdkCoreCountrycodeFromFfi(Pointer<Void> handle) {
  final result = List<CountryCode>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingsListofSdkCoreCountrycodeIterator(handle);
  while (_heresdkSearchBindingsListofSdkCoreCountrycodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingsListofSdkCoreCountrycodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreCountrycodeFromFfi(_elementHandle));
    } finally {
      sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingsListofSdkCoreCountrycodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingsListofSdkCoreCountrycodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingsListofSdkCoreCountrycodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingsListofSdkCoreCountrycodeReleaseHandle(handle);

final _heresdkSearchBindingsListofSdkCoreCountrycodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_core_CountryCode_create_handle_nullable'));
final _heresdkSearchBindingsListofSdkCoreCountrycodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_core_CountryCode_release_handle_nullable'));
final _heresdkSearchBindingsListofSdkCoreCountrycodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_core_CountryCode_get_value_nullable'));

Pointer<Void> heresdkSearchBindingsListofSdkCoreCountrycodeToFfiNullable(List<CountryCode> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingsListofSdkCoreCountrycodeToFfi(value);
  final result = _heresdkSearchBindingsListofSdkCoreCountrycodeCreateHandleNullable(_handle);
  heresdkSearchBindingsListofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

List<CountryCode> heresdkSearchBindingsListofSdkCoreCountrycodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkSearchBindingsListofSdkCoreCountrycodeGetValueNullable(handle);
  final result = heresdkSearchBindingsListofSdkCoreCountrycodeFromFfi(_handle);
  heresdkSearchBindingsListofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingsListofSdkCoreCountrycodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingsListofSdkCoreCountrycodeReleaseHandleNullable(handle);

final _heresdkSearchBindingsListofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkSearchBindingsListofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkSearchBindingsListofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkSearchBindingsListofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkSearchBindingsListofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkSearchBindingsListofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkSearchBindingsListofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkSearchBindingsListofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkSearchBindingsListofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkSearchBindingsListofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkSearchBindingsListofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkSearchBindingsListofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingsListofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkSearchBindingsListofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingsListofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingsListofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingsListofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingsListofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingsListofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkSearchBindingsListofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkSearchBindingsListofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkSearchBindingsListofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkSearchBindingsListofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingsListofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkSearchBindingsListofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkSearchBindingsListofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates> heresdkSearchBindingsListofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkSearchBindingsListofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkSearchBindingsListofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkSearchBindingsListofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingsListofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingsListofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkSearchBindingsListofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkSearchBindingsListofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkSearchBindingsListofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_core_LocalizedText_insert'));
final _heresdkSearchBindingsListofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_core_LocalizedText_iterator'));
final _heresdkSearchBindingsListofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkSearchBindingsListofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkSearchBindingsListofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkSearchBindingsListofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkSearchBindingsListofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkSearchBindingsListofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkSearchBindingsListofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkSearchBindingsListofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingsListofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkSearchBindingsListofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingsListofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingsListofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingsListofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingsListofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingsListofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkSearchBindingsListofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkSearchBindingsListofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkSearchBindingsListofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkSearchBindingsListofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingsListofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkSearchBindingsListofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkSearchBindingsListofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText> heresdkSearchBindingsListofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkSearchBindingsListofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkSearchBindingsListofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkSearchBindingsListofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingsListofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingsListofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkSearchBindingsListofSdkSearchContactCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_Contact_create_handle'));
final _heresdkSearchBindingsListofSdkSearchContactReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_Contact_release_handle'));
final _heresdkSearchBindingsListofSdkSearchContactInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_Contact_insert'));
final _heresdkSearchBindingsListofSdkSearchContactIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_Contact_iterator'));
final _heresdkSearchBindingsListofSdkSearchContactIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_Contact_iterator_release_handle'));
final _heresdkSearchBindingsListofSdkSearchContactIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_Contact_iterator_is_valid'));
final _heresdkSearchBindingsListofSdkSearchContactIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_Contact_iterator_increment'));
final _heresdkSearchBindingsListofSdkSearchContactIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_Contact_iterator_get'));

Pointer<Void> heresdkSearchBindingsListofSdkSearchContactToFfi(List<Contact> value) {
  final _result = _heresdkSearchBindingsListofSdkSearchContactCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchContactToFfi(element);
    _heresdkSearchBindingsListofSdkSearchContactInsert(_result, _elementHandle);
    sdkSearchContactReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Contact> heresdkSearchBindingsListofSdkSearchContactFromFfi(Pointer<Void> handle) {
  final result = List<Contact>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingsListofSdkSearchContactIterator(handle);
  while (_heresdkSearchBindingsListofSdkSearchContactIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingsListofSdkSearchContactIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchContactFromFfi(_elementHandle));
    } finally {
      sdkSearchContactReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingsListofSdkSearchContactIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingsListofSdkSearchContactIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingsListofSdkSearchContactReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingsListofSdkSearchContactReleaseHandle(handle);

final _heresdkSearchBindingsListofSdkSearchContactCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_Contact_create_handle_nullable'));
final _heresdkSearchBindingsListofSdkSearchContactReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_Contact_release_handle_nullable'));
final _heresdkSearchBindingsListofSdkSearchContactGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_Contact_get_value_nullable'));

Pointer<Void> heresdkSearchBindingsListofSdkSearchContactToFfiNullable(List<Contact> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingsListofSdkSearchContactToFfi(value);
  final result = _heresdkSearchBindingsListofSdkSearchContactCreateHandleNullable(_handle);
  heresdkSearchBindingsListofSdkSearchContactReleaseFfiHandle(_handle);
  return result;
}

List<Contact> heresdkSearchBindingsListofSdkSearchContactFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkSearchBindingsListofSdkSearchContactGetValueNullable(handle);
  final result = heresdkSearchBindingsListofSdkSearchContactFromFfi(_handle);
  heresdkSearchBindingsListofSdkSearchContactReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingsListofSdkSearchContactReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingsListofSdkSearchContactReleaseHandleNullable(handle);

final _heresdkSearchBindingsListofSdkSearchEmailaddressCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_EmailAddress_create_handle'));
final _heresdkSearchBindingsListofSdkSearchEmailaddressReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_EmailAddress_release_handle'));
final _heresdkSearchBindingsListofSdkSearchEmailaddressInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_EmailAddress_insert'));
final _heresdkSearchBindingsListofSdkSearchEmailaddressIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_EmailAddress_iterator'));
final _heresdkSearchBindingsListofSdkSearchEmailaddressIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_EmailAddress_iterator_release_handle'));
final _heresdkSearchBindingsListofSdkSearchEmailaddressIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_EmailAddress_iterator_is_valid'));
final _heresdkSearchBindingsListofSdkSearchEmailaddressIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_EmailAddress_iterator_increment'));
final _heresdkSearchBindingsListofSdkSearchEmailaddressIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_EmailAddress_iterator_get'));

Pointer<Void> heresdkSearchBindingsListofSdkSearchEmailaddressToFfi(List<EmailAddress> value) {
  final _result = _heresdkSearchBindingsListofSdkSearchEmailaddressCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchEmailaddressToFfi(element);
    _heresdkSearchBindingsListofSdkSearchEmailaddressInsert(_result, _elementHandle);
    sdkSearchEmailaddressReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<EmailAddress> heresdkSearchBindingsListofSdkSearchEmailaddressFromFfi(Pointer<Void> handle) {
  final result = List<EmailAddress>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingsListofSdkSearchEmailaddressIterator(handle);
  while (_heresdkSearchBindingsListofSdkSearchEmailaddressIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingsListofSdkSearchEmailaddressIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchEmailaddressFromFfi(_elementHandle));
    } finally {
      sdkSearchEmailaddressReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingsListofSdkSearchEmailaddressIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingsListofSdkSearchEmailaddressIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingsListofSdkSearchEmailaddressReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingsListofSdkSearchEmailaddressReleaseHandle(handle);

final _heresdkSearchBindingsListofSdkSearchEmailaddressCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_EmailAddress_create_handle_nullable'));
final _heresdkSearchBindingsListofSdkSearchEmailaddressReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_EmailAddress_release_handle_nullable'));
final _heresdkSearchBindingsListofSdkSearchEmailaddressGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_EmailAddress_get_value_nullable'));

Pointer<Void> heresdkSearchBindingsListofSdkSearchEmailaddressToFfiNullable(List<EmailAddress> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingsListofSdkSearchEmailaddressToFfi(value);
  final result = _heresdkSearchBindingsListofSdkSearchEmailaddressCreateHandleNullable(_handle);
  heresdkSearchBindingsListofSdkSearchEmailaddressReleaseFfiHandle(_handle);
  return result;
}

List<EmailAddress> heresdkSearchBindingsListofSdkSearchEmailaddressFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkSearchBindingsListofSdkSearchEmailaddressGetValueNullable(handle);
  final result = heresdkSearchBindingsListofSdkSearchEmailaddressFromFfi(_handle);
  heresdkSearchBindingsListofSdkSearchEmailaddressReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingsListofSdkSearchEmailaddressReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingsListofSdkSearchEmailaddressReleaseHandleNullable(handle);

final _heresdkSearchBindingsListofSdkSearchEvchargingpointCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_EvChargingPoint_create_handle'));
final _heresdkSearchBindingsListofSdkSearchEvchargingpointReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_EvChargingPoint_release_handle'));
final _heresdkSearchBindingsListofSdkSearchEvchargingpointInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_EvChargingPoint_insert'));
final _heresdkSearchBindingsListofSdkSearchEvchargingpointIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_EvChargingPoint_iterator'));
final _heresdkSearchBindingsListofSdkSearchEvchargingpointIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_EvChargingPoint_iterator_release_handle'));
final _heresdkSearchBindingsListofSdkSearchEvchargingpointIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_EvChargingPoint_iterator_is_valid'));
final _heresdkSearchBindingsListofSdkSearchEvchargingpointIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_EvChargingPoint_iterator_increment'));
final _heresdkSearchBindingsListofSdkSearchEvchargingpointIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_EvChargingPoint_iterator_get'));

Pointer<Void> heresdkSearchBindingsListofSdkSearchEvchargingpointToFfi(List<EvChargingPoint> value) {
  final _result = _heresdkSearchBindingsListofSdkSearchEvchargingpointCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchEvchargingpointToFfi(element);
    _heresdkSearchBindingsListofSdkSearchEvchargingpointInsert(_result, _elementHandle);
    sdkSearchEvchargingpointReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<EvChargingPoint> heresdkSearchBindingsListofSdkSearchEvchargingpointFromFfi(Pointer<Void> handle) {
  final result = List<EvChargingPoint>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingsListofSdkSearchEvchargingpointIterator(handle);
  while (_heresdkSearchBindingsListofSdkSearchEvchargingpointIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingsListofSdkSearchEvchargingpointIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchEvchargingpointFromFfi(_elementHandle));
    } finally {
      sdkSearchEvchargingpointReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingsListofSdkSearchEvchargingpointIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingsListofSdkSearchEvchargingpointIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingsListofSdkSearchEvchargingpointReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingsListofSdkSearchEvchargingpointReleaseHandle(handle);

final _heresdkSearchBindingsListofSdkSearchEvchargingpointCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_EvChargingPoint_create_handle_nullable'));
final _heresdkSearchBindingsListofSdkSearchEvchargingpointReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_EvChargingPoint_release_handle_nullable'));
final _heresdkSearchBindingsListofSdkSearchEvchargingpointGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_EvChargingPoint_get_value_nullable'));

Pointer<Void> heresdkSearchBindingsListofSdkSearchEvchargingpointToFfiNullable(List<EvChargingPoint> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingsListofSdkSearchEvchargingpointToFfi(value);
  final result = _heresdkSearchBindingsListofSdkSearchEvchargingpointCreateHandleNullable(_handle);
  heresdkSearchBindingsListofSdkSearchEvchargingpointReleaseFfiHandle(_handle);
  return result;
}

List<EvChargingPoint> heresdkSearchBindingsListofSdkSearchEvchargingpointFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkSearchBindingsListofSdkSearchEvchargingpointGetValueNullable(handle);
  final result = heresdkSearchBindingsListofSdkSearchEvchargingpointFromFfi(_handle);
  heresdkSearchBindingsListofSdkSearchEvchargingpointReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingsListofSdkSearchEvchargingpointReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingsListofSdkSearchEvchargingpointReleaseHandleNullable(handle);

final _heresdkSearchBindingsListofSdkSearchEvconnectorCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_EvConnector_create_handle'));
final _heresdkSearchBindingsListofSdkSearchEvconnectorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_EvConnector_release_handle'));
final _heresdkSearchBindingsListofSdkSearchEvconnectorInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_EvConnector_insert'));
final _heresdkSearchBindingsListofSdkSearchEvconnectorIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_EvConnector_iterator'));
final _heresdkSearchBindingsListofSdkSearchEvconnectorIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_EvConnector_iterator_release_handle'));
final _heresdkSearchBindingsListofSdkSearchEvconnectorIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_EvConnector_iterator_is_valid'));
final _heresdkSearchBindingsListofSdkSearchEvconnectorIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_EvConnector_iterator_increment'));
final _heresdkSearchBindingsListofSdkSearchEvconnectorIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_EvConnector_iterator_get'));

Pointer<Void> heresdkSearchBindingsListofSdkSearchEvconnectorToFfi(List<EvConnector> value) {
  final _result = _heresdkSearchBindingsListofSdkSearchEvconnectorCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchEvconnectorToFfi(element);
    _heresdkSearchBindingsListofSdkSearchEvconnectorInsert(_result, _elementHandle);
    sdkSearchEvconnectorReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<EvConnector> heresdkSearchBindingsListofSdkSearchEvconnectorFromFfi(Pointer<Void> handle) {
  final result = List<EvConnector>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingsListofSdkSearchEvconnectorIterator(handle);
  while (_heresdkSearchBindingsListofSdkSearchEvconnectorIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingsListofSdkSearchEvconnectorIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchEvconnectorFromFfi(_elementHandle));
    } finally {
      sdkSearchEvconnectorReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingsListofSdkSearchEvconnectorIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingsListofSdkSearchEvconnectorIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingsListofSdkSearchEvconnectorReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingsListofSdkSearchEvconnectorReleaseHandle(handle);

final _heresdkSearchBindingsListofSdkSearchEvconnectorCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_EvConnector_create_handle_nullable'));
final _heresdkSearchBindingsListofSdkSearchEvconnectorReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_EvConnector_release_handle_nullable'));
final _heresdkSearchBindingsListofSdkSearchEvconnectorGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_EvConnector_get_value_nullable'));

Pointer<Void> heresdkSearchBindingsListofSdkSearchEvconnectorToFfiNullable(List<EvConnector> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingsListofSdkSearchEvconnectorToFfi(value);
  final result = _heresdkSearchBindingsListofSdkSearchEvconnectorCreateHandleNullable(_handle);
  heresdkSearchBindingsListofSdkSearchEvconnectorReleaseFfiHandle(_handle);
  return result;
}

List<EvConnector> heresdkSearchBindingsListofSdkSearchEvconnectorFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkSearchBindingsListofSdkSearchEvconnectorGetValueNullable(handle);
  final result = heresdkSearchBindingsListofSdkSearchEvconnectorFromFfi(_handle);
  heresdkSearchBindingsListofSdkSearchEvconnectorReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingsListofSdkSearchEvconnectorReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingsListofSdkSearchEvconnectorReleaseHandleNullable(handle);

final _heresdkSearchBindingsListofSdkSearchEvconnectorexperimentalCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_EvConnectorExperimental_create_handle'));
final _heresdkSearchBindingsListofSdkSearchEvconnectorexperimentalReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_EvConnectorExperimental_release_handle'));
final _heresdkSearchBindingsListofSdkSearchEvconnectorexperimentalInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_EvConnectorExperimental_insert'));
final _heresdkSearchBindingsListofSdkSearchEvconnectorexperimentalIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_EvConnectorExperimental_iterator'));
final _heresdkSearchBindingsListofSdkSearchEvconnectorexperimentalIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_EvConnectorExperimental_iterator_release_handle'));
final _heresdkSearchBindingsListofSdkSearchEvconnectorexperimentalIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_EvConnectorExperimental_iterator_is_valid'));
final _heresdkSearchBindingsListofSdkSearchEvconnectorexperimentalIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_EvConnectorExperimental_iterator_increment'));
final _heresdkSearchBindingsListofSdkSearchEvconnectorexperimentalIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_EvConnectorExperimental_iterator_get'));

Pointer<Void> heresdkSearchBindingsListofSdkSearchEvconnectorexperimentalToFfi(List<EvConnectorExperimental> value) {
  final _result = _heresdkSearchBindingsListofSdkSearchEvconnectorexperimentalCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchEvconnectorexperimentalToFfi(element);
    _heresdkSearchBindingsListofSdkSearchEvconnectorexperimentalInsert(_result, _elementHandle);
    sdkSearchEvconnectorexperimentalReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<EvConnectorExperimental> heresdkSearchBindingsListofSdkSearchEvconnectorexperimentalFromFfi(Pointer<Void> handle) {
  final result = List<EvConnectorExperimental>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingsListofSdkSearchEvconnectorexperimentalIterator(handle);
  while (_heresdkSearchBindingsListofSdkSearchEvconnectorexperimentalIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingsListofSdkSearchEvconnectorexperimentalIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchEvconnectorexperimentalFromFfi(_elementHandle));
    } finally {
      sdkSearchEvconnectorexperimentalReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingsListofSdkSearchEvconnectorexperimentalIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingsListofSdkSearchEvconnectorexperimentalIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingsListofSdkSearchEvconnectorexperimentalReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingsListofSdkSearchEvconnectorexperimentalReleaseHandle(handle);

final _heresdkSearchBindingsListofSdkSearchEvconnectorexperimentalCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_EvConnectorExperimental_create_handle_nullable'));
final _heresdkSearchBindingsListofSdkSearchEvconnectorexperimentalReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_EvConnectorExperimental_release_handle_nullable'));
final _heresdkSearchBindingsListofSdkSearchEvconnectorexperimentalGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_EvConnectorExperimental_get_value_nullable'));

Pointer<Void> heresdkSearchBindingsListofSdkSearchEvconnectorexperimentalToFfiNullable(List<EvConnectorExperimental> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingsListofSdkSearchEvconnectorexperimentalToFfi(value);
  final result = _heresdkSearchBindingsListofSdkSearchEvconnectorexperimentalCreateHandleNullable(_handle);
  heresdkSearchBindingsListofSdkSearchEvconnectorexperimentalReleaseFfiHandle(_handle);
  return result;
}

List<EvConnectorExperimental> heresdkSearchBindingsListofSdkSearchEvconnectorexperimentalFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkSearchBindingsListofSdkSearchEvconnectorexperimentalGetValueNullable(handle);
  final result = heresdkSearchBindingsListofSdkSearchEvconnectorexperimentalFromFfi(_handle);
  heresdkSearchBindingsListofSdkSearchEvconnectorexperimentalReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingsListofSdkSearchEvconnectorexperimentalReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingsListofSdkSearchEvconnectorexperimentalReleaseHandleNullable(handle);

final _heresdkSearchBindingsListofSdkSearchIndexrangeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_IndexRange_create_handle'));
final _heresdkSearchBindingsListofSdkSearchIndexrangeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_IndexRange_release_handle'));
final _heresdkSearchBindingsListofSdkSearchIndexrangeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_IndexRange_insert'));
final _heresdkSearchBindingsListofSdkSearchIndexrangeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_IndexRange_iterator'));
final _heresdkSearchBindingsListofSdkSearchIndexrangeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_IndexRange_iterator_release_handle'));
final _heresdkSearchBindingsListofSdkSearchIndexrangeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_IndexRange_iterator_is_valid'));
final _heresdkSearchBindingsListofSdkSearchIndexrangeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_IndexRange_iterator_increment'));
final _heresdkSearchBindingsListofSdkSearchIndexrangeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_IndexRange_iterator_get'));

Pointer<Void> heresdkSearchBindingsListofSdkSearchIndexrangeToFfi(List<IndexRange> value) {
  final _result = _heresdkSearchBindingsListofSdkSearchIndexrangeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchIndexrangeToFfi(element);
    _heresdkSearchBindingsListofSdkSearchIndexrangeInsert(_result, _elementHandle);
    sdkSearchIndexrangeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<IndexRange> heresdkSearchBindingsListofSdkSearchIndexrangeFromFfi(Pointer<Void> handle) {
  final result = List<IndexRange>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingsListofSdkSearchIndexrangeIterator(handle);
  while (_heresdkSearchBindingsListofSdkSearchIndexrangeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingsListofSdkSearchIndexrangeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchIndexrangeFromFfi(_elementHandle));
    } finally {
      sdkSearchIndexrangeReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingsListofSdkSearchIndexrangeIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingsListofSdkSearchIndexrangeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingsListofSdkSearchIndexrangeReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingsListofSdkSearchIndexrangeReleaseHandle(handle);

final _heresdkSearchBindingsListofSdkSearchIndexrangeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_IndexRange_create_handle_nullable'));
final _heresdkSearchBindingsListofSdkSearchIndexrangeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_IndexRange_release_handle_nullable'));
final _heresdkSearchBindingsListofSdkSearchIndexrangeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_IndexRange_get_value_nullable'));

Pointer<Void> heresdkSearchBindingsListofSdkSearchIndexrangeToFfiNullable(List<IndexRange> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingsListofSdkSearchIndexrangeToFfi(value);
  final result = _heresdkSearchBindingsListofSdkSearchIndexrangeCreateHandleNullable(_handle);
  heresdkSearchBindingsListofSdkSearchIndexrangeReleaseFfiHandle(_handle);
  return result;
}

List<IndexRange> heresdkSearchBindingsListofSdkSearchIndexrangeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkSearchBindingsListofSdkSearchIndexrangeGetValueNullable(handle);
  final result = heresdkSearchBindingsListofSdkSearchIndexrangeFromFfi(_handle);
  heresdkSearchBindingsListofSdkSearchIndexrangeReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingsListofSdkSearchIndexrangeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingsListofSdkSearchIndexrangeReleaseHandleNullable(handle);

final _heresdkSearchBindingsListofSdkSearchLandlinephoneCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_LandlinePhone_create_handle'));
final _heresdkSearchBindingsListofSdkSearchLandlinephoneReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_LandlinePhone_release_handle'));
final _heresdkSearchBindingsListofSdkSearchLandlinephoneInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_LandlinePhone_insert'));
final _heresdkSearchBindingsListofSdkSearchLandlinephoneIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_LandlinePhone_iterator'));
final _heresdkSearchBindingsListofSdkSearchLandlinephoneIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_LandlinePhone_iterator_release_handle'));
final _heresdkSearchBindingsListofSdkSearchLandlinephoneIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_LandlinePhone_iterator_is_valid'));
final _heresdkSearchBindingsListofSdkSearchLandlinephoneIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_LandlinePhone_iterator_increment'));
final _heresdkSearchBindingsListofSdkSearchLandlinephoneIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_LandlinePhone_iterator_get'));

Pointer<Void> heresdkSearchBindingsListofSdkSearchLandlinephoneToFfi(List<LandlinePhone> value) {
  final _result = _heresdkSearchBindingsListofSdkSearchLandlinephoneCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchLandlinephoneToFfi(element);
    _heresdkSearchBindingsListofSdkSearchLandlinephoneInsert(_result, _elementHandle);
    sdkSearchLandlinephoneReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LandlinePhone> heresdkSearchBindingsListofSdkSearchLandlinephoneFromFfi(Pointer<Void> handle) {
  final result = List<LandlinePhone>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingsListofSdkSearchLandlinephoneIterator(handle);
  while (_heresdkSearchBindingsListofSdkSearchLandlinephoneIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingsListofSdkSearchLandlinephoneIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchLandlinephoneFromFfi(_elementHandle));
    } finally {
      sdkSearchLandlinephoneReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingsListofSdkSearchLandlinephoneIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingsListofSdkSearchLandlinephoneIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingsListofSdkSearchLandlinephoneReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingsListofSdkSearchLandlinephoneReleaseHandle(handle);

final _heresdkSearchBindingsListofSdkSearchLandlinephoneCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_LandlinePhone_create_handle_nullable'));
final _heresdkSearchBindingsListofSdkSearchLandlinephoneReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_LandlinePhone_release_handle_nullable'));
final _heresdkSearchBindingsListofSdkSearchLandlinephoneGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_LandlinePhone_get_value_nullable'));

Pointer<Void> heresdkSearchBindingsListofSdkSearchLandlinephoneToFfiNullable(List<LandlinePhone> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingsListofSdkSearchLandlinephoneToFfi(value);
  final result = _heresdkSearchBindingsListofSdkSearchLandlinephoneCreateHandleNullable(_handle);
  heresdkSearchBindingsListofSdkSearchLandlinephoneReleaseFfiHandle(_handle);
  return result;
}

List<LandlinePhone> heresdkSearchBindingsListofSdkSearchLandlinephoneFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkSearchBindingsListofSdkSearchLandlinephoneGetValueNullable(handle);
  final result = heresdkSearchBindingsListofSdkSearchLandlinephoneFromFfi(_handle);
  heresdkSearchBindingsListofSdkSearchLandlinephoneReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingsListofSdkSearchLandlinephoneReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingsListofSdkSearchLandlinephoneReleaseHandleNullable(handle);

final _heresdkSearchBindingsListofSdkSearchMobilephoneCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_MobilePhone_create_handle'));
final _heresdkSearchBindingsListofSdkSearchMobilephoneReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_MobilePhone_release_handle'));
final _heresdkSearchBindingsListofSdkSearchMobilephoneInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_MobilePhone_insert'));
final _heresdkSearchBindingsListofSdkSearchMobilephoneIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_MobilePhone_iterator'));
final _heresdkSearchBindingsListofSdkSearchMobilephoneIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_MobilePhone_iterator_release_handle'));
final _heresdkSearchBindingsListofSdkSearchMobilephoneIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_MobilePhone_iterator_is_valid'));
final _heresdkSearchBindingsListofSdkSearchMobilephoneIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_MobilePhone_iterator_increment'));
final _heresdkSearchBindingsListofSdkSearchMobilephoneIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_MobilePhone_iterator_get'));

Pointer<Void> heresdkSearchBindingsListofSdkSearchMobilephoneToFfi(List<MobilePhone> value) {
  final _result = _heresdkSearchBindingsListofSdkSearchMobilephoneCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchMobilephoneToFfi(element);
    _heresdkSearchBindingsListofSdkSearchMobilephoneInsert(_result, _elementHandle);
    sdkSearchMobilephoneReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MobilePhone> heresdkSearchBindingsListofSdkSearchMobilephoneFromFfi(Pointer<Void> handle) {
  final result = List<MobilePhone>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingsListofSdkSearchMobilephoneIterator(handle);
  while (_heresdkSearchBindingsListofSdkSearchMobilephoneIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingsListofSdkSearchMobilephoneIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchMobilephoneFromFfi(_elementHandle));
    } finally {
      sdkSearchMobilephoneReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingsListofSdkSearchMobilephoneIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingsListofSdkSearchMobilephoneIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingsListofSdkSearchMobilephoneReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingsListofSdkSearchMobilephoneReleaseHandle(handle);

final _heresdkSearchBindingsListofSdkSearchMobilephoneCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_MobilePhone_create_handle_nullable'));
final _heresdkSearchBindingsListofSdkSearchMobilephoneReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_MobilePhone_release_handle_nullable'));
final _heresdkSearchBindingsListofSdkSearchMobilephoneGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_MobilePhone_get_value_nullable'));

Pointer<Void> heresdkSearchBindingsListofSdkSearchMobilephoneToFfiNullable(List<MobilePhone> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingsListofSdkSearchMobilephoneToFfi(value);
  final result = _heresdkSearchBindingsListofSdkSearchMobilephoneCreateHandleNullable(_handle);
  heresdkSearchBindingsListofSdkSearchMobilephoneReleaseFfiHandle(_handle);
  return result;
}

List<MobilePhone> heresdkSearchBindingsListofSdkSearchMobilephoneFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkSearchBindingsListofSdkSearchMobilephoneGetValueNullable(handle);
  final result = heresdkSearchBindingsListofSdkSearchMobilephoneFromFfi(_handle);
  heresdkSearchBindingsListofSdkSearchMobilephoneReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingsListofSdkSearchMobilephoneReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingsListofSdkSearchMobilephoneReleaseHandleNullable(handle);

final _heresdkSearchBindingsListofSdkSearchOpeninghoursCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_OpeningHours_create_handle'));
final _heresdkSearchBindingsListofSdkSearchOpeninghoursReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_OpeningHours_release_handle'));
final _heresdkSearchBindingsListofSdkSearchOpeninghoursInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_OpeningHours_insert'));
final _heresdkSearchBindingsListofSdkSearchOpeninghoursIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_OpeningHours_iterator'));
final _heresdkSearchBindingsListofSdkSearchOpeninghoursIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_OpeningHours_iterator_release_handle'));
final _heresdkSearchBindingsListofSdkSearchOpeninghoursIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_OpeningHours_iterator_is_valid'));
final _heresdkSearchBindingsListofSdkSearchOpeninghoursIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_OpeningHours_iterator_increment'));
final _heresdkSearchBindingsListofSdkSearchOpeninghoursIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_OpeningHours_iterator_get'));

Pointer<Void> heresdkSearchBindingsListofSdkSearchOpeninghoursToFfi(List<OpeningHours> value) {
  final _result = _heresdkSearchBindingsListofSdkSearchOpeninghoursCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchOpeninghoursToFfi(element);
    _heresdkSearchBindingsListofSdkSearchOpeninghoursInsert(_result, _elementHandle);
    sdkSearchOpeninghoursReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<OpeningHours> heresdkSearchBindingsListofSdkSearchOpeninghoursFromFfi(Pointer<Void> handle) {
  final result = List<OpeningHours>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingsListofSdkSearchOpeninghoursIterator(handle);
  while (_heresdkSearchBindingsListofSdkSearchOpeninghoursIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingsListofSdkSearchOpeninghoursIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchOpeninghoursFromFfi(_elementHandle));
    } finally {
      sdkSearchOpeninghoursReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingsListofSdkSearchOpeninghoursIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingsListofSdkSearchOpeninghoursIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingsListofSdkSearchOpeninghoursReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingsListofSdkSearchOpeninghoursReleaseHandle(handle);

final _heresdkSearchBindingsListofSdkSearchOpeninghoursCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_OpeningHours_create_handle_nullable'));
final _heresdkSearchBindingsListofSdkSearchOpeninghoursReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_OpeningHours_release_handle_nullable'));
final _heresdkSearchBindingsListofSdkSearchOpeninghoursGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_OpeningHours_get_value_nullable'));

Pointer<Void> heresdkSearchBindingsListofSdkSearchOpeninghoursToFfiNullable(List<OpeningHours> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingsListofSdkSearchOpeninghoursToFfi(value);
  final result = _heresdkSearchBindingsListofSdkSearchOpeninghoursCreateHandleNullable(_handle);
  heresdkSearchBindingsListofSdkSearchOpeninghoursReleaseFfiHandle(_handle);
  return result;
}

List<OpeningHours> heresdkSearchBindingsListofSdkSearchOpeninghoursFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkSearchBindingsListofSdkSearchOpeninghoursGetValueNullable(handle);
  final result = heresdkSearchBindingsListofSdkSearchOpeninghoursFromFfi(_handle);
  heresdkSearchBindingsListofSdkSearchOpeninghoursReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingsListofSdkSearchOpeninghoursReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingsListofSdkSearchOpeninghoursReleaseHandleNullable(handle);

final _heresdkSearchBindingsListofSdkSearchPlaceCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_Place_create_handle'));
final _heresdkSearchBindingsListofSdkSearchPlaceReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_Place_release_handle'));
final _heresdkSearchBindingsListofSdkSearchPlaceInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_Place_insert'));
final _heresdkSearchBindingsListofSdkSearchPlaceIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_Place_iterator'));
final _heresdkSearchBindingsListofSdkSearchPlaceIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_Place_iterator_release_handle'));
final _heresdkSearchBindingsListofSdkSearchPlaceIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_Place_iterator_is_valid'));
final _heresdkSearchBindingsListofSdkSearchPlaceIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_Place_iterator_increment'));
final _heresdkSearchBindingsListofSdkSearchPlaceIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_Place_iterator_get'));

Pointer<Void> heresdkSearchBindingsListofSdkSearchPlaceToFfi(List<Place> value) {
  final _result = _heresdkSearchBindingsListofSdkSearchPlaceCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchPlaceToFfi(element);
    _heresdkSearchBindingsListofSdkSearchPlaceInsert(_result, _elementHandle);
    sdkSearchPlaceReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Place> heresdkSearchBindingsListofSdkSearchPlaceFromFfi(Pointer<Void> handle) {
  final result = List<Place>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingsListofSdkSearchPlaceIterator(handle);
  while (_heresdkSearchBindingsListofSdkSearchPlaceIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingsListofSdkSearchPlaceIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchPlaceFromFfi(_elementHandle));
    } finally {
      sdkSearchPlaceReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingsListofSdkSearchPlaceIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingsListofSdkSearchPlaceIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingsListofSdkSearchPlaceReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingsListofSdkSearchPlaceReleaseHandle(handle);

final _heresdkSearchBindingsListofSdkSearchPlaceCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_Place_create_handle_nullable'));
final _heresdkSearchBindingsListofSdkSearchPlaceReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_Place_release_handle_nullable'));
final _heresdkSearchBindingsListofSdkSearchPlaceGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_Place_get_value_nullable'));

Pointer<Void> heresdkSearchBindingsListofSdkSearchPlaceToFfiNullable(List<Place> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingsListofSdkSearchPlaceToFfi(value);
  final result = _heresdkSearchBindingsListofSdkSearchPlaceCreateHandleNullable(_handle);
  heresdkSearchBindingsListofSdkSearchPlaceReleaseFfiHandle(_handle);
  return result;
}

List<Place> heresdkSearchBindingsListofSdkSearchPlaceFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkSearchBindingsListofSdkSearchPlaceGetValueNullable(handle);
  final result = heresdkSearchBindingsListofSdkSearchPlaceFromFfi(_handle);
  heresdkSearchBindingsListofSdkSearchPlaceReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingsListofSdkSearchPlaceReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingsListofSdkSearchPlaceReleaseHandleNullable(handle);

final _heresdkSearchBindingsListofSdkSearchPlacecategoryCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_PlaceCategory_create_handle'));
final _heresdkSearchBindingsListofSdkSearchPlacecategoryReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_PlaceCategory_release_handle'));
final _heresdkSearchBindingsListofSdkSearchPlacecategoryInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_PlaceCategory_insert'));
final _heresdkSearchBindingsListofSdkSearchPlacecategoryIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_PlaceCategory_iterator'));
final _heresdkSearchBindingsListofSdkSearchPlacecategoryIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_PlaceCategory_iterator_release_handle'));
final _heresdkSearchBindingsListofSdkSearchPlacecategoryIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_PlaceCategory_iterator_is_valid'));
final _heresdkSearchBindingsListofSdkSearchPlacecategoryIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_PlaceCategory_iterator_increment'));
final _heresdkSearchBindingsListofSdkSearchPlacecategoryIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_PlaceCategory_iterator_get'));

Pointer<Void> heresdkSearchBindingsListofSdkSearchPlacecategoryToFfi(List<PlaceCategory> value) {
  final _result = _heresdkSearchBindingsListofSdkSearchPlacecategoryCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchPlacecategoryToFfi(element);
    _heresdkSearchBindingsListofSdkSearchPlacecategoryInsert(_result, _elementHandle);
    sdkSearchPlacecategoryReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PlaceCategory> heresdkSearchBindingsListofSdkSearchPlacecategoryFromFfi(Pointer<Void> handle) {
  final result = List<PlaceCategory>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingsListofSdkSearchPlacecategoryIterator(handle);
  while (_heresdkSearchBindingsListofSdkSearchPlacecategoryIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingsListofSdkSearchPlacecategoryIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchPlacecategoryFromFfi(_elementHandle));
    } finally {
      sdkSearchPlacecategoryReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingsListofSdkSearchPlacecategoryIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingsListofSdkSearchPlacecategoryIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingsListofSdkSearchPlacecategoryReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingsListofSdkSearchPlacecategoryReleaseHandle(handle);

final _heresdkSearchBindingsListofSdkSearchPlacecategoryCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_PlaceCategory_create_handle_nullable'));
final _heresdkSearchBindingsListofSdkSearchPlacecategoryReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_PlaceCategory_release_handle_nullable'));
final _heresdkSearchBindingsListofSdkSearchPlacecategoryGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_PlaceCategory_get_value_nullable'));

Pointer<Void> heresdkSearchBindingsListofSdkSearchPlacecategoryToFfiNullable(List<PlaceCategory> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingsListofSdkSearchPlacecategoryToFfi(value);
  final result = _heresdkSearchBindingsListofSdkSearchPlacecategoryCreateHandleNullable(_handle);
  heresdkSearchBindingsListofSdkSearchPlacecategoryReleaseFfiHandle(_handle);
  return result;
}

List<PlaceCategory> heresdkSearchBindingsListofSdkSearchPlacecategoryFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkSearchBindingsListofSdkSearchPlacecategoryGetValueNullable(handle);
  final result = heresdkSearchBindingsListofSdkSearchPlacecategoryFromFfi(_handle);
  heresdkSearchBindingsListofSdkSearchPlacecategoryReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingsListofSdkSearchPlacecategoryReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingsListofSdkSearchPlacecategoryReleaseHandleNullable(handle);

final _heresdkSearchBindingsListofSdkSearchScheduledetailsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_ScheduleDetails_create_handle'));
final _heresdkSearchBindingsListofSdkSearchScheduledetailsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_ScheduleDetails_release_handle'));
final _heresdkSearchBindingsListofSdkSearchScheduledetailsInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_ScheduleDetails_insert'));
final _heresdkSearchBindingsListofSdkSearchScheduledetailsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_ScheduleDetails_iterator'));
final _heresdkSearchBindingsListofSdkSearchScheduledetailsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_ScheduleDetails_iterator_release_handle'));
final _heresdkSearchBindingsListofSdkSearchScheduledetailsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_ScheduleDetails_iterator_is_valid'));
final _heresdkSearchBindingsListofSdkSearchScheduledetailsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_ScheduleDetails_iterator_increment'));
final _heresdkSearchBindingsListofSdkSearchScheduledetailsIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_ScheduleDetails_iterator_get'));

Pointer<Void> heresdkSearchBindingsListofSdkSearchScheduledetailsToFfi(List<ScheduleDetails> value) {
  final _result = _heresdkSearchBindingsListofSdkSearchScheduledetailsCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchScheduledetailsToFfi(element);
    _heresdkSearchBindingsListofSdkSearchScheduledetailsInsert(_result, _elementHandle);
    sdkSearchScheduledetailsReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ScheduleDetails> heresdkSearchBindingsListofSdkSearchScheduledetailsFromFfi(Pointer<Void> handle) {
  final result = List<ScheduleDetails>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingsListofSdkSearchScheduledetailsIterator(handle);
  while (_heresdkSearchBindingsListofSdkSearchScheduledetailsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingsListofSdkSearchScheduledetailsIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchScheduledetailsFromFfi(_elementHandle));
    } finally {
      sdkSearchScheduledetailsReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingsListofSdkSearchScheduledetailsIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingsListofSdkSearchScheduledetailsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingsListofSdkSearchScheduledetailsReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingsListofSdkSearchScheduledetailsReleaseHandle(handle);

final _heresdkSearchBindingsListofSdkSearchScheduledetailsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_ScheduleDetails_create_handle_nullable'));
final _heresdkSearchBindingsListofSdkSearchScheduledetailsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_ScheduleDetails_release_handle_nullable'));
final _heresdkSearchBindingsListofSdkSearchScheduledetailsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_ScheduleDetails_get_value_nullable'));

Pointer<Void> heresdkSearchBindingsListofSdkSearchScheduledetailsToFfiNullable(List<ScheduleDetails> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingsListofSdkSearchScheduledetailsToFfi(value);
  final result = _heresdkSearchBindingsListofSdkSearchScheduledetailsCreateHandleNullable(_handle);
  heresdkSearchBindingsListofSdkSearchScheduledetailsReleaseFfiHandle(_handle);
  return result;
}

List<ScheduleDetails> heresdkSearchBindingsListofSdkSearchScheduledetailsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkSearchBindingsListofSdkSearchScheduledetailsGetValueNullable(handle);
  final result = heresdkSearchBindingsListofSdkSearchScheduledetailsFromFfi(_handle);
  heresdkSearchBindingsListofSdkSearchScheduledetailsReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingsListofSdkSearchScheduledetailsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingsListofSdkSearchScheduledetailsReleaseHandleNullable(handle);

final _heresdkSearchBindingsListofSdkSearchSuggestionCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_Suggestion_create_handle'));
final _heresdkSearchBindingsListofSdkSearchSuggestionReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_Suggestion_release_handle'));
final _heresdkSearchBindingsListofSdkSearchSuggestionInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_Suggestion_insert'));
final _heresdkSearchBindingsListofSdkSearchSuggestionIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_Suggestion_iterator'));
final _heresdkSearchBindingsListofSdkSearchSuggestionIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_Suggestion_iterator_release_handle'));
final _heresdkSearchBindingsListofSdkSearchSuggestionIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_Suggestion_iterator_is_valid'));
final _heresdkSearchBindingsListofSdkSearchSuggestionIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_Suggestion_iterator_increment'));
final _heresdkSearchBindingsListofSdkSearchSuggestionIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_Suggestion_iterator_get'));

Pointer<Void> heresdkSearchBindingsListofSdkSearchSuggestionToFfi(List<Suggestion> value) {
  final _result = _heresdkSearchBindingsListofSdkSearchSuggestionCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchSuggestionToFfi(element);
    _heresdkSearchBindingsListofSdkSearchSuggestionInsert(_result, _elementHandle);
    sdkSearchSuggestionReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Suggestion> heresdkSearchBindingsListofSdkSearchSuggestionFromFfi(Pointer<Void> handle) {
  final result = List<Suggestion>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingsListofSdkSearchSuggestionIterator(handle);
  while (_heresdkSearchBindingsListofSdkSearchSuggestionIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingsListofSdkSearchSuggestionIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchSuggestionFromFfi(_elementHandle));
    } finally {
      sdkSearchSuggestionReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingsListofSdkSearchSuggestionIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingsListofSdkSearchSuggestionIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingsListofSdkSearchSuggestionReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingsListofSdkSearchSuggestionReleaseHandle(handle);

final _heresdkSearchBindingsListofSdkSearchSuggestionCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_Suggestion_create_handle_nullable'));
final _heresdkSearchBindingsListofSdkSearchSuggestionReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_Suggestion_release_handle_nullable'));
final _heresdkSearchBindingsListofSdkSearchSuggestionGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_Suggestion_get_value_nullable'));

Pointer<Void> heresdkSearchBindingsListofSdkSearchSuggestionToFfiNullable(List<Suggestion> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingsListofSdkSearchSuggestionToFfi(value);
  final result = _heresdkSearchBindingsListofSdkSearchSuggestionCreateHandleNullable(_handle);
  heresdkSearchBindingsListofSdkSearchSuggestionReleaseFfiHandle(_handle);
  return result;
}

List<Suggestion> heresdkSearchBindingsListofSdkSearchSuggestionFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkSearchBindingsListofSdkSearchSuggestionGetValueNullable(handle);
  final result = heresdkSearchBindingsListofSdkSearchSuggestionFromFfi(_handle);
  heresdkSearchBindingsListofSdkSearchSuggestionReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingsListofSdkSearchSuggestionReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingsListofSdkSearchSuggestionReleaseHandleNullable(handle);

final _heresdkSearchBindingsListofSdkSearchSupplierreferenceCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_SupplierReference_create_handle'));
final _heresdkSearchBindingsListofSdkSearchSupplierreferenceReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_SupplierReference_release_handle'));
final _heresdkSearchBindingsListofSdkSearchSupplierreferenceInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_SupplierReference_insert'));
final _heresdkSearchBindingsListofSdkSearchSupplierreferenceIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_SupplierReference_iterator'));
final _heresdkSearchBindingsListofSdkSearchSupplierreferenceIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_SupplierReference_iterator_release_handle'));
final _heresdkSearchBindingsListofSdkSearchSupplierreferenceIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_SupplierReference_iterator_is_valid'));
final _heresdkSearchBindingsListofSdkSearchSupplierreferenceIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_SupplierReference_iterator_increment'));
final _heresdkSearchBindingsListofSdkSearchSupplierreferenceIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_SupplierReference_iterator_get'));

Pointer<Void> heresdkSearchBindingsListofSdkSearchSupplierreferenceToFfi(List<SupplierReference> value) {
  final _result = _heresdkSearchBindingsListofSdkSearchSupplierreferenceCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchSupplierreferenceToFfi(element);
    _heresdkSearchBindingsListofSdkSearchSupplierreferenceInsert(_result, _elementHandle);
    sdkSearchSupplierreferenceReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SupplierReference> heresdkSearchBindingsListofSdkSearchSupplierreferenceFromFfi(Pointer<Void> handle) {
  final result = List<SupplierReference>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingsListofSdkSearchSupplierreferenceIterator(handle);
  while (_heresdkSearchBindingsListofSdkSearchSupplierreferenceIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingsListofSdkSearchSupplierreferenceIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchSupplierreferenceFromFfi(_elementHandle));
    } finally {
      sdkSearchSupplierreferenceReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingsListofSdkSearchSupplierreferenceIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingsListofSdkSearchSupplierreferenceIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingsListofSdkSearchSupplierreferenceReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingsListofSdkSearchSupplierreferenceReleaseHandle(handle);

final _heresdkSearchBindingsListofSdkSearchSupplierreferenceCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_SupplierReference_create_handle_nullable'));
final _heresdkSearchBindingsListofSdkSearchSupplierreferenceReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_SupplierReference_release_handle_nullable'));
final _heresdkSearchBindingsListofSdkSearchSupplierreferenceGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_SupplierReference_get_value_nullable'));

Pointer<Void> heresdkSearchBindingsListofSdkSearchSupplierreferenceToFfiNullable(List<SupplierReference> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingsListofSdkSearchSupplierreferenceToFfi(value);
  final result = _heresdkSearchBindingsListofSdkSearchSupplierreferenceCreateHandleNullable(_handle);
  heresdkSearchBindingsListofSdkSearchSupplierreferenceReleaseFfiHandle(_handle);
  return result;
}

List<SupplierReference> heresdkSearchBindingsListofSdkSearchSupplierreferenceFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkSearchBindingsListofSdkSearchSupplierreferenceGetValueNullable(handle);
  final result = heresdkSearchBindingsListofSdkSearchSupplierreferenceFromFfi(_handle);
  heresdkSearchBindingsListofSdkSearchSupplierreferenceReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingsListofSdkSearchSupplierreferenceReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingsListofSdkSearchSupplierreferenceReleaseHandleNullable(handle);

final _heresdkSearchBindingsListofSdkSearchWebeditorialCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_WebEditorial_create_handle'));
final _heresdkSearchBindingsListofSdkSearchWebeditorialReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_WebEditorial_release_handle'));
final _heresdkSearchBindingsListofSdkSearchWebeditorialInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_WebEditorial_insert'));
final _heresdkSearchBindingsListofSdkSearchWebeditorialIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_WebEditorial_iterator'));
final _heresdkSearchBindingsListofSdkSearchWebeditorialIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_WebEditorial_iterator_release_handle'));
final _heresdkSearchBindingsListofSdkSearchWebeditorialIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_WebEditorial_iterator_is_valid'));
final _heresdkSearchBindingsListofSdkSearchWebeditorialIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_WebEditorial_iterator_increment'));
final _heresdkSearchBindingsListofSdkSearchWebeditorialIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_WebEditorial_iterator_get'));

Pointer<Void> heresdkSearchBindingsListofSdkSearchWebeditorialToFfi(List<WebEditorial> value) {
  final _result = _heresdkSearchBindingsListofSdkSearchWebeditorialCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchWebeditorialToFfi(element);
    _heresdkSearchBindingsListofSdkSearchWebeditorialInsert(_result, _elementHandle);
    sdkSearchWebeditorialReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<WebEditorial> heresdkSearchBindingsListofSdkSearchWebeditorialFromFfi(Pointer<Void> handle) {
  final result = List<WebEditorial>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingsListofSdkSearchWebeditorialIterator(handle);
  while (_heresdkSearchBindingsListofSdkSearchWebeditorialIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingsListofSdkSearchWebeditorialIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchWebeditorialFromFfi(_elementHandle));
    } finally {
      sdkSearchWebeditorialReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingsListofSdkSearchWebeditorialIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingsListofSdkSearchWebeditorialIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingsListofSdkSearchWebeditorialReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingsListofSdkSearchWebeditorialReleaseHandle(handle);

final _heresdkSearchBindingsListofSdkSearchWebeditorialCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_WebEditorial_create_handle_nullable'));
final _heresdkSearchBindingsListofSdkSearchWebeditorialReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_WebEditorial_release_handle_nullable'));
final _heresdkSearchBindingsListofSdkSearchWebeditorialGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_WebEditorial_get_value_nullable'));

Pointer<Void> heresdkSearchBindingsListofSdkSearchWebeditorialToFfiNullable(List<WebEditorial> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingsListofSdkSearchWebeditorialToFfi(value);
  final result = _heresdkSearchBindingsListofSdkSearchWebeditorialCreateHandleNullable(_handle);
  heresdkSearchBindingsListofSdkSearchWebeditorialReleaseFfiHandle(_handle);
  return result;
}

List<WebEditorial> heresdkSearchBindingsListofSdkSearchWebeditorialFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkSearchBindingsListofSdkSearchWebeditorialGetValueNullable(handle);
  final result = heresdkSearchBindingsListofSdkSearchWebeditorialFromFfi(_handle);
  heresdkSearchBindingsListofSdkSearchWebeditorialReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingsListofSdkSearchWebeditorialReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingsListofSdkSearchWebeditorialReleaseHandleNullable(handle);

final _heresdkSearchBindingsListofSdkSearchWebimageCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_WebImage_create_handle'));
final _heresdkSearchBindingsListofSdkSearchWebimageReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_WebImage_release_handle'));
final _heresdkSearchBindingsListofSdkSearchWebimageInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_WebImage_insert'));
final _heresdkSearchBindingsListofSdkSearchWebimageIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_WebImage_iterator'));
final _heresdkSearchBindingsListofSdkSearchWebimageIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_WebImage_iterator_release_handle'));
final _heresdkSearchBindingsListofSdkSearchWebimageIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_WebImage_iterator_is_valid'));
final _heresdkSearchBindingsListofSdkSearchWebimageIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_WebImage_iterator_increment'));
final _heresdkSearchBindingsListofSdkSearchWebimageIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_WebImage_iterator_get'));

Pointer<Void> heresdkSearchBindingsListofSdkSearchWebimageToFfi(List<WebImage> value) {
  final _result = _heresdkSearchBindingsListofSdkSearchWebimageCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchWebimageToFfi(element);
    _heresdkSearchBindingsListofSdkSearchWebimageInsert(_result, _elementHandle);
    sdkSearchWebimageReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<WebImage> heresdkSearchBindingsListofSdkSearchWebimageFromFfi(Pointer<Void> handle) {
  final result = List<WebImage>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingsListofSdkSearchWebimageIterator(handle);
  while (_heresdkSearchBindingsListofSdkSearchWebimageIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingsListofSdkSearchWebimageIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchWebimageFromFfi(_elementHandle));
    } finally {
      sdkSearchWebimageReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingsListofSdkSearchWebimageIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingsListofSdkSearchWebimageIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingsListofSdkSearchWebimageReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingsListofSdkSearchWebimageReleaseHandle(handle);

final _heresdkSearchBindingsListofSdkSearchWebimageCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_WebImage_create_handle_nullable'));
final _heresdkSearchBindingsListofSdkSearchWebimageReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_WebImage_release_handle_nullable'));
final _heresdkSearchBindingsListofSdkSearchWebimageGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_WebImage_get_value_nullable'));

Pointer<Void> heresdkSearchBindingsListofSdkSearchWebimageToFfiNullable(List<WebImage> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingsListofSdkSearchWebimageToFfi(value);
  final result = _heresdkSearchBindingsListofSdkSearchWebimageCreateHandleNullable(_handle);
  heresdkSearchBindingsListofSdkSearchWebimageReleaseFfiHandle(_handle);
  return result;
}

List<WebImage> heresdkSearchBindingsListofSdkSearchWebimageFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkSearchBindingsListofSdkSearchWebimageGetValueNullable(handle);
  final result = heresdkSearchBindingsListofSdkSearchWebimageFromFfi(_handle);
  heresdkSearchBindingsListofSdkSearchWebimageReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingsListofSdkSearchWebimageReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingsListofSdkSearchWebimageReleaseHandleNullable(handle);

final _heresdkSearchBindingsListofSdkSearchWebratingCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_WebRating_create_handle'));
final _heresdkSearchBindingsListofSdkSearchWebratingReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_WebRating_release_handle'));
final _heresdkSearchBindingsListofSdkSearchWebratingInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_WebRating_insert'));
final _heresdkSearchBindingsListofSdkSearchWebratingIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_WebRating_iterator'));
final _heresdkSearchBindingsListofSdkSearchWebratingIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_WebRating_iterator_release_handle'));
final _heresdkSearchBindingsListofSdkSearchWebratingIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_WebRating_iterator_is_valid'));
final _heresdkSearchBindingsListofSdkSearchWebratingIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_WebRating_iterator_increment'));
final _heresdkSearchBindingsListofSdkSearchWebratingIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_WebRating_iterator_get'));

Pointer<Void> heresdkSearchBindingsListofSdkSearchWebratingToFfi(List<WebRating> value) {
  final _result = _heresdkSearchBindingsListofSdkSearchWebratingCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchWebratingToFfi(element);
    _heresdkSearchBindingsListofSdkSearchWebratingInsert(_result, _elementHandle);
    sdkSearchWebratingReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<WebRating> heresdkSearchBindingsListofSdkSearchWebratingFromFfi(Pointer<Void> handle) {
  final result = List<WebRating>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingsListofSdkSearchWebratingIterator(handle);
  while (_heresdkSearchBindingsListofSdkSearchWebratingIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingsListofSdkSearchWebratingIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchWebratingFromFfi(_elementHandle));
    } finally {
      sdkSearchWebratingReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingsListofSdkSearchWebratingIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingsListofSdkSearchWebratingIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingsListofSdkSearchWebratingReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingsListofSdkSearchWebratingReleaseHandle(handle);

final _heresdkSearchBindingsListofSdkSearchWebratingCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_WebRating_create_handle_nullable'));
final _heresdkSearchBindingsListofSdkSearchWebratingReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_WebRating_release_handle_nullable'));
final _heresdkSearchBindingsListofSdkSearchWebratingGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_WebRating_get_value_nullable'));

Pointer<Void> heresdkSearchBindingsListofSdkSearchWebratingToFfiNullable(List<WebRating> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingsListofSdkSearchWebratingToFfi(value);
  final result = _heresdkSearchBindingsListofSdkSearchWebratingCreateHandleNullable(_handle);
  heresdkSearchBindingsListofSdkSearchWebratingReleaseFfiHandle(_handle);
  return result;
}

List<WebRating> heresdkSearchBindingsListofSdkSearchWebratingFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkSearchBindingsListofSdkSearchWebratingGetValueNullable(handle);
  final result = heresdkSearchBindingsListofSdkSearchWebratingFromFfi(_handle);
  heresdkSearchBindingsListofSdkSearchWebratingReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingsListofSdkSearchWebratingReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingsListofSdkSearchWebratingReleaseHandleNullable(handle);

final _heresdkSearchBindingsListofSdkSearchWebsiteaddressCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_WebsiteAddress_create_handle'));
final _heresdkSearchBindingsListofSdkSearchWebsiteaddressReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_WebsiteAddress_release_handle'));
final _heresdkSearchBindingsListofSdkSearchWebsiteaddressInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_WebsiteAddress_insert'));
final _heresdkSearchBindingsListofSdkSearchWebsiteaddressIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_WebsiteAddress_iterator'));
final _heresdkSearchBindingsListofSdkSearchWebsiteaddressIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_WebsiteAddress_iterator_release_handle'));
final _heresdkSearchBindingsListofSdkSearchWebsiteaddressIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_WebsiteAddress_iterator_is_valid'));
final _heresdkSearchBindingsListofSdkSearchWebsiteaddressIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_WebsiteAddress_iterator_increment'));
final _heresdkSearchBindingsListofSdkSearchWebsiteaddressIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_ListOf_sdk_search_WebsiteAddress_iterator_get'));

Pointer<Void> heresdkSearchBindingsListofSdkSearchWebsiteaddressToFfi(List<WebsiteAddress> value) {
  final _result = _heresdkSearchBindingsListofSdkSearchWebsiteaddressCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchWebsiteaddressToFfi(element);
    _heresdkSearchBindingsListofSdkSearchWebsiteaddressInsert(_result, _elementHandle);
    sdkSearchWebsiteaddressReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<WebsiteAddress> heresdkSearchBindingsListofSdkSearchWebsiteaddressFromFfi(Pointer<Void> handle) {
  final result = List<WebsiteAddress>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchBindingsListofSdkSearchWebsiteaddressIterator(handle);
  while (_heresdkSearchBindingsListofSdkSearchWebsiteaddressIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchBindingsListofSdkSearchWebsiteaddressIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchWebsiteaddressFromFfi(_elementHandle));
    } finally {
      sdkSearchWebsiteaddressReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchBindingsListofSdkSearchWebsiteaddressIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingsListofSdkSearchWebsiteaddressIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingsListofSdkSearchWebsiteaddressReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingsListofSdkSearchWebsiteaddressReleaseHandle(handle);

final _heresdkSearchBindingsListofSdkSearchWebsiteaddressCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_WebsiteAddress_create_handle_nullable'));
final _heresdkSearchBindingsListofSdkSearchWebsiteaddressReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_WebsiteAddress_release_handle_nullable'));
final _heresdkSearchBindingsListofSdkSearchWebsiteaddressGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_ListOf_sdk_search_WebsiteAddress_get_value_nullable'));

Pointer<Void> heresdkSearchBindingsListofSdkSearchWebsiteaddressToFfiNullable(List<WebsiteAddress> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingsListofSdkSearchWebsiteaddressToFfi(value);
  final result = _heresdkSearchBindingsListofSdkSearchWebsiteaddressCreateHandleNullable(_handle);
  heresdkSearchBindingsListofSdkSearchWebsiteaddressReleaseFfiHandle(_handle);
  return result;
}

List<WebsiteAddress> heresdkSearchBindingsListofSdkSearchWebsiteaddressFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkSearchBindingsListofSdkSearchWebsiteaddressGetValueNullable(handle);
  final result = heresdkSearchBindingsListofSdkSearchWebsiteaddressFromFfi(_handle);
  heresdkSearchBindingsListofSdkSearchWebsiteaddressReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingsListofSdkSearchWebsiteaddressReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingsListofSdkSearchWebsiteaddressReleaseHandleNullable(handle);

final _heresdkSearchBindingsMapofStringToStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindings_MapOf_String_to_String_create_handle'));
final _heresdkSearchBindingsMapofStringToStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_MapOf_String_to_String_release_handle'));
final _heresdkSearchBindingsMapofStringToStringPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_MapOf_String_to_String_put'));
final _heresdkSearchBindingsMapofStringToStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_MapOf_String_to_String_iterator'));
final _heresdkSearchBindingsMapofStringToStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_MapOf_String_to_String_iterator_release_handle'));
final _heresdkSearchBindingsMapofStringToStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindings_MapOf_String_to_String_iterator_is_valid'));
final _heresdkSearchBindingsMapofStringToStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_MapOf_String_to_String_iterator_increment'));
final _heresdkSearchBindingsMapofStringToStringIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_MapOf_String_to_String_iterator_get_key'));
final _heresdkSearchBindingsMapofStringToStringIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_MapOf_String_to_String_iterator_get_value'));

Pointer<Void> heresdkSearchBindingsMapofStringToStringToFfi(Map<String, String> value) {
  final _result = _heresdkSearchBindingsMapofStringToStringCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = stringToFfi(entry.key);
    final _valueHandle = stringToFfi(entry.value);
    _heresdkSearchBindingsMapofStringToStringPut(_result, _keyHandle, _valueHandle);
    stringReleaseFfiHandle(_keyHandle);
    stringReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<String, String> heresdkSearchBindingsMapofStringToStringFromFfi(Pointer<Void> handle) {
  final result = Map<String, String>();
  final _iteratorHandle = _heresdkSearchBindingsMapofStringToStringIterator(handle);
  while (_heresdkSearchBindingsMapofStringToStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkSearchBindingsMapofStringToStringIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkSearchBindingsMapofStringToStringIteratorGetValue(_iteratorHandle);
    try {
      result[stringFromFfi(_keyHandle)] =
        stringFromFfi(_valueHandle);
    } finally {
      stringReleaseFfiHandle(_keyHandle);
      stringReleaseFfiHandle(_valueHandle);
    }
    _heresdkSearchBindingsMapofStringToStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingsMapofStringToStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingsMapofStringToStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingsMapofStringToStringReleaseHandle(handle);

final _heresdkSearchBindingsMapofStringToStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_MapOf_String_to_String_create_handle_nullable'));
final _heresdkSearchBindingsMapofStringToStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_MapOf_String_to_String_release_handle_nullable'));
final _heresdkSearchBindingsMapofStringToStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_MapOf_String_to_String_get_value_nullable'));

Pointer<Void> heresdkSearchBindingsMapofStringToStringToFfiNullable(Map<String, String> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingsMapofStringToStringToFfi(value);
  final result = _heresdkSearchBindingsMapofStringToStringCreateHandleNullable(_handle);
  heresdkSearchBindingsMapofStringToStringReleaseFfiHandle(_handle);
  return result;
}

Map<String, String> heresdkSearchBindingsMapofStringToStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return {};
  final _handle = _heresdkSearchBindingsMapofStringToStringGetValueNullable(handle);
  final result = heresdkSearchBindingsMapofStringToStringFromFfi(_handle);
  heresdkSearchBindingsMapofStringToStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingsMapofStringToStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingsMapofStringToStringReleaseHandleNullable(handle);

final _heresdkSearchBindingsMapofSdkSearchHighlighttypeToHeresdkSearchBindingsListofSdkSearchIndexrangeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_bindings_MapOf_sdk_search_HighlightType_to_heresdk_search_bindings_ListOf_sdk_search_IndexRange_create_handle'));
final _heresdkSearchBindingsMapofSdkSearchHighlighttypeToHeresdkSearchBindingsListofSdkSearchIndexrangeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_MapOf_sdk_search_HighlightType_to_heresdk_search_bindings_ListOf_sdk_search_IndexRange_release_handle'));
final _heresdkSearchBindingsMapofSdkSearchHighlighttypeToHeresdkSearchBindingsListofSdkSearchIndexrangePut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32, Pointer<Void>),
    void Function(Pointer<Void>, int, Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_MapOf_sdk_search_HighlightType_to_heresdk_search_bindings_ListOf_sdk_search_IndexRange_put'));
final _heresdkSearchBindingsMapofSdkSearchHighlighttypeToHeresdkSearchBindingsListofSdkSearchIndexrangeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_MapOf_sdk_search_HighlightType_to_heresdk_search_bindings_ListOf_sdk_search_IndexRange_iterator'));
final _heresdkSearchBindingsMapofSdkSearchHighlighttypeToHeresdkSearchBindingsListofSdkSearchIndexrangeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_MapOf_sdk_search_HighlightType_to_heresdk_search_bindings_ListOf_sdk_search_IndexRange_iterator_release_handle'));
final _heresdkSearchBindingsMapofSdkSearchHighlighttypeToHeresdkSearchBindingsListofSdkSearchIndexrangeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_bindings_MapOf_sdk_search_HighlightType_to_heresdk_search_bindings_ListOf_sdk_search_IndexRange_iterator_is_valid'));
final _heresdkSearchBindingsMapofSdkSearchHighlighttypeToHeresdkSearchBindingsListofSdkSearchIndexrangeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_MapOf_sdk_search_HighlightType_to_heresdk_search_bindings_ListOf_sdk_search_IndexRange_iterator_increment'));
final _heresdkSearchBindingsMapofSdkSearchHighlighttypeToHeresdkSearchBindingsListofSdkSearchIndexrangeIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_MapOf_sdk_search_HighlightType_to_heresdk_search_bindings_ListOf_sdk_search_IndexRange_iterator_get_key'));
final _heresdkSearchBindingsMapofSdkSearchHighlighttypeToHeresdkSearchBindingsListofSdkSearchIndexrangeIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_bindings_MapOf_sdk_search_HighlightType_to_heresdk_search_bindings_ListOf_sdk_search_IndexRange_iterator_get_value'));

Pointer<Void> heresdkSearchBindingsMapofSdkSearchHighlighttypeToHeresdkSearchBindingsListofSdkSearchIndexrangeToFfi(Map<HighlightType, List<IndexRange>> value) {
  final _result = _heresdkSearchBindingsMapofSdkSearchHighlighttypeToHeresdkSearchBindingsListofSdkSearchIndexrangeCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = sdkSearchHighlighttypeToFfi(entry.key);
    final _valueHandle = heresdkSearchBindingsListofSdkSearchIndexrangeToFfi(entry.value);
    _heresdkSearchBindingsMapofSdkSearchHighlighttypeToHeresdkSearchBindingsListofSdkSearchIndexrangePut(_result, _keyHandle, _valueHandle);
    sdkSearchHighlighttypeReleaseFfiHandle(_keyHandle);
    heresdkSearchBindingsListofSdkSearchIndexrangeReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<HighlightType, List<IndexRange>> heresdkSearchBindingsMapofSdkSearchHighlighttypeToHeresdkSearchBindingsListofSdkSearchIndexrangeFromFfi(Pointer<Void> handle) {
  final result = Map<HighlightType, List<IndexRange>>();
  final _iteratorHandle = _heresdkSearchBindingsMapofSdkSearchHighlighttypeToHeresdkSearchBindingsListofSdkSearchIndexrangeIterator(handle);
  while (_heresdkSearchBindingsMapofSdkSearchHighlighttypeToHeresdkSearchBindingsListofSdkSearchIndexrangeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkSearchBindingsMapofSdkSearchHighlighttypeToHeresdkSearchBindingsListofSdkSearchIndexrangeIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkSearchBindingsMapofSdkSearchHighlighttypeToHeresdkSearchBindingsListofSdkSearchIndexrangeIteratorGetValue(_iteratorHandle);
    try {
      result[sdkSearchHighlighttypeFromFfi(_keyHandle)] =
        heresdkSearchBindingsListofSdkSearchIndexrangeFromFfi(_valueHandle);
    } finally {
      sdkSearchHighlighttypeReleaseFfiHandle(_keyHandle);
      heresdkSearchBindingsListofSdkSearchIndexrangeReleaseFfiHandle(_valueHandle);
    }
    _heresdkSearchBindingsMapofSdkSearchHighlighttypeToHeresdkSearchBindingsListofSdkSearchIndexrangeIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchBindingsMapofSdkSearchHighlighttypeToHeresdkSearchBindingsListofSdkSearchIndexrangeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchBindingsMapofSdkSearchHighlighttypeToHeresdkSearchBindingsListofSdkSearchIndexrangeReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchBindingsMapofSdkSearchHighlighttypeToHeresdkSearchBindingsListofSdkSearchIndexrangeReleaseHandle(handle);

final _heresdkSearchBindingsMapofSdkSearchHighlighttypeToHeresdkSearchBindingsListofSdkSearchIndexrangeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_MapOf_sdk_search_HighlightType_to_heresdk_search_bindings_ListOf_sdk_search_IndexRange_create_handle_nullable'));
final _heresdkSearchBindingsMapofSdkSearchHighlighttypeToHeresdkSearchBindingsListofSdkSearchIndexrangeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_MapOf_sdk_search_HighlightType_to_heresdk_search_bindings_ListOf_sdk_search_IndexRange_release_handle_nullable'));
final _heresdkSearchBindingsMapofSdkSearchHighlighttypeToHeresdkSearchBindingsListofSdkSearchIndexrangeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_bindings_MapOf_sdk_search_HighlightType_to_heresdk_search_bindings_ListOf_sdk_search_IndexRange_get_value_nullable'));

Pointer<Void> heresdkSearchBindingsMapofSdkSearchHighlighttypeToHeresdkSearchBindingsListofSdkSearchIndexrangeToFfiNullable(Map<HighlightType, List<IndexRange>> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchBindingsMapofSdkSearchHighlighttypeToHeresdkSearchBindingsListofSdkSearchIndexrangeToFfi(value);
  final result = _heresdkSearchBindingsMapofSdkSearchHighlighttypeToHeresdkSearchBindingsListofSdkSearchIndexrangeCreateHandleNullable(_handle);
  heresdkSearchBindingsMapofSdkSearchHighlighttypeToHeresdkSearchBindingsListofSdkSearchIndexrangeReleaseFfiHandle(_handle);
  return result;
}

Map<HighlightType, List<IndexRange>> heresdkSearchBindingsMapofSdkSearchHighlighttypeToHeresdkSearchBindingsListofSdkSearchIndexrangeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return {};
  final _handle = _heresdkSearchBindingsMapofSdkSearchHighlighttypeToHeresdkSearchBindingsListofSdkSearchIndexrangeGetValueNullable(handle);
  final result = heresdkSearchBindingsMapofSdkSearchHighlighttypeToHeresdkSearchBindingsListofSdkSearchIndexrangeFromFfi(_handle);
  heresdkSearchBindingsMapofSdkSearchHighlighttypeToHeresdkSearchBindingsListofSdkSearchIndexrangeReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchBindingsMapofSdkSearchHighlighttypeToHeresdkSearchBindingsListofSdkSearchIndexrangeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchBindingsMapofSdkSearchHighlighttypeToHeresdkSearchBindingsListofSdkSearchIndexrangeReleaseHandleNullable(handle);


// Copyright (c) 2018-2021 HERE Global B.V. and its affiliate(s).
// All rights reserved.
//
// This software and other materials contain proprietary information
// controlled by HERE and are protected by applicable copyright legislation.
// Any use and utilization of this software and other materials and
// disclosure to any third parties is conditional upon having a separate
// agreement with HERE for the access, use, utilization or disclosure of this
// software. In the absence of such agreement, the use of the software is not
// allowed.
//



























final _heresdkSearchCommonBindingsListofLocaleCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindings_ListOf_Locale_create_handle'));
final _heresdkSearchCommonBindingsListofLocaleReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_Locale_release_handle'));
final _heresdkSearchCommonBindingsListofLocaleInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_Locale_insert'));
final _heresdkSearchCommonBindingsListofLocaleIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_Locale_iterator'));
final _heresdkSearchCommonBindingsListofLocaleIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_Locale_iterator_release_handle'));
final _heresdkSearchCommonBindingsListofLocaleIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_Locale_iterator_is_valid'));
final _heresdkSearchCommonBindingsListofLocaleIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_Locale_iterator_increment'));
final _heresdkSearchCommonBindingsListofLocaleIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_Locale_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingsListofLocaleToFfi(List<Locale> value) {
  final _result = _heresdkSearchCommonBindingsListofLocaleCreateHandle();
  for (final element in value) {
    final _elementHandle = localeToFfi(element);
    _heresdkSearchCommonBindingsListofLocaleInsert(_result, _elementHandle);
    localeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Locale> heresdkSearchCommonBindingsListofLocaleFromFfi(Pointer<Void> handle) {
  final result = List<Locale>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingsListofLocaleIterator(handle);
  while (_heresdkSearchCommonBindingsListofLocaleIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingsListofLocaleIteratorGet(_iteratorHandle);
    try {
      result.add(localeFromFfi(_elementHandle));
    } finally {
      localeReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingsListofLocaleIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingsListofLocaleIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingsListofLocaleReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingsListofLocaleReleaseHandle(handle);

final _heresdkSearchCommonBindingsListofLocaleCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_Locale_create_handle_nullable'));
final _heresdkSearchCommonBindingsListofLocaleReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_Locale_release_handle_nullable'));
final _heresdkSearchCommonBindingsListofLocaleGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_Locale_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingsListofLocaleToFfiNullable(List<Locale> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingsListofLocaleToFfi(value);
  final result = _heresdkSearchCommonBindingsListofLocaleCreateHandleNullable(_handle);
  heresdkSearchCommonBindingsListofLocaleReleaseFfiHandle(_handle);
  return result;
}

List<Locale> heresdkSearchCommonBindingsListofLocaleFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkSearchCommonBindingsListofLocaleGetValueNullable(handle);
  final result = heresdkSearchCommonBindingsListofLocaleFromFfi(_handle);
  heresdkSearchCommonBindingsListofLocaleReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingsListofLocaleReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingsListofLocaleReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingsListofStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindings_ListOf_String_create_handle'));
final _heresdkSearchCommonBindingsListofStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_String_release_handle'));
final _heresdkSearchCommonBindingsListofStringInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_String_insert'));
final _heresdkSearchCommonBindingsListofStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_String_iterator'));
final _heresdkSearchCommonBindingsListofStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_String_iterator_release_handle'));
final _heresdkSearchCommonBindingsListofStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_String_iterator_is_valid'));
final _heresdkSearchCommonBindingsListofStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_String_iterator_increment'));
final _heresdkSearchCommonBindingsListofStringIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_String_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingsListofStringToFfi(List<String> value) {
  final _result = _heresdkSearchCommonBindingsListofStringCreateHandle();
  for (final element in value) {
    final _elementHandle = stringToFfi(element);
    _heresdkSearchCommonBindingsListofStringInsert(_result, _elementHandle);
    stringReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<String> heresdkSearchCommonBindingsListofStringFromFfi(Pointer<Void> handle) {
  final result = List<String>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingsListofStringIterator(handle);
  while (_heresdkSearchCommonBindingsListofStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingsListofStringIteratorGet(_iteratorHandle);
    try {
      result.add(stringFromFfi(_elementHandle));
    } finally {
      stringReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingsListofStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingsListofStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingsListofStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingsListofStringReleaseHandle(handle);

final _heresdkSearchCommonBindingsListofStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_String_create_handle_nullable'));
final _heresdkSearchCommonBindingsListofStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_String_release_handle_nullable'));
final _heresdkSearchCommonBindingsListofStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_String_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingsListofStringToFfiNullable(List<String> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingsListofStringToFfi(value);
  final result = _heresdkSearchCommonBindingsListofStringCreateHandleNullable(_handle);
  heresdkSearchCommonBindingsListofStringReleaseFfiHandle(_handle);
  return result;
}

List<String> heresdkSearchCommonBindingsListofStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkSearchCommonBindingsListofStringGetValueNullable(handle);
  final result = heresdkSearchCommonBindingsListofStringFromFfi(_handle);
  heresdkSearchCommonBindingsListofStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingsListofStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingsListofStringReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingsListofSdkCoreCountrycodeCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_core_CountryCode_create_handle'));
final _heresdkSearchCommonBindingsListofSdkCoreCountrycodeReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_core_CountryCode_release_handle'));
final _heresdkSearchCommonBindingsListofSdkCoreCountrycodeInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Uint32),
    void Function(Pointer<Void>, int)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_core_CountryCode_insert'));
final _heresdkSearchCommonBindingsListofSdkCoreCountrycodeIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_core_CountryCode_iterator'));
final _heresdkSearchCommonBindingsListofSdkCoreCountrycodeIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_core_CountryCode_iterator_release_handle'));
final _heresdkSearchCommonBindingsListofSdkCoreCountrycodeIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_core_CountryCode_iterator_is_valid'));
final _heresdkSearchCommonBindingsListofSdkCoreCountrycodeIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_core_CountryCode_iterator_increment'));
final _heresdkSearchCommonBindingsListofSdkCoreCountrycodeIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Uint32 Function(Pointer<Void>),
    int Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_core_CountryCode_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingsListofSdkCoreCountrycodeToFfi(List<CountryCode> value) {
  final _result = _heresdkSearchCommonBindingsListofSdkCoreCountrycodeCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreCountrycodeToFfi(element);
    _heresdkSearchCommonBindingsListofSdkCoreCountrycodeInsert(_result, _elementHandle);
    sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<CountryCode> heresdkSearchCommonBindingsListofSdkCoreCountrycodeFromFfi(Pointer<Void> handle) {
  final result = List<CountryCode>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingsListofSdkCoreCountrycodeIterator(handle);
  while (_heresdkSearchCommonBindingsListofSdkCoreCountrycodeIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingsListofSdkCoreCountrycodeIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreCountrycodeFromFfi(_elementHandle));
    } finally {
      sdkCoreCountrycodeReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingsListofSdkCoreCountrycodeIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingsListofSdkCoreCountrycodeIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingsListofSdkCoreCountrycodeReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingsListofSdkCoreCountrycodeReleaseHandle(handle);

final _heresdkSearchCommonBindingsListofSdkCoreCountrycodeCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_core_CountryCode_create_handle_nullable'));
final _heresdkSearchCommonBindingsListofSdkCoreCountrycodeReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_core_CountryCode_release_handle_nullable'));
final _heresdkSearchCommonBindingsListofSdkCoreCountrycodeGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_core_CountryCode_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingsListofSdkCoreCountrycodeToFfiNullable(List<CountryCode> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingsListofSdkCoreCountrycodeToFfi(value);
  final result = _heresdkSearchCommonBindingsListofSdkCoreCountrycodeCreateHandleNullable(_handle);
  heresdkSearchCommonBindingsListofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

List<CountryCode> heresdkSearchCommonBindingsListofSdkCoreCountrycodeFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkSearchCommonBindingsListofSdkCoreCountrycodeGetValueNullable(handle);
  final result = heresdkSearchCommonBindingsListofSdkCoreCountrycodeFromFfi(_handle);
  heresdkSearchCommonBindingsListofSdkCoreCountrycodeReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingsListofSdkCoreCountrycodeReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingsListofSdkCoreCountrycodeReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingsListofSdkCoreGeocoordinatesCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_core_GeoCoordinates_create_handle'));
final _heresdkSearchCommonBindingsListofSdkCoreGeocoordinatesReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_core_GeoCoordinates_release_handle'));
final _heresdkSearchCommonBindingsListofSdkCoreGeocoordinatesInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_core_GeoCoordinates_insert'));
final _heresdkSearchCommonBindingsListofSdkCoreGeocoordinatesIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_core_GeoCoordinates_iterator'));
final _heresdkSearchCommonBindingsListofSdkCoreGeocoordinatesIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_core_GeoCoordinates_iterator_release_handle'));
final _heresdkSearchCommonBindingsListofSdkCoreGeocoordinatesIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_core_GeoCoordinates_iterator_is_valid'));
final _heresdkSearchCommonBindingsListofSdkCoreGeocoordinatesIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_core_GeoCoordinates_iterator_increment'));
final _heresdkSearchCommonBindingsListofSdkCoreGeocoordinatesIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_core_GeoCoordinates_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingsListofSdkCoreGeocoordinatesToFfi(List<GeoCoordinates> value) {
  final _result = _heresdkSearchCommonBindingsListofSdkCoreGeocoordinatesCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreGeocoordinatesToFfi(element);
    _heresdkSearchCommonBindingsListofSdkCoreGeocoordinatesInsert(_result, _elementHandle);
    sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<GeoCoordinates> heresdkSearchCommonBindingsListofSdkCoreGeocoordinatesFromFfi(Pointer<Void> handle) {
  final result = List<GeoCoordinates>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingsListofSdkCoreGeocoordinatesIterator(handle);
  while (_heresdkSearchCommonBindingsListofSdkCoreGeocoordinatesIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingsListofSdkCoreGeocoordinatesIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreGeocoordinatesFromFfi(_elementHandle));
    } finally {
      sdkCoreGeocoordinatesReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingsListofSdkCoreGeocoordinatesIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingsListofSdkCoreGeocoordinatesIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingsListofSdkCoreGeocoordinatesReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingsListofSdkCoreGeocoordinatesReleaseHandle(handle);

final _heresdkSearchCommonBindingsListofSdkCoreGeocoordinatesCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_core_GeoCoordinates_create_handle_nullable'));
final _heresdkSearchCommonBindingsListofSdkCoreGeocoordinatesReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_core_GeoCoordinates_release_handle_nullable'));
final _heresdkSearchCommonBindingsListofSdkCoreGeocoordinatesGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_core_GeoCoordinates_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingsListofSdkCoreGeocoordinatesToFfiNullable(List<GeoCoordinates> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingsListofSdkCoreGeocoordinatesToFfi(value);
  final result = _heresdkSearchCommonBindingsListofSdkCoreGeocoordinatesCreateHandleNullable(_handle);
  heresdkSearchCommonBindingsListofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

List<GeoCoordinates> heresdkSearchCommonBindingsListofSdkCoreGeocoordinatesFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkSearchCommonBindingsListofSdkCoreGeocoordinatesGetValueNullable(handle);
  final result = heresdkSearchCommonBindingsListofSdkCoreGeocoordinatesFromFfi(_handle);
  heresdkSearchCommonBindingsListofSdkCoreGeocoordinatesReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingsListofSdkCoreGeocoordinatesReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingsListofSdkCoreGeocoordinatesReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingsListofSdkCoreLocalizedtextCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_core_LocalizedText_create_handle'));
final _heresdkSearchCommonBindingsListofSdkCoreLocalizedtextReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_core_LocalizedText_release_handle'));
final _heresdkSearchCommonBindingsListofSdkCoreLocalizedtextInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_core_LocalizedText_insert'));
final _heresdkSearchCommonBindingsListofSdkCoreLocalizedtextIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_core_LocalizedText_iterator'));
final _heresdkSearchCommonBindingsListofSdkCoreLocalizedtextIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_core_LocalizedText_iterator_release_handle'));
final _heresdkSearchCommonBindingsListofSdkCoreLocalizedtextIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_core_LocalizedText_iterator_is_valid'));
final _heresdkSearchCommonBindingsListofSdkCoreLocalizedtextIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_core_LocalizedText_iterator_increment'));
final _heresdkSearchCommonBindingsListofSdkCoreLocalizedtextIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_core_LocalizedText_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingsListofSdkCoreLocalizedtextToFfi(List<LocalizedText> value) {
  final _result = _heresdkSearchCommonBindingsListofSdkCoreLocalizedtextCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkCoreLocalizedtextToFfi(element);
    _heresdkSearchCommonBindingsListofSdkCoreLocalizedtextInsert(_result, _elementHandle);
    sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LocalizedText> heresdkSearchCommonBindingsListofSdkCoreLocalizedtextFromFfi(Pointer<Void> handle) {
  final result = List<LocalizedText>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingsListofSdkCoreLocalizedtextIterator(handle);
  while (_heresdkSearchCommonBindingsListofSdkCoreLocalizedtextIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingsListofSdkCoreLocalizedtextIteratorGet(_iteratorHandle);
    try {
      result.add(sdkCoreLocalizedtextFromFfi(_elementHandle));
    } finally {
      sdkCoreLocalizedtextReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingsListofSdkCoreLocalizedtextIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingsListofSdkCoreLocalizedtextIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingsListofSdkCoreLocalizedtextReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingsListofSdkCoreLocalizedtextReleaseHandle(handle);

final _heresdkSearchCommonBindingsListofSdkCoreLocalizedtextCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_core_LocalizedText_create_handle_nullable'));
final _heresdkSearchCommonBindingsListofSdkCoreLocalizedtextReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_core_LocalizedText_release_handle_nullable'));
final _heresdkSearchCommonBindingsListofSdkCoreLocalizedtextGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_core_LocalizedText_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingsListofSdkCoreLocalizedtextToFfiNullable(List<LocalizedText> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingsListofSdkCoreLocalizedtextToFfi(value);
  final result = _heresdkSearchCommonBindingsListofSdkCoreLocalizedtextCreateHandleNullable(_handle);
  heresdkSearchCommonBindingsListofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

List<LocalizedText> heresdkSearchCommonBindingsListofSdkCoreLocalizedtextFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkSearchCommonBindingsListofSdkCoreLocalizedtextGetValueNullable(handle);
  final result = heresdkSearchCommonBindingsListofSdkCoreLocalizedtextFromFfi(_handle);
  heresdkSearchCommonBindingsListofSdkCoreLocalizedtextReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingsListofSdkCoreLocalizedtextReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingsListofSdkCoreLocalizedtextReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingsListofSdkSearchContactCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_Contact_create_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchContactReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_Contact_release_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchContactInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_Contact_insert'));
final _heresdkSearchCommonBindingsListofSdkSearchContactIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_Contact_iterator'));
final _heresdkSearchCommonBindingsListofSdkSearchContactIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_Contact_iterator_release_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchContactIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_Contact_iterator_is_valid'));
final _heresdkSearchCommonBindingsListofSdkSearchContactIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_Contact_iterator_increment'));
final _heresdkSearchCommonBindingsListofSdkSearchContactIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_Contact_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingsListofSdkSearchContactToFfi(List<Contact> value) {
  final _result = _heresdkSearchCommonBindingsListofSdkSearchContactCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchContactToFfi(element);
    _heresdkSearchCommonBindingsListofSdkSearchContactInsert(_result, _elementHandle);
    sdkSearchContactReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Contact> heresdkSearchCommonBindingsListofSdkSearchContactFromFfi(Pointer<Void> handle) {
  final result = List<Contact>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingsListofSdkSearchContactIterator(handle);
  while (_heresdkSearchCommonBindingsListofSdkSearchContactIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingsListofSdkSearchContactIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchContactFromFfi(_elementHandle));
    } finally {
      sdkSearchContactReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingsListofSdkSearchContactIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingsListofSdkSearchContactIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingsListofSdkSearchContactReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingsListofSdkSearchContactReleaseHandle(handle);

final _heresdkSearchCommonBindingsListofSdkSearchContactCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_Contact_create_handle_nullable'));
final _heresdkSearchCommonBindingsListofSdkSearchContactReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_Contact_release_handle_nullable'));
final _heresdkSearchCommonBindingsListofSdkSearchContactGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_Contact_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingsListofSdkSearchContactToFfiNullable(List<Contact> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingsListofSdkSearchContactToFfi(value);
  final result = _heresdkSearchCommonBindingsListofSdkSearchContactCreateHandleNullable(_handle);
  heresdkSearchCommonBindingsListofSdkSearchContactReleaseFfiHandle(_handle);
  return result;
}

List<Contact> heresdkSearchCommonBindingsListofSdkSearchContactFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkSearchCommonBindingsListofSdkSearchContactGetValueNullable(handle);
  final result = heresdkSearchCommonBindingsListofSdkSearchContactFromFfi(_handle);
  heresdkSearchCommonBindingsListofSdkSearchContactReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingsListofSdkSearchContactReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingsListofSdkSearchContactReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingsListofSdkSearchEmailaddressCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_EmailAddress_create_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchEmailaddressReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_EmailAddress_release_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchEmailaddressInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_EmailAddress_insert'));
final _heresdkSearchCommonBindingsListofSdkSearchEmailaddressIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_EmailAddress_iterator'));
final _heresdkSearchCommonBindingsListofSdkSearchEmailaddressIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_EmailAddress_iterator_release_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchEmailaddressIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_EmailAddress_iterator_is_valid'));
final _heresdkSearchCommonBindingsListofSdkSearchEmailaddressIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_EmailAddress_iterator_increment'));
final _heresdkSearchCommonBindingsListofSdkSearchEmailaddressIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_EmailAddress_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingsListofSdkSearchEmailaddressToFfi(List<EmailAddress> value) {
  final _result = _heresdkSearchCommonBindingsListofSdkSearchEmailaddressCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchEmailaddressToFfi(element);
    _heresdkSearchCommonBindingsListofSdkSearchEmailaddressInsert(_result, _elementHandle);
    sdkSearchEmailaddressReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<EmailAddress> heresdkSearchCommonBindingsListofSdkSearchEmailaddressFromFfi(Pointer<Void> handle) {
  final result = List<EmailAddress>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingsListofSdkSearchEmailaddressIterator(handle);
  while (_heresdkSearchCommonBindingsListofSdkSearchEmailaddressIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingsListofSdkSearchEmailaddressIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchEmailaddressFromFfi(_elementHandle));
    } finally {
      sdkSearchEmailaddressReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingsListofSdkSearchEmailaddressIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingsListofSdkSearchEmailaddressIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingsListofSdkSearchEmailaddressReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingsListofSdkSearchEmailaddressReleaseHandle(handle);

final _heresdkSearchCommonBindingsListofSdkSearchEmailaddressCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_EmailAddress_create_handle_nullable'));
final _heresdkSearchCommonBindingsListofSdkSearchEmailaddressReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_EmailAddress_release_handle_nullable'));
final _heresdkSearchCommonBindingsListofSdkSearchEmailaddressGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_EmailAddress_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingsListofSdkSearchEmailaddressToFfiNullable(List<EmailAddress> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingsListofSdkSearchEmailaddressToFfi(value);
  final result = _heresdkSearchCommonBindingsListofSdkSearchEmailaddressCreateHandleNullable(_handle);
  heresdkSearchCommonBindingsListofSdkSearchEmailaddressReleaseFfiHandle(_handle);
  return result;
}

List<EmailAddress> heresdkSearchCommonBindingsListofSdkSearchEmailaddressFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkSearchCommonBindingsListofSdkSearchEmailaddressGetValueNullable(handle);
  final result = heresdkSearchCommonBindingsListofSdkSearchEmailaddressFromFfi(_handle);
  heresdkSearchCommonBindingsListofSdkSearchEmailaddressReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingsListofSdkSearchEmailaddressReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingsListofSdkSearchEmailaddressReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingsListofSdkSearchEvchargingpointCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_EvChargingPoint_create_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchEvchargingpointReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_EvChargingPoint_release_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchEvchargingpointInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_EvChargingPoint_insert'));
final _heresdkSearchCommonBindingsListofSdkSearchEvchargingpointIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_EvChargingPoint_iterator'));
final _heresdkSearchCommonBindingsListofSdkSearchEvchargingpointIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_EvChargingPoint_iterator_release_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchEvchargingpointIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_EvChargingPoint_iterator_is_valid'));
final _heresdkSearchCommonBindingsListofSdkSearchEvchargingpointIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_EvChargingPoint_iterator_increment'));
final _heresdkSearchCommonBindingsListofSdkSearchEvchargingpointIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_EvChargingPoint_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingsListofSdkSearchEvchargingpointToFfi(List<EvChargingPoint> value) {
  final _result = _heresdkSearchCommonBindingsListofSdkSearchEvchargingpointCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchEvchargingpointToFfi(element);
    _heresdkSearchCommonBindingsListofSdkSearchEvchargingpointInsert(_result, _elementHandle);
    sdkSearchEvchargingpointReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<EvChargingPoint> heresdkSearchCommonBindingsListofSdkSearchEvchargingpointFromFfi(Pointer<Void> handle) {
  final result = List<EvChargingPoint>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingsListofSdkSearchEvchargingpointIterator(handle);
  while (_heresdkSearchCommonBindingsListofSdkSearchEvchargingpointIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingsListofSdkSearchEvchargingpointIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchEvchargingpointFromFfi(_elementHandle));
    } finally {
      sdkSearchEvchargingpointReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingsListofSdkSearchEvchargingpointIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingsListofSdkSearchEvchargingpointIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingsListofSdkSearchEvchargingpointReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingsListofSdkSearchEvchargingpointReleaseHandle(handle);

final _heresdkSearchCommonBindingsListofSdkSearchEvchargingpointCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_EvChargingPoint_create_handle_nullable'));
final _heresdkSearchCommonBindingsListofSdkSearchEvchargingpointReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_EvChargingPoint_release_handle_nullable'));
final _heresdkSearchCommonBindingsListofSdkSearchEvchargingpointGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_EvChargingPoint_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingsListofSdkSearchEvchargingpointToFfiNullable(List<EvChargingPoint> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingsListofSdkSearchEvchargingpointToFfi(value);
  final result = _heresdkSearchCommonBindingsListofSdkSearchEvchargingpointCreateHandleNullable(_handle);
  heresdkSearchCommonBindingsListofSdkSearchEvchargingpointReleaseFfiHandle(_handle);
  return result;
}

List<EvChargingPoint> heresdkSearchCommonBindingsListofSdkSearchEvchargingpointFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkSearchCommonBindingsListofSdkSearchEvchargingpointGetValueNullable(handle);
  final result = heresdkSearchCommonBindingsListofSdkSearchEvchargingpointFromFfi(_handle);
  heresdkSearchCommonBindingsListofSdkSearchEvchargingpointReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingsListofSdkSearchEvchargingpointReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingsListofSdkSearchEvchargingpointReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingsListofSdkSearchEvconnectorCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_EvConnector_create_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchEvconnectorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_EvConnector_release_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchEvconnectorInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_EvConnector_insert'));
final _heresdkSearchCommonBindingsListofSdkSearchEvconnectorIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_EvConnector_iterator'));
final _heresdkSearchCommonBindingsListofSdkSearchEvconnectorIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_EvConnector_iterator_release_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchEvconnectorIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_EvConnector_iterator_is_valid'));
final _heresdkSearchCommonBindingsListofSdkSearchEvconnectorIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_EvConnector_iterator_increment'));
final _heresdkSearchCommonBindingsListofSdkSearchEvconnectorIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_EvConnector_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingsListofSdkSearchEvconnectorToFfi(List<EvConnector> value) {
  final _result = _heresdkSearchCommonBindingsListofSdkSearchEvconnectorCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchEvconnectorToFfi(element);
    _heresdkSearchCommonBindingsListofSdkSearchEvconnectorInsert(_result, _elementHandle);
    sdkSearchEvconnectorReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<EvConnector> heresdkSearchCommonBindingsListofSdkSearchEvconnectorFromFfi(Pointer<Void> handle) {
  final result = List<EvConnector>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingsListofSdkSearchEvconnectorIterator(handle);
  while (_heresdkSearchCommonBindingsListofSdkSearchEvconnectorIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingsListofSdkSearchEvconnectorIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchEvconnectorFromFfi(_elementHandle));
    } finally {
      sdkSearchEvconnectorReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingsListofSdkSearchEvconnectorIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingsListofSdkSearchEvconnectorIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingsListofSdkSearchEvconnectorReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingsListofSdkSearchEvconnectorReleaseHandle(handle);

final _heresdkSearchCommonBindingsListofSdkSearchEvconnectorCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_EvConnector_create_handle_nullable'));
final _heresdkSearchCommonBindingsListofSdkSearchEvconnectorReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_EvConnector_release_handle_nullable'));
final _heresdkSearchCommonBindingsListofSdkSearchEvconnectorGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_EvConnector_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingsListofSdkSearchEvconnectorToFfiNullable(List<EvConnector> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingsListofSdkSearchEvconnectorToFfi(value);
  final result = _heresdkSearchCommonBindingsListofSdkSearchEvconnectorCreateHandleNullable(_handle);
  heresdkSearchCommonBindingsListofSdkSearchEvconnectorReleaseFfiHandle(_handle);
  return result;
}

List<EvConnector> heresdkSearchCommonBindingsListofSdkSearchEvconnectorFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkSearchCommonBindingsListofSdkSearchEvconnectorGetValueNullable(handle);
  final result = heresdkSearchCommonBindingsListofSdkSearchEvconnectorFromFfi(_handle);
  heresdkSearchCommonBindingsListofSdkSearchEvconnectorReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingsListofSdkSearchEvconnectorReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingsListofSdkSearchEvconnectorReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingsListofSdkSearchEvconnectorexperimentalCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_EvConnectorExperimental_create_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchEvconnectorexperimentalReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_EvConnectorExperimental_release_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchEvconnectorexperimentalInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_EvConnectorExperimental_insert'));
final _heresdkSearchCommonBindingsListofSdkSearchEvconnectorexperimentalIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_EvConnectorExperimental_iterator'));
final _heresdkSearchCommonBindingsListofSdkSearchEvconnectorexperimentalIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_EvConnectorExperimental_iterator_release_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchEvconnectorexperimentalIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_EvConnectorExperimental_iterator_is_valid'));
final _heresdkSearchCommonBindingsListofSdkSearchEvconnectorexperimentalIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_EvConnectorExperimental_iterator_increment'));
final _heresdkSearchCommonBindingsListofSdkSearchEvconnectorexperimentalIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_EvConnectorExperimental_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingsListofSdkSearchEvconnectorexperimentalToFfi(List<EvConnectorExperimental> value) {
  final _result = _heresdkSearchCommonBindingsListofSdkSearchEvconnectorexperimentalCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchEvconnectorexperimentalToFfi(element);
    _heresdkSearchCommonBindingsListofSdkSearchEvconnectorexperimentalInsert(_result, _elementHandle);
    sdkSearchEvconnectorexperimentalReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<EvConnectorExperimental> heresdkSearchCommonBindingsListofSdkSearchEvconnectorexperimentalFromFfi(Pointer<Void> handle) {
  final result = List<EvConnectorExperimental>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingsListofSdkSearchEvconnectorexperimentalIterator(handle);
  while (_heresdkSearchCommonBindingsListofSdkSearchEvconnectorexperimentalIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingsListofSdkSearchEvconnectorexperimentalIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchEvconnectorexperimentalFromFfi(_elementHandle));
    } finally {
      sdkSearchEvconnectorexperimentalReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingsListofSdkSearchEvconnectorexperimentalIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingsListofSdkSearchEvconnectorexperimentalIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingsListofSdkSearchEvconnectorexperimentalReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingsListofSdkSearchEvconnectorexperimentalReleaseHandle(handle);

final _heresdkSearchCommonBindingsListofSdkSearchEvconnectorexperimentalCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_EvConnectorExperimental_create_handle_nullable'));
final _heresdkSearchCommonBindingsListofSdkSearchEvconnectorexperimentalReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_EvConnectorExperimental_release_handle_nullable'));
final _heresdkSearchCommonBindingsListofSdkSearchEvconnectorexperimentalGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_EvConnectorExperimental_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingsListofSdkSearchEvconnectorexperimentalToFfiNullable(List<EvConnectorExperimental> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingsListofSdkSearchEvconnectorexperimentalToFfi(value);
  final result = _heresdkSearchCommonBindingsListofSdkSearchEvconnectorexperimentalCreateHandleNullable(_handle);
  heresdkSearchCommonBindingsListofSdkSearchEvconnectorexperimentalReleaseFfiHandle(_handle);
  return result;
}

List<EvConnectorExperimental> heresdkSearchCommonBindingsListofSdkSearchEvconnectorexperimentalFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkSearchCommonBindingsListofSdkSearchEvconnectorexperimentalGetValueNullable(handle);
  final result = heresdkSearchCommonBindingsListofSdkSearchEvconnectorexperimentalFromFfi(_handle);
  heresdkSearchCommonBindingsListofSdkSearchEvconnectorexperimentalReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingsListofSdkSearchEvconnectorexperimentalReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingsListofSdkSearchEvconnectorexperimentalReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingsListofSdkSearchLandlinephoneCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_LandlinePhone_create_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchLandlinephoneReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_LandlinePhone_release_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchLandlinephoneInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_LandlinePhone_insert'));
final _heresdkSearchCommonBindingsListofSdkSearchLandlinephoneIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_LandlinePhone_iterator'));
final _heresdkSearchCommonBindingsListofSdkSearchLandlinephoneIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_LandlinePhone_iterator_release_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchLandlinephoneIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_LandlinePhone_iterator_is_valid'));
final _heresdkSearchCommonBindingsListofSdkSearchLandlinephoneIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_LandlinePhone_iterator_increment'));
final _heresdkSearchCommonBindingsListofSdkSearchLandlinephoneIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_LandlinePhone_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingsListofSdkSearchLandlinephoneToFfi(List<LandlinePhone> value) {
  final _result = _heresdkSearchCommonBindingsListofSdkSearchLandlinephoneCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchLandlinephoneToFfi(element);
    _heresdkSearchCommonBindingsListofSdkSearchLandlinephoneInsert(_result, _elementHandle);
    sdkSearchLandlinephoneReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<LandlinePhone> heresdkSearchCommonBindingsListofSdkSearchLandlinephoneFromFfi(Pointer<Void> handle) {
  final result = List<LandlinePhone>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingsListofSdkSearchLandlinephoneIterator(handle);
  while (_heresdkSearchCommonBindingsListofSdkSearchLandlinephoneIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingsListofSdkSearchLandlinephoneIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchLandlinephoneFromFfi(_elementHandle));
    } finally {
      sdkSearchLandlinephoneReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingsListofSdkSearchLandlinephoneIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingsListofSdkSearchLandlinephoneIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingsListofSdkSearchLandlinephoneReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingsListofSdkSearchLandlinephoneReleaseHandle(handle);

final _heresdkSearchCommonBindingsListofSdkSearchLandlinephoneCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_LandlinePhone_create_handle_nullable'));
final _heresdkSearchCommonBindingsListofSdkSearchLandlinephoneReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_LandlinePhone_release_handle_nullable'));
final _heresdkSearchCommonBindingsListofSdkSearchLandlinephoneGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_LandlinePhone_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingsListofSdkSearchLandlinephoneToFfiNullable(List<LandlinePhone> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingsListofSdkSearchLandlinephoneToFfi(value);
  final result = _heresdkSearchCommonBindingsListofSdkSearchLandlinephoneCreateHandleNullable(_handle);
  heresdkSearchCommonBindingsListofSdkSearchLandlinephoneReleaseFfiHandle(_handle);
  return result;
}

List<LandlinePhone> heresdkSearchCommonBindingsListofSdkSearchLandlinephoneFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkSearchCommonBindingsListofSdkSearchLandlinephoneGetValueNullable(handle);
  final result = heresdkSearchCommonBindingsListofSdkSearchLandlinephoneFromFfi(_handle);
  heresdkSearchCommonBindingsListofSdkSearchLandlinephoneReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingsListofSdkSearchLandlinephoneReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingsListofSdkSearchLandlinephoneReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingsListofSdkSearchMobilephoneCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_MobilePhone_create_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchMobilephoneReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_MobilePhone_release_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchMobilephoneInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_MobilePhone_insert'));
final _heresdkSearchCommonBindingsListofSdkSearchMobilephoneIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_MobilePhone_iterator'));
final _heresdkSearchCommonBindingsListofSdkSearchMobilephoneIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_MobilePhone_iterator_release_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchMobilephoneIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_MobilePhone_iterator_is_valid'));
final _heresdkSearchCommonBindingsListofSdkSearchMobilephoneIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_MobilePhone_iterator_increment'));
final _heresdkSearchCommonBindingsListofSdkSearchMobilephoneIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_MobilePhone_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingsListofSdkSearchMobilephoneToFfi(List<MobilePhone> value) {
  final _result = _heresdkSearchCommonBindingsListofSdkSearchMobilephoneCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchMobilephoneToFfi(element);
    _heresdkSearchCommonBindingsListofSdkSearchMobilephoneInsert(_result, _elementHandle);
    sdkSearchMobilephoneReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<MobilePhone> heresdkSearchCommonBindingsListofSdkSearchMobilephoneFromFfi(Pointer<Void> handle) {
  final result = List<MobilePhone>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingsListofSdkSearchMobilephoneIterator(handle);
  while (_heresdkSearchCommonBindingsListofSdkSearchMobilephoneIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingsListofSdkSearchMobilephoneIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchMobilephoneFromFfi(_elementHandle));
    } finally {
      sdkSearchMobilephoneReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingsListofSdkSearchMobilephoneIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingsListofSdkSearchMobilephoneIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingsListofSdkSearchMobilephoneReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingsListofSdkSearchMobilephoneReleaseHandle(handle);

final _heresdkSearchCommonBindingsListofSdkSearchMobilephoneCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_MobilePhone_create_handle_nullable'));
final _heresdkSearchCommonBindingsListofSdkSearchMobilephoneReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_MobilePhone_release_handle_nullable'));
final _heresdkSearchCommonBindingsListofSdkSearchMobilephoneGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_MobilePhone_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingsListofSdkSearchMobilephoneToFfiNullable(List<MobilePhone> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingsListofSdkSearchMobilephoneToFfi(value);
  final result = _heresdkSearchCommonBindingsListofSdkSearchMobilephoneCreateHandleNullable(_handle);
  heresdkSearchCommonBindingsListofSdkSearchMobilephoneReleaseFfiHandle(_handle);
  return result;
}

List<MobilePhone> heresdkSearchCommonBindingsListofSdkSearchMobilephoneFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkSearchCommonBindingsListofSdkSearchMobilephoneGetValueNullable(handle);
  final result = heresdkSearchCommonBindingsListofSdkSearchMobilephoneFromFfi(_handle);
  heresdkSearchCommonBindingsListofSdkSearchMobilephoneReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingsListofSdkSearchMobilephoneReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingsListofSdkSearchMobilephoneReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingsListofSdkSearchOpeninghoursCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_OpeningHours_create_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchOpeninghoursReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_OpeningHours_release_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchOpeninghoursInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_OpeningHours_insert'));
final _heresdkSearchCommonBindingsListofSdkSearchOpeninghoursIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_OpeningHours_iterator'));
final _heresdkSearchCommonBindingsListofSdkSearchOpeninghoursIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_OpeningHours_iterator_release_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchOpeninghoursIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_OpeningHours_iterator_is_valid'));
final _heresdkSearchCommonBindingsListofSdkSearchOpeninghoursIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_OpeningHours_iterator_increment'));
final _heresdkSearchCommonBindingsListofSdkSearchOpeninghoursIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_OpeningHours_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingsListofSdkSearchOpeninghoursToFfi(List<OpeningHours> value) {
  final _result = _heresdkSearchCommonBindingsListofSdkSearchOpeninghoursCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchOpeninghoursToFfi(element);
    _heresdkSearchCommonBindingsListofSdkSearchOpeninghoursInsert(_result, _elementHandle);
    sdkSearchOpeninghoursReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<OpeningHours> heresdkSearchCommonBindingsListofSdkSearchOpeninghoursFromFfi(Pointer<Void> handle) {
  final result = List<OpeningHours>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingsListofSdkSearchOpeninghoursIterator(handle);
  while (_heresdkSearchCommonBindingsListofSdkSearchOpeninghoursIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingsListofSdkSearchOpeninghoursIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchOpeninghoursFromFfi(_elementHandle));
    } finally {
      sdkSearchOpeninghoursReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingsListofSdkSearchOpeninghoursIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingsListofSdkSearchOpeninghoursIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingsListofSdkSearchOpeninghoursReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingsListofSdkSearchOpeninghoursReleaseHandle(handle);

final _heresdkSearchCommonBindingsListofSdkSearchOpeninghoursCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_OpeningHours_create_handle_nullable'));
final _heresdkSearchCommonBindingsListofSdkSearchOpeninghoursReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_OpeningHours_release_handle_nullable'));
final _heresdkSearchCommonBindingsListofSdkSearchOpeninghoursGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_OpeningHours_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingsListofSdkSearchOpeninghoursToFfiNullable(List<OpeningHours> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingsListofSdkSearchOpeninghoursToFfi(value);
  final result = _heresdkSearchCommonBindingsListofSdkSearchOpeninghoursCreateHandleNullable(_handle);
  heresdkSearchCommonBindingsListofSdkSearchOpeninghoursReleaseFfiHandle(_handle);
  return result;
}

List<OpeningHours> heresdkSearchCommonBindingsListofSdkSearchOpeninghoursFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkSearchCommonBindingsListofSdkSearchOpeninghoursGetValueNullable(handle);
  final result = heresdkSearchCommonBindingsListofSdkSearchOpeninghoursFromFfi(_handle);
  heresdkSearchCommonBindingsListofSdkSearchOpeninghoursReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingsListofSdkSearchOpeninghoursReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingsListofSdkSearchOpeninghoursReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingsListofSdkSearchPlaceCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_Place_create_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchPlaceReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_Place_release_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchPlaceInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_Place_insert'));
final _heresdkSearchCommonBindingsListofSdkSearchPlaceIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_Place_iterator'));
final _heresdkSearchCommonBindingsListofSdkSearchPlaceIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_Place_iterator_release_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchPlaceIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_Place_iterator_is_valid'));
final _heresdkSearchCommonBindingsListofSdkSearchPlaceIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_Place_iterator_increment'));
final _heresdkSearchCommonBindingsListofSdkSearchPlaceIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_Place_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingsListofSdkSearchPlaceToFfi(List<Place> value) {
  final _result = _heresdkSearchCommonBindingsListofSdkSearchPlaceCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchPlaceToFfi(element);
    _heresdkSearchCommonBindingsListofSdkSearchPlaceInsert(_result, _elementHandle);
    sdkSearchPlaceReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<Place> heresdkSearchCommonBindingsListofSdkSearchPlaceFromFfi(Pointer<Void> handle) {
  final result = List<Place>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingsListofSdkSearchPlaceIterator(handle);
  while (_heresdkSearchCommonBindingsListofSdkSearchPlaceIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingsListofSdkSearchPlaceIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchPlaceFromFfi(_elementHandle));
    } finally {
      sdkSearchPlaceReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingsListofSdkSearchPlaceIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingsListofSdkSearchPlaceIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingsListofSdkSearchPlaceReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingsListofSdkSearchPlaceReleaseHandle(handle);

final _heresdkSearchCommonBindingsListofSdkSearchPlaceCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_Place_create_handle_nullable'));
final _heresdkSearchCommonBindingsListofSdkSearchPlaceReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_Place_release_handle_nullable'));
final _heresdkSearchCommonBindingsListofSdkSearchPlaceGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_Place_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingsListofSdkSearchPlaceToFfiNullable(List<Place> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingsListofSdkSearchPlaceToFfi(value);
  final result = _heresdkSearchCommonBindingsListofSdkSearchPlaceCreateHandleNullable(_handle);
  heresdkSearchCommonBindingsListofSdkSearchPlaceReleaseFfiHandle(_handle);
  return result;
}

List<Place> heresdkSearchCommonBindingsListofSdkSearchPlaceFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkSearchCommonBindingsListofSdkSearchPlaceGetValueNullable(handle);
  final result = heresdkSearchCommonBindingsListofSdkSearchPlaceFromFfi(_handle);
  heresdkSearchCommonBindingsListofSdkSearchPlaceReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingsListofSdkSearchPlaceReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingsListofSdkSearchPlaceReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingsListofSdkSearchPlacecategoryCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_PlaceCategory_create_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchPlacecategoryReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_PlaceCategory_release_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchPlacecategoryInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_PlaceCategory_insert'));
final _heresdkSearchCommonBindingsListofSdkSearchPlacecategoryIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_PlaceCategory_iterator'));
final _heresdkSearchCommonBindingsListofSdkSearchPlacecategoryIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_PlaceCategory_iterator_release_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchPlacecategoryIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_PlaceCategory_iterator_is_valid'));
final _heresdkSearchCommonBindingsListofSdkSearchPlacecategoryIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_PlaceCategory_iterator_increment'));
final _heresdkSearchCommonBindingsListofSdkSearchPlacecategoryIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_PlaceCategory_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingsListofSdkSearchPlacecategoryToFfi(List<PlaceCategory> value) {
  final _result = _heresdkSearchCommonBindingsListofSdkSearchPlacecategoryCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchPlacecategoryToFfi(element);
    _heresdkSearchCommonBindingsListofSdkSearchPlacecategoryInsert(_result, _elementHandle);
    sdkSearchPlacecategoryReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<PlaceCategory> heresdkSearchCommonBindingsListofSdkSearchPlacecategoryFromFfi(Pointer<Void> handle) {
  final result = List<PlaceCategory>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingsListofSdkSearchPlacecategoryIterator(handle);
  while (_heresdkSearchCommonBindingsListofSdkSearchPlacecategoryIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingsListofSdkSearchPlacecategoryIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchPlacecategoryFromFfi(_elementHandle));
    } finally {
      sdkSearchPlacecategoryReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingsListofSdkSearchPlacecategoryIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingsListofSdkSearchPlacecategoryIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingsListofSdkSearchPlacecategoryReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingsListofSdkSearchPlacecategoryReleaseHandle(handle);

final _heresdkSearchCommonBindingsListofSdkSearchPlacecategoryCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_PlaceCategory_create_handle_nullable'));
final _heresdkSearchCommonBindingsListofSdkSearchPlacecategoryReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_PlaceCategory_release_handle_nullable'));
final _heresdkSearchCommonBindingsListofSdkSearchPlacecategoryGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_PlaceCategory_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingsListofSdkSearchPlacecategoryToFfiNullable(List<PlaceCategory> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingsListofSdkSearchPlacecategoryToFfi(value);
  final result = _heresdkSearchCommonBindingsListofSdkSearchPlacecategoryCreateHandleNullable(_handle);
  heresdkSearchCommonBindingsListofSdkSearchPlacecategoryReleaseFfiHandle(_handle);
  return result;
}

List<PlaceCategory> heresdkSearchCommonBindingsListofSdkSearchPlacecategoryFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkSearchCommonBindingsListofSdkSearchPlacecategoryGetValueNullable(handle);
  final result = heresdkSearchCommonBindingsListofSdkSearchPlacecategoryFromFfi(_handle);
  heresdkSearchCommonBindingsListofSdkSearchPlacecategoryReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingsListofSdkSearchPlacecategoryReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingsListofSdkSearchPlacecategoryReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingsListofSdkSearchScheduledetailsCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_ScheduleDetails_create_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchScheduledetailsReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_ScheduleDetails_release_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchScheduledetailsInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_ScheduleDetails_insert'));
final _heresdkSearchCommonBindingsListofSdkSearchScheduledetailsIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_ScheduleDetails_iterator'));
final _heresdkSearchCommonBindingsListofSdkSearchScheduledetailsIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_ScheduleDetails_iterator_release_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchScheduledetailsIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_ScheduleDetails_iterator_is_valid'));
final _heresdkSearchCommonBindingsListofSdkSearchScheduledetailsIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_ScheduleDetails_iterator_increment'));
final _heresdkSearchCommonBindingsListofSdkSearchScheduledetailsIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_ScheduleDetails_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingsListofSdkSearchScheduledetailsToFfi(List<ScheduleDetails> value) {
  final _result = _heresdkSearchCommonBindingsListofSdkSearchScheduledetailsCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchScheduledetailsToFfi(element);
    _heresdkSearchCommonBindingsListofSdkSearchScheduledetailsInsert(_result, _elementHandle);
    sdkSearchScheduledetailsReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<ScheduleDetails> heresdkSearchCommonBindingsListofSdkSearchScheduledetailsFromFfi(Pointer<Void> handle) {
  final result = List<ScheduleDetails>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingsListofSdkSearchScheduledetailsIterator(handle);
  while (_heresdkSearchCommonBindingsListofSdkSearchScheduledetailsIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingsListofSdkSearchScheduledetailsIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchScheduledetailsFromFfi(_elementHandle));
    } finally {
      sdkSearchScheduledetailsReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingsListofSdkSearchScheduledetailsIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingsListofSdkSearchScheduledetailsIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingsListofSdkSearchScheduledetailsReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingsListofSdkSearchScheduledetailsReleaseHandle(handle);

final _heresdkSearchCommonBindingsListofSdkSearchScheduledetailsCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_ScheduleDetails_create_handle_nullable'));
final _heresdkSearchCommonBindingsListofSdkSearchScheduledetailsReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_ScheduleDetails_release_handle_nullable'));
final _heresdkSearchCommonBindingsListofSdkSearchScheduledetailsGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_ScheduleDetails_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingsListofSdkSearchScheduledetailsToFfiNullable(List<ScheduleDetails> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingsListofSdkSearchScheduledetailsToFfi(value);
  final result = _heresdkSearchCommonBindingsListofSdkSearchScheduledetailsCreateHandleNullable(_handle);
  heresdkSearchCommonBindingsListofSdkSearchScheduledetailsReleaseFfiHandle(_handle);
  return result;
}

List<ScheduleDetails> heresdkSearchCommonBindingsListofSdkSearchScheduledetailsFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkSearchCommonBindingsListofSdkSearchScheduledetailsGetValueNullable(handle);
  final result = heresdkSearchCommonBindingsListofSdkSearchScheduledetailsFromFfi(_handle);
  heresdkSearchCommonBindingsListofSdkSearchScheduledetailsReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingsListofSdkSearchScheduledetailsReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingsListofSdkSearchScheduledetailsReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingsListofSdkSearchSupplierreferenceCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_SupplierReference_create_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchSupplierreferenceReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_SupplierReference_release_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchSupplierreferenceInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_SupplierReference_insert'));
final _heresdkSearchCommonBindingsListofSdkSearchSupplierreferenceIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_SupplierReference_iterator'));
final _heresdkSearchCommonBindingsListofSdkSearchSupplierreferenceIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_SupplierReference_iterator_release_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchSupplierreferenceIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_SupplierReference_iterator_is_valid'));
final _heresdkSearchCommonBindingsListofSdkSearchSupplierreferenceIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_SupplierReference_iterator_increment'));
final _heresdkSearchCommonBindingsListofSdkSearchSupplierreferenceIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_SupplierReference_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingsListofSdkSearchSupplierreferenceToFfi(List<SupplierReference> value) {
  final _result = _heresdkSearchCommonBindingsListofSdkSearchSupplierreferenceCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchSupplierreferenceToFfi(element);
    _heresdkSearchCommonBindingsListofSdkSearchSupplierreferenceInsert(_result, _elementHandle);
    sdkSearchSupplierreferenceReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<SupplierReference> heresdkSearchCommonBindingsListofSdkSearchSupplierreferenceFromFfi(Pointer<Void> handle) {
  final result = List<SupplierReference>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingsListofSdkSearchSupplierreferenceIterator(handle);
  while (_heresdkSearchCommonBindingsListofSdkSearchSupplierreferenceIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingsListofSdkSearchSupplierreferenceIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchSupplierreferenceFromFfi(_elementHandle));
    } finally {
      sdkSearchSupplierreferenceReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingsListofSdkSearchSupplierreferenceIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingsListofSdkSearchSupplierreferenceIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingsListofSdkSearchSupplierreferenceReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingsListofSdkSearchSupplierreferenceReleaseHandle(handle);

final _heresdkSearchCommonBindingsListofSdkSearchSupplierreferenceCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_SupplierReference_create_handle_nullable'));
final _heresdkSearchCommonBindingsListofSdkSearchSupplierreferenceReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_SupplierReference_release_handle_nullable'));
final _heresdkSearchCommonBindingsListofSdkSearchSupplierreferenceGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_SupplierReference_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingsListofSdkSearchSupplierreferenceToFfiNullable(List<SupplierReference> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingsListofSdkSearchSupplierreferenceToFfi(value);
  final result = _heresdkSearchCommonBindingsListofSdkSearchSupplierreferenceCreateHandleNullable(_handle);
  heresdkSearchCommonBindingsListofSdkSearchSupplierreferenceReleaseFfiHandle(_handle);
  return result;
}

List<SupplierReference> heresdkSearchCommonBindingsListofSdkSearchSupplierreferenceFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkSearchCommonBindingsListofSdkSearchSupplierreferenceGetValueNullable(handle);
  final result = heresdkSearchCommonBindingsListofSdkSearchSupplierreferenceFromFfi(_handle);
  heresdkSearchCommonBindingsListofSdkSearchSupplierreferenceReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingsListofSdkSearchSupplierreferenceReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingsListofSdkSearchSupplierreferenceReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingsListofSdkSearchWebeditorialCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_WebEditorial_create_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchWebeditorialReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_WebEditorial_release_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchWebeditorialInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_WebEditorial_insert'));
final _heresdkSearchCommonBindingsListofSdkSearchWebeditorialIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_WebEditorial_iterator'));
final _heresdkSearchCommonBindingsListofSdkSearchWebeditorialIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_WebEditorial_iterator_release_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchWebeditorialIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_WebEditorial_iterator_is_valid'));
final _heresdkSearchCommonBindingsListofSdkSearchWebeditorialIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_WebEditorial_iterator_increment'));
final _heresdkSearchCommonBindingsListofSdkSearchWebeditorialIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_WebEditorial_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingsListofSdkSearchWebeditorialToFfi(List<WebEditorial> value) {
  final _result = _heresdkSearchCommonBindingsListofSdkSearchWebeditorialCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchWebeditorialToFfi(element);
    _heresdkSearchCommonBindingsListofSdkSearchWebeditorialInsert(_result, _elementHandle);
    sdkSearchWebeditorialReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<WebEditorial> heresdkSearchCommonBindingsListofSdkSearchWebeditorialFromFfi(Pointer<Void> handle) {
  final result = List<WebEditorial>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingsListofSdkSearchWebeditorialIterator(handle);
  while (_heresdkSearchCommonBindingsListofSdkSearchWebeditorialIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingsListofSdkSearchWebeditorialIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchWebeditorialFromFfi(_elementHandle));
    } finally {
      sdkSearchWebeditorialReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingsListofSdkSearchWebeditorialIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingsListofSdkSearchWebeditorialIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingsListofSdkSearchWebeditorialReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingsListofSdkSearchWebeditorialReleaseHandle(handle);

final _heresdkSearchCommonBindingsListofSdkSearchWebeditorialCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_WebEditorial_create_handle_nullable'));
final _heresdkSearchCommonBindingsListofSdkSearchWebeditorialReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_WebEditorial_release_handle_nullable'));
final _heresdkSearchCommonBindingsListofSdkSearchWebeditorialGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_WebEditorial_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingsListofSdkSearchWebeditorialToFfiNullable(List<WebEditorial> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingsListofSdkSearchWebeditorialToFfi(value);
  final result = _heresdkSearchCommonBindingsListofSdkSearchWebeditorialCreateHandleNullable(_handle);
  heresdkSearchCommonBindingsListofSdkSearchWebeditorialReleaseFfiHandle(_handle);
  return result;
}

List<WebEditorial> heresdkSearchCommonBindingsListofSdkSearchWebeditorialFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkSearchCommonBindingsListofSdkSearchWebeditorialGetValueNullable(handle);
  final result = heresdkSearchCommonBindingsListofSdkSearchWebeditorialFromFfi(_handle);
  heresdkSearchCommonBindingsListofSdkSearchWebeditorialReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingsListofSdkSearchWebeditorialReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingsListofSdkSearchWebeditorialReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingsListofSdkSearchWebimageCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_WebImage_create_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchWebimageReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_WebImage_release_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchWebimageInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_WebImage_insert'));
final _heresdkSearchCommonBindingsListofSdkSearchWebimageIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_WebImage_iterator'));
final _heresdkSearchCommonBindingsListofSdkSearchWebimageIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_WebImage_iterator_release_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchWebimageIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_WebImage_iterator_is_valid'));
final _heresdkSearchCommonBindingsListofSdkSearchWebimageIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_WebImage_iterator_increment'));
final _heresdkSearchCommonBindingsListofSdkSearchWebimageIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_WebImage_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingsListofSdkSearchWebimageToFfi(List<WebImage> value) {
  final _result = _heresdkSearchCommonBindingsListofSdkSearchWebimageCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchWebimageToFfi(element);
    _heresdkSearchCommonBindingsListofSdkSearchWebimageInsert(_result, _elementHandle);
    sdkSearchWebimageReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<WebImage> heresdkSearchCommonBindingsListofSdkSearchWebimageFromFfi(Pointer<Void> handle) {
  final result = List<WebImage>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingsListofSdkSearchWebimageIterator(handle);
  while (_heresdkSearchCommonBindingsListofSdkSearchWebimageIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingsListofSdkSearchWebimageIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchWebimageFromFfi(_elementHandle));
    } finally {
      sdkSearchWebimageReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingsListofSdkSearchWebimageIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingsListofSdkSearchWebimageIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingsListofSdkSearchWebimageReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingsListofSdkSearchWebimageReleaseHandle(handle);

final _heresdkSearchCommonBindingsListofSdkSearchWebimageCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_WebImage_create_handle_nullable'));
final _heresdkSearchCommonBindingsListofSdkSearchWebimageReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_WebImage_release_handle_nullable'));
final _heresdkSearchCommonBindingsListofSdkSearchWebimageGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_WebImage_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingsListofSdkSearchWebimageToFfiNullable(List<WebImage> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingsListofSdkSearchWebimageToFfi(value);
  final result = _heresdkSearchCommonBindingsListofSdkSearchWebimageCreateHandleNullable(_handle);
  heresdkSearchCommonBindingsListofSdkSearchWebimageReleaseFfiHandle(_handle);
  return result;
}

List<WebImage> heresdkSearchCommonBindingsListofSdkSearchWebimageFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkSearchCommonBindingsListofSdkSearchWebimageGetValueNullable(handle);
  final result = heresdkSearchCommonBindingsListofSdkSearchWebimageFromFfi(_handle);
  heresdkSearchCommonBindingsListofSdkSearchWebimageReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingsListofSdkSearchWebimageReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingsListofSdkSearchWebimageReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingsListofSdkSearchWebratingCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_WebRating_create_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchWebratingReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_WebRating_release_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchWebratingInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_WebRating_insert'));
final _heresdkSearchCommonBindingsListofSdkSearchWebratingIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_WebRating_iterator'));
final _heresdkSearchCommonBindingsListofSdkSearchWebratingIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_WebRating_iterator_release_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchWebratingIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_WebRating_iterator_is_valid'));
final _heresdkSearchCommonBindingsListofSdkSearchWebratingIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_WebRating_iterator_increment'));
final _heresdkSearchCommonBindingsListofSdkSearchWebratingIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_WebRating_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingsListofSdkSearchWebratingToFfi(List<WebRating> value) {
  final _result = _heresdkSearchCommonBindingsListofSdkSearchWebratingCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchWebratingToFfi(element);
    _heresdkSearchCommonBindingsListofSdkSearchWebratingInsert(_result, _elementHandle);
    sdkSearchWebratingReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<WebRating> heresdkSearchCommonBindingsListofSdkSearchWebratingFromFfi(Pointer<Void> handle) {
  final result = List<WebRating>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingsListofSdkSearchWebratingIterator(handle);
  while (_heresdkSearchCommonBindingsListofSdkSearchWebratingIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingsListofSdkSearchWebratingIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchWebratingFromFfi(_elementHandle));
    } finally {
      sdkSearchWebratingReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingsListofSdkSearchWebratingIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingsListofSdkSearchWebratingIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingsListofSdkSearchWebratingReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingsListofSdkSearchWebratingReleaseHandle(handle);

final _heresdkSearchCommonBindingsListofSdkSearchWebratingCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_WebRating_create_handle_nullable'));
final _heresdkSearchCommonBindingsListofSdkSearchWebratingReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_WebRating_release_handle_nullable'));
final _heresdkSearchCommonBindingsListofSdkSearchWebratingGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_WebRating_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingsListofSdkSearchWebratingToFfiNullable(List<WebRating> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingsListofSdkSearchWebratingToFfi(value);
  final result = _heresdkSearchCommonBindingsListofSdkSearchWebratingCreateHandleNullable(_handle);
  heresdkSearchCommonBindingsListofSdkSearchWebratingReleaseFfiHandle(_handle);
  return result;
}

List<WebRating> heresdkSearchCommonBindingsListofSdkSearchWebratingFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkSearchCommonBindingsListofSdkSearchWebratingGetValueNullable(handle);
  final result = heresdkSearchCommonBindingsListofSdkSearchWebratingFromFfi(_handle);
  heresdkSearchCommonBindingsListofSdkSearchWebratingReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingsListofSdkSearchWebratingReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingsListofSdkSearchWebratingReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingsListofSdkSearchWebsiteaddressCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_WebsiteAddress_create_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchWebsiteaddressReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_WebsiteAddress_release_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchWebsiteaddressInsert = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_WebsiteAddress_insert'));
final _heresdkSearchCommonBindingsListofSdkSearchWebsiteaddressIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_WebsiteAddress_iterator'));
final _heresdkSearchCommonBindingsListofSdkSearchWebsiteaddressIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_WebsiteAddress_iterator_release_handle'));
final _heresdkSearchCommonBindingsListofSdkSearchWebsiteaddressIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_WebsiteAddress_iterator_is_valid'));
final _heresdkSearchCommonBindingsListofSdkSearchWebsiteaddressIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_WebsiteAddress_iterator_increment'));
final _heresdkSearchCommonBindingsListofSdkSearchWebsiteaddressIteratorGet = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_WebsiteAddress_iterator_get'));

Pointer<Void> heresdkSearchCommonBindingsListofSdkSearchWebsiteaddressToFfi(List<WebsiteAddress> value) {
  final _result = _heresdkSearchCommonBindingsListofSdkSearchWebsiteaddressCreateHandle();
  for (final element in value) {
    final _elementHandle = sdkSearchWebsiteaddressToFfi(element);
    _heresdkSearchCommonBindingsListofSdkSearchWebsiteaddressInsert(_result, _elementHandle);
    sdkSearchWebsiteaddressReleaseFfiHandle(_elementHandle);
  }
  return _result;
}

List<WebsiteAddress> heresdkSearchCommonBindingsListofSdkSearchWebsiteaddressFromFfi(Pointer<Void> handle) {
  final result = List<WebsiteAddress>.empty(growable: true);
  final _iteratorHandle = _heresdkSearchCommonBindingsListofSdkSearchWebsiteaddressIterator(handle);
  while (_heresdkSearchCommonBindingsListofSdkSearchWebsiteaddressIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _elementHandle = _heresdkSearchCommonBindingsListofSdkSearchWebsiteaddressIteratorGet(_iteratorHandle);
    try {
      result.add(sdkSearchWebsiteaddressFromFfi(_elementHandle));
    } finally {
      sdkSearchWebsiteaddressReleaseFfiHandle(_elementHandle);
    }
    _heresdkSearchCommonBindingsListofSdkSearchWebsiteaddressIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingsListofSdkSearchWebsiteaddressIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingsListofSdkSearchWebsiteaddressReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingsListofSdkSearchWebsiteaddressReleaseHandle(handle);

final _heresdkSearchCommonBindingsListofSdkSearchWebsiteaddressCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_WebsiteAddress_create_handle_nullable'));
final _heresdkSearchCommonBindingsListofSdkSearchWebsiteaddressReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_WebsiteAddress_release_handle_nullable'));
final _heresdkSearchCommonBindingsListofSdkSearchWebsiteaddressGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_ListOf_sdk_search_WebsiteAddress_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingsListofSdkSearchWebsiteaddressToFfiNullable(List<WebsiteAddress> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingsListofSdkSearchWebsiteaddressToFfi(value);
  final result = _heresdkSearchCommonBindingsListofSdkSearchWebsiteaddressCreateHandleNullable(_handle);
  heresdkSearchCommonBindingsListofSdkSearchWebsiteaddressReleaseFfiHandle(_handle);
  return result;
}

List<WebsiteAddress> heresdkSearchCommonBindingsListofSdkSearchWebsiteaddressFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return [];
  final _handle = _heresdkSearchCommonBindingsListofSdkSearchWebsiteaddressGetValueNullable(handle);
  final result = heresdkSearchCommonBindingsListofSdkSearchWebsiteaddressFromFfi(_handle);
  heresdkSearchCommonBindingsListofSdkSearchWebsiteaddressReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingsListofSdkSearchWebsiteaddressReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingsListofSdkSearchWebsiteaddressReleaseHandleNullable(handle);

final _heresdkSearchCommonBindingsMapofStringToStringCreateHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(),
    Pointer<Void> Function()
  >('here_sdk_heresdk_search_common_bindings_MapOf_String_to_String_create_handle'));
final _heresdkSearchCommonBindingsMapofStringToStringReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_MapOf_String_to_String_release_handle'));
final _heresdkSearchCommonBindingsMapofStringToStringPut = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>),
    void Function(Pointer<Void>, Pointer<Void>, Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_MapOf_String_to_String_put'));
final _heresdkSearchCommonBindingsMapofStringToStringIterator = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_MapOf_String_to_String_iterator'));
final _heresdkSearchCommonBindingsMapofStringToStringIteratorReleaseHandle = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_MapOf_String_to_String_iterator_release_handle'));
final _heresdkSearchCommonBindingsMapofStringToStringIteratorIsValid = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Int8 Function(Pointer<Void>, Pointer<Void>),
    int Function(Pointer<Void>, Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_MapOf_String_to_String_iterator_is_valid'));
final _heresdkSearchCommonBindingsMapofStringToStringIteratorIncrement = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_MapOf_String_to_String_iterator_increment'));
final _heresdkSearchCommonBindingsMapofStringToStringIteratorGetKey = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_MapOf_String_to_String_iterator_get_key'));
final _heresdkSearchCommonBindingsMapofStringToStringIteratorGetValue = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
>('here_sdk_heresdk_search_common_bindings_MapOf_String_to_String_iterator_get_value'));

Pointer<Void> heresdkSearchCommonBindingsMapofStringToStringToFfi(Map<String, String> value) {
  final _result = _heresdkSearchCommonBindingsMapofStringToStringCreateHandle();
  for (final entry in value.entries) {
    final _keyHandle = stringToFfi(entry.key);
    final _valueHandle = stringToFfi(entry.value);
    _heresdkSearchCommonBindingsMapofStringToStringPut(_result, _keyHandle, _valueHandle);
    stringReleaseFfiHandle(_keyHandle);
    stringReleaseFfiHandle(_valueHandle);
  }
  return _result;
}

Map<String, String> heresdkSearchCommonBindingsMapofStringToStringFromFfi(Pointer<Void> handle) {
  final result = Map<String, String>();
  final _iteratorHandle = _heresdkSearchCommonBindingsMapofStringToStringIterator(handle);
  while (_heresdkSearchCommonBindingsMapofStringToStringIteratorIsValid(handle, _iteratorHandle) != 0) {
    final _keyHandle = _heresdkSearchCommonBindingsMapofStringToStringIteratorGetKey(_iteratorHandle);
    final _valueHandle = _heresdkSearchCommonBindingsMapofStringToStringIteratorGetValue(_iteratorHandle);
    try {
      result[stringFromFfi(_keyHandle)] =
        stringFromFfi(_valueHandle);
    } finally {
      stringReleaseFfiHandle(_keyHandle);
      stringReleaseFfiHandle(_valueHandle);
    }
    _heresdkSearchCommonBindingsMapofStringToStringIteratorIncrement(_iteratorHandle);
  }
  _heresdkSearchCommonBindingsMapofStringToStringIteratorReleaseHandle(_iteratorHandle);
  return result;
}

void heresdkSearchCommonBindingsMapofStringToStringReleaseFfiHandle(Pointer<Void> handle) => _heresdkSearchCommonBindingsMapofStringToStringReleaseHandle(handle);

final _heresdkSearchCommonBindingsMapofStringToStringCreateHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_MapOf_String_to_String_create_handle_nullable'));
final _heresdkSearchCommonBindingsMapofStringToStringReleaseHandleNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Void Function(Pointer<Void>),
    void Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_MapOf_String_to_String_release_handle_nullable'));
final _heresdkSearchCommonBindingsMapofStringToStringGetValueNullable = __lib.catchArgumentError(() => __lib.nativeLibrary.lookupFunction<
    Pointer<Void> Function(Pointer<Void>),
    Pointer<Void> Function(Pointer<Void>)
  >('here_sdk_heresdk_search_common_bindings_MapOf_String_to_String_get_value_nullable'));

Pointer<Void> heresdkSearchCommonBindingsMapofStringToStringToFfiNullable(Map<String, String> value) {
  if (value == null) return Pointer<Void>.fromAddress(0);
  final _handle = heresdkSearchCommonBindingsMapofStringToStringToFfi(value);
  final result = _heresdkSearchCommonBindingsMapofStringToStringCreateHandleNullable(_handle);
  heresdkSearchCommonBindingsMapofStringToStringReleaseFfiHandle(_handle);
  return result;
}

Map<String, String> heresdkSearchCommonBindingsMapofStringToStringFromFfiNullable(Pointer<Void> handle) {
  if (handle.address == 0) return {};
  final _handle = _heresdkSearchCommonBindingsMapofStringToStringGetValueNullable(handle);
  final result = heresdkSearchCommonBindingsMapofStringToStringFromFfi(_handle);
  heresdkSearchCommonBindingsMapofStringToStringReleaseFfiHandle(_handle);
  return result;
}

void heresdkSearchCommonBindingsMapofStringToStringReleaseFfiHandleNullable(Pointer<Void> handle) =>
  _heresdkSearchCommonBindingsMapofStringToStringReleaseHandleNullable(handle);


